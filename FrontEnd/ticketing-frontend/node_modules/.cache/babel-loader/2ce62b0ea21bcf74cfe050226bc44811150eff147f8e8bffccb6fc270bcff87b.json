{"ast":null,"code":"\"use client\";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};import*as React from'react';import CheckCircleFilled from\"@ant-design/icons/es/icons/CheckCircleFilled\";import CloseCircleFilled from\"@ant-design/icons/es/icons/CloseCircleFilled\";import CloseOutlined from\"@ant-design/icons/es/icons/CloseOutlined\";import ExclamationCircleFilled from\"@ant-design/icons/es/icons/ExclamationCircleFilled\";import InfoCircleFilled from\"@ant-design/icons/es/icons/InfoCircleFilled\";import LoadingOutlined from\"@ant-design/icons/es/icons/LoadingOutlined\";import classNames from'classnames';import{Notice}from'rc-notification';import{ConfigContext}from'../config-provider';import useCSSVarCls from'../config-provider/hooks/useCSSVarCls';import useStyle from'./style';import PurePanelStyle from'./style/pure-panel';export const TypeIcon={info:/*#__PURE__*/React.createElement(InfoCircleFilled,null),success:/*#__PURE__*/React.createElement(CheckCircleFilled,null),error:/*#__PURE__*/React.createElement(CloseCircleFilled,null),warning:/*#__PURE__*/React.createElement(ExclamationCircleFilled,null),loading:/*#__PURE__*/React.createElement(LoadingOutlined,null)};export function getCloseIcon(prefixCls,closeIcon){if(closeIcon===null||closeIcon===false){return null;}return closeIcon||(/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(prefixCls,\"-close-x\")},/*#__PURE__*/React.createElement(CloseOutlined,{className:\"\".concat(prefixCls,\"-close-icon\")})));}const typeToIcon={success:CheckCircleFilled,info:InfoCircleFilled,error:CloseCircleFilled,warning:ExclamationCircleFilled};export const PureContent=props=>{const{prefixCls,icon,type,message,description,btn,role='alert'}=props;let iconNode=null;if(icon){iconNode=/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(prefixCls,\"-icon\")},icon);}else if(type){iconNode=/*#__PURE__*/React.createElement(typeToIcon[type]||null,{className:classNames(\"\".concat(prefixCls,\"-icon\"),\"\".concat(prefixCls,\"-icon-\").concat(type))});}return/*#__PURE__*/React.createElement(\"div\",{className:classNames({[\"\".concat(prefixCls,\"-with-icon\")]:iconNode}),role:role},iconNode,/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-message\")},message),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-description\")},description),btn&&/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-btn\")},btn));};/** @private Internal Component. Do not use in your production. */const PurePanel=props=>{const{prefixCls:staticPrefixCls,className,icon,type,message,description,btn,closable=true,closeIcon,className:notificationClassName}=props,restProps=__rest(props,[\"prefixCls\",\"className\",\"icon\",\"type\",\"message\",\"description\",\"btn\",\"closable\",\"closeIcon\",\"className\"]);const{getPrefixCls}=React.useContext(ConfigContext);const prefixCls=staticPrefixCls||getPrefixCls('notification');const noticePrefixCls=\"\".concat(prefixCls,\"-notice\");const rootCls=useCSSVarCls(prefixCls);const[wrapCSSVar,hashId,cssVarCls]=useStyle(prefixCls,rootCls);return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\",{className:classNames(\"\".concat(noticePrefixCls,\"-pure-panel\"),hashId,className,cssVarCls,rootCls)},/*#__PURE__*/React.createElement(PurePanelStyle,{prefixCls:prefixCls}),/*#__PURE__*/React.createElement(Notice,Object.assign({},restProps,{prefixCls:prefixCls,eventKey:\"pure\",duration:null,closable:closable,className:classNames({notificationClassName}),closeIcon:getCloseIcon(prefixCls,closeIcon),content:/*#__PURE__*/React.createElement(PureContent,{prefixCls:noticePrefixCls,icon:icon,type:type,message:message,description:description,btn:btn})}))));};export default PurePanel;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","CheckCircleFilled","CloseCircleFilled","CloseOutlined","ExclamationCircleFilled","InfoCircleFilled","LoadingOutlined","classNames","Notice","ConfigContext","useCSSVarCls","useStyle","PurePanelStyle","TypeIcon","info","createElement","success","error","warning","loading","getCloseIcon","prefixCls","closeIcon","className","concat","typeToIcon","PureContent","props","icon","type","message","description","btn","role","iconNode","PurePanel","staticPrefixCls","closable","notificationClassName","restProps","getPrefixCls","useContext","noticePrefixCls","rootCls","wrapCSSVar","hashId","cssVarCls","assign","eventKey","duration","content"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/notification/PurePanel.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport { Notice } from 'rc-notification';\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useStyle from './style';\nimport PurePanelStyle from './style/pure-panel';\nexport const TypeIcon = {\n  info: /*#__PURE__*/React.createElement(InfoCircleFilled, null),\n  success: /*#__PURE__*/React.createElement(CheckCircleFilled, null),\n  error: /*#__PURE__*/React.createElement(CloseCircleFilled, null),\n  warning: /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n  loading: /*#__PURE__*/React.createElement(LoadingOutlined, null)\n};\nexport function getCloseIcon(prefixCls, closeIcon) {\n  if (closeIcon === null || closeIcon === false) {\n    return null;\n  }\n  return closeIcon || ( /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-close-x`\n  }, /*#__PURE__*/React.createElement(CloseOutlined, {\n    className: `${prefixCls}-close-icon`\n  })));\n}\nconst typeToIcon = {\n  success: CheckCircleFilled,\n  info: InfoCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled\n};\nexport const PureContent = props => {\n  const {\n    prefixCls,\n    icon,\n    type,\n    message,\n    description,\n    btn,\n    role = 'alert'\n  } = props;\n  let iconNode = null;\n  if (icon) {\n    iconNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-icon`\n    }, icon);\n  } else if (type) {\n    iconNode = /*#__PURE__*/React.createElement(typeToIcon[type] || null, {\n      className: classNames(`${prefixCls}-icon`, `${prefixCls}-icon-${type}`)\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames({\n      [`${prefixCls}-with-icon`]: iconNode\n    }),\n    role: role\n  }, iconNode, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-message`\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-description`\n  }, description), btn && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-btn`\n  }, btn));\n};\n/** @private Internal Component. Do not use in your production. */\nconst PurePanel = props => {\n  const {\n      prefixCls: staticPrefixCls,\n      className,\n      icon,\n      type,\n      message,\n      description,\n      btn,\n      closable = true,\n      closeIcon,\n      className: notificationClassName\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"icon\", \"type\", \"message\", \"description\", \"btn\", \"closable\", \"closeIcon\", \"className\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  const noticePrefixCls = `${prefixCls}-notice`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${noticePrefixCls}-pure-panel`, hashId, className, cssVarCls, rootCls)\n  }, /*#__PURE__*/React.createElement(PurePanelStyle, {\n    prefixCls: prefixCls\n  }), /*#__PURE__*/React.createElement(Notice, Object.assign({}, restProps, {\n    prefixCls: prefixCls,\n    eventKey: \"pure\",\n    duration: null,\n    closable: closable,\n    className: classNames({\n      notificationClassName\n    }),\n    closeIcon: getCloseIcon(prefixCls, closeIcon),\n    content: /*#__PURE__*/React.createElement(PureContent, {\n      prefixCls: noticePrefixCls,\n      icon: icon,\n      type: type,\n      message: message,\n      description: description,\n      btn: btn\n    })\n  }))));\n};\nexport default PurePanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}