{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import{useContext}from'@rc-component/context';import classNames from'classnames';import*as React from'react';import{getCellProps}from\"../Body/BodyRow\";import Cell from\"../Cell\";import{GridContext}from\"./context\";/**\n * Return the width of the column by `colSpan`.\n * When `colSpan` is `0` will be trade as `1`.\n */export function getColumnWidth(colIndex,colSpan,columnsOffset){var mergedColSpan=colSpan||1;return columnsOffset[colIndex+mergedColSpan]-(columnsOffset[colIndex]||0);}function VirtualCell(props){var rowInfo=props.rowInfo,column=props.column,colIndex=props.colIndex,indent=props.indent,index=props.index,component=props.component,renderIndex=props.renderIndex,record=props.record,style=props.style,className=props.className,inverse=props.inverse,getHeight=props.getHeight;var render=column.render,dataIndex=column.dataIndex,columnClassName=column.className,colWidth=column.width;var _useContext=useContext(GridContext,['columnsOffset']),columnsOffset=_useContext.columnsOffset;var _getCellProps=getCellProps(rowInfo,column,colIndex,indent,index),key=_getCellProps.key,fixedInfo=_getCellProps.fixedInfo,appendCellNode=_getCellProps.appendCellNode,additionalCellProps=_getCellProps.additionalCellProps;var cellStyle=additionalCellProps.style,_additionalCellProps$=additionalCellProps.colSpan,colSpan=_additionalCellProps$===void 0?1:_additionalCellProps$,_additionalCellProps$2=additionalCellProps.rowSpan,rowSpan=_additionalCellProps$2===void 0?1:_additionalCellProps$2;// ========================= ColWidth =========================\n// column width\nvar startColIndex=colIndex-1;var concatColWidth=getColumnWidth(startColIndex,colSpan,columnsOffset);// margin offset\nvar marginOffset=colSpan>1?colWidth-concatColWidth:0;// ========================== Style ===========================\nvar mergedStyle=_objectSpread(_objectSpread(_objectSpread({},cellStyle),style),{},{flex:\"0 0 \".concat(concatColWidth,\"px\"),width:\"\".concat(concatColWidth,\"px\"),marginRight:marginOffset,pointerEvents:'auto'});// When `colSpan` or `rowSpan` is `0`, should skip render.\nvar needHide=React.useMemo(function(){if(inverse){return rowSpan<=1;}else{return colSpan===0||rowSpan===0||rowSpan>1;}},[rowSpan,colSpan,inverse]);// 0 rowSpan or colSpan should not render\nif(needHide){mergedStyle.visibility='hidden';}else if(inverse){mergedStyle.height=getHeight===null||getHeight===void 0?void 0:getHeight(rowSpan);}var mergedRender=needHide?function(){return null;}:render;// ========================== Render ==========================\nvar cellSpan={};// Virtual should reset `colSpan` & `rowSpan`\nif(rowSpan===0||colSpan===0){cellSpan.rowSpan=1;cellSpan.colSpan=1;}return/*#__PURE__*/React.createElement(Cell,_extends({className:classNames(columnClassName,className),ellipsis:column.ellipsis,align:column.align,scope:column.rowScope,component:component,prefixCls:rowInfo.prefixCls,key:key,record:record,index:index,renderIndex:renderIndex,dataIndex:dataIndex,render:mergedRender,shouldCellUpdate:column.shouldCellUpdate},fixedInfo,{appendNode:appendCellNode,additionalProps:_objectSpread(_objectSpread({},additionalCellProps),{},{style:mergedStyle},cellSpan)}));}export default VirtualCell;","map":{"version":3,"names":["_extends","_objectSpread","useContext","classNames","React","getCellProps","Cell","GridContext","getColumnWidth","colIndex","colSpan","columnsOffset","mergedColSpan","VirtualCell","props","rowInfo","column","indent","index","component","renderIndex","record","style","className","inverse","getHeight","render","dataIndex","columnClassName","colWidth","width","_useContext","_getCellProps","key","fixedInfo","appendCellNode","additionalCellProps","cellStyle","_additionalCellProps$","_additionalCellProps$2","rowSpan","startColIndex","concatColWidth","marginOffset","mergedStyle","flex","concat","marginRight","pointerEvents","needHide","useMemo","visibility","height","mergedRender","cellSpan","createElement","ellipsis","align","scope","rowScope","prefixCls","shouldCellUpdate","appendNode","additionalProps"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-table/es/VirtualTable/VirtualCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { getCellProps } from \"../Body/BodyRow\";\nimport Cell from \"../Cell\";\nimport { GridContext } from \"./context\";\n/**\n * Return the width of the column by `colSpan`.\n * When `colSpan` is `0` will be trade as `1`.\n */\nexport function getColumnWidth(colIndex, colSpan, columnsOffset) {\n  var mergedColSpan = colSpan || 1;\n  return columnsOffset[colIndex + mergedColSpan] - (columnsOffset[colIndex] || 0);\n}\nfunction VirtualCell(props) {\n  var rowInfo = props.rowInfo,\n    column = props.column,\n    colIndex = props.colIndex,\n    indent = props.indent,\n    index = props.index,\n    component = props.component,\n    renderIndex = props.renderIndex,\n    record = props.record,\n    style = props.style,\n    className = props.className,\n    inverse = props.inverse,\n    getHeight = props.getHeight;\n  var render = column.render,\n    dataIndex = column.dataIndex,\n    columnClassName = column.className,\n    colWidth = column.width;\n  var _useContext = useContext(GridContext, ['columnsOffset']),\n    columnsOffset = _useContext.columnsOffset;\n  var _getCellProps = getCellProps(rowInfo, column, colIndex, indent, index),\n    key = _getCellProps.key,\n    fixedInfo = _getCellProps.fixedInfo,\n    appendCellNode = _getCellProps.appendCellNode,\n    additionalCellProps = _getCellProps.additionalCellProps;\n  var cellStyle = additionalCellProps.style,\n    _additionalCellProps$ = additionalCellProps.colSpan,\n    colSpan = _additionalCellProps$ === void 0 ? 1 : _additionalCellProps$,\n    _additionalCellProps$2 = additionalCellProps.rowSpan,\n    rowSpan = _additionalCellProps$2 === void 0 ? 1 : _additionalCellProps$2;\n\n  // ========================= ColWidth =========================\n  // column width\n  var startColIndex = colIndex - 1;\n  var concatColWidth = getColumnWidth(startColIndex, colSpan, columnsOffset);\n\n  // margin offset\n  var marginOffset = colSpan > 1 ? colWidth - concatColWidth : 0;\n\n  // ========================== Style ===========================\n  var mergedStyle = _objectSpread(_objectSpread(_objectSpread({}, cellStyle), style), {}, {\n    flex: \"0 0 \".concat(concatColWidth, \"px\"),\n    width: \"\".concat(concatColWidth, \"px\"),\n    marginRight: marginOffset,\n    pointerEvents: 'auto'\n  });\n\n  // When `colSpan` or `rowSpan` is `0`, should skip render.\n  var needHide = React.useMemo(function () {\n    if (inverse) {\n      return rowSpan <= 1;\n    } else {\n      return colSpan === 0 || rowSpan === 0 || rowSpan > 1;\n    }\n  }, [rowSpan, colSpan, inverse]);\n\n  // 0 rowSpan or colSpan should not render\n  if (needHide) {\n    mergedStyle.visibility = 'hidden';\n  } else if (inverse) {\n    mergedStyle.height = getHeight === null || getHeight === void 0 ? void 0 : getHeight(rowSpan);\n  }\n  var mergedRender = needHide ? function () {\n    return null;\n  } : render;\n\n  // ========================== Render ==========================\n  var cellSpan = {};\n\n  // Virtual should reset `colSpan` & `rowSpan`\n  if (rowSpan === 0 || colSpan === 0) {\n    cellSpan.rowSpan = 1;\n    cellSpan.colSpan = 1;\n  }\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: classNames(columnClassName, className),\n    ellipsis: column.ellipsis,\n    align: column.align,\n    scope: column.rowScope,\n    component: component,\n    prefixCls: rowInfo.prefixCls,\n    key: key,\n    record: record,\n    index: index,\n    renderIndex: renderIndex,\n    dataIndex: dataIndex,\n    render: mergedRender,\n    shouldCellUpdate: column.shouldCellUpdate\n  }, fixedInfo, {\n    appendNode: appendCellNode,\n    additionalProps: _objectSpread(_objectSpread({}, additionalCellProps), {}, {\n      style: mergedStyle\n    }, cellSpan)\n  }));\n}\nexport default VirtualCell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}