{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport { useRef, useState } from 'react';\n\n/**\n * Help to merge callback with `useLayoutEffect`.\n * One time will only trigger once.\n */\nexport default function useUpdate(callback) {\n  _s();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var effectRef = useRef(0);\n  var callbackRef = useRef();\n  callbackRef.current = callback;\n\n  // Trigger on `useLayoutEffect`\n  useLayoutUpdateEffect(function () {\n    var _callbackRef$current;\n    (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 || _callbackRef$current.call(callbackRef);\n  }, [count]);\n\n  // Trigger to update count\n  return function () {\n    if (effectRef.current !== count) {\n      return;\n    }\n    effectRef.current += 1;\n    setCount(effectRef.current);\n  };\n}\n_s(useUpdate, \"nG/5kYqmYPJL4fGTa12I6fWe+7E=\", false, function () {\n  return [useLayoutUpdateEffect];\n});\nexport function useUpdateState(defaultState) {\n  _s2();\n  var batchRef = useRef([]);\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forceUpdate = _useState4[1];\n  var state = useRef(typeof defaultState === 'function' ? defaultState() : defaultState);\n  var flushUpdate = useUpdate(function () {\n    var current = state.current;\n    batchRef.current.forEach(function (callback) {\n      current = callback(current);\n    });\n    batchRef.current = [];\n    state.current = current;\n    forceUpdate({});\n  });\n  function updater(callback) {\n    batchRef.current.push(callback);\n    flushUpdate();\n  }\n  return [state.current, updater];\n}\n_s2(useUpdateState, \"ukkqR/qP/Fc4T4Cpl8sd6h7nJlc=\", false, function () {\n  return [useUpdate];\n});","map":{"version":3,"names":["_slicedToArray","useLayoutUpdateEffect","useRef","useState","useUpdate","callback","_s","_useState","_useState2","count","setCount","effectRef","callbackRef","current","_callbackRef$current","call","useUpdateState","defaultState","_s2","batchRef","_useState3","_useState4","forceUpdate","state","flushUpdate","forEach","updater","push"],"sources":["/Users/jmmallon/git/a/AlamedaFoodBankTicketSystem/FrontEnd/ticketing-frontend/src/node_modules/rc-tabs/es/hooks/useUpdate.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport { useRef, useState } from 'react';\n\n/**\n * Help to merge callback with `useLayoutEffect`.\n * One time will only trigger once.\n */\nexport default function useUpdate(callback) {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var effectRef = useRef(0);\n  var callbackRef = useRef();\n  callbackRef.current = callback;\n\n  // Trigger on `useLayoutEffect`\n  useLayoutUpdateEffect(function () {\n    var _callbackRef$current;\n    (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 || _callbackRef$current.call(callbackRef);\n  }, [count]);\n\n  // Trigger to update count\n  return function () {\n    if (effectRef.current !== count) {\n      return;\n    }\n    effectRef.current += 1;\n    setCount(effectRef.current);\n  };\n}\nexport function useUpdateState(defaultState) {\n  var batchRef = useRef([]);\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    forceUpdate = _useState4[1];\n  var state = useRef(typeof defaultState === 'function' ? defaultState() : defaultState);\n  var flushUpdate = useUpdate(function () {\n    var current = state.current;\n    batchRef.current.forEach(function (callback) {\n      current = callback(current);\n    });\n    batchRef.current = [];\n    state.current = current;\n    forceUpdate({});\n  });\n  function updater(callback) {\n    batchRef.current.push(callback);\n    flushUpdate();\n  }\n  return [state.current, updater];\n}"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAExC;AACA;AACA;AACA;AACA,eAAe,SAASC,SAASA,CAACC,QAAQ,EAAE;EAAAC,EAAA;EAC1C,IAAIC,SAAS,GAAGJ,QAAQ,CAAC,CAAC,CAAC;IACzBK,UAAU,GAAGR,cAAc,CAACO,SAAS,EAAE,CAAC,CAAC;IACzCE,KAAK,GAAGD,UAAU,CAAC,CAAC,CAAC;IACrBE,QAAQ,GAAGF,UAAU,CAAC,CAAC,CAAC;EAC1B,IAAIG,SAAS,GAAGT,MAAM,CAAC,CAAC,CAAC;EACzB,IAAIU,WAAW,GAAGV,MAAM,CAAC,CAAC;EAC1BU,WAAW,CAACC,OAAO,GAAGR,QAAQ;;EAE9B;EACAJ,qBAAqB,CAAC,YAAY;IAChC,IAAIa,oBAAoB;IACxB,CAACA,oBAAoB,GAAGF,WAAW,CAACC,OAAO,MAAM,IAAI,IAAIC,oBAAoB,KAAK,KAAK,CAAC,IAAIA,oBAAoB,CAACC,IAAI,CAACH,WAAW,CAAC;EACpI,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;;EAEX;EACA,OAAO,YAAY;IACjB,IAAIE,SAAS,CAACE,OAAO,KAAKJ,KAAK,EAAE;MAC/B;IACF;IACAE,SAAS,CAACE,OAAO,IAAI,CAAC;IACtBH,QAAQ,CAACC,SAAS,CAACE,OAAO,CAAC;EAC7B,CAAC;AACH;AAACP,EAAA,CAvBuBF,SAAS;EAAA,QAU/BH,qBAAqB;AAAA;AAcvB,OAAO,SAASe,cAAcA,CAACC,YAAY,EAAE;EAAAC,GAAA;EAC3C,IAAIC,QAAQ,GAAGjB,MAAM,CAAC,EAAE,CAAC;EACzB,IAAIkB,UAAU,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3BkB,UAAU,GAAGrB,cAAc,CAACoB,UAAU,EAAE,CAAC,CAAC;IAC1CE,WAAW,GAAGD,UAAU,CAAC,CAAC,CAAC;EAC7B,IAAIE,KAAK,GAAGrB,MAAM,CAAC,OAAOe,YAAY,KAAK,UAAU,GAAGA,YAAY,CAAC,CAAC,GAAGA,YAAY,CAAC;EACtF,IAAIO,WAAW,GAAGpB,SAAS,CAAC,YAAY;IACtC,IAAIS,OAAO,GAAGU,KAAK,CAACV,OAAO;IAC3BM,QAAQ,CAACN,OAAO,CAACY,OAAO,CAAC,UAAUpB,QAAQ,EAAE;MAC3CQ,OAAO,GAAGR,QAAQ,CAACQ,OAAO,CAAC;IAC7B,CAAC,CAAC;IACFM,QAAQ,CAACN,OAAO,GAAG,EAAE;IACrBU,KAAK,CAACV,OAAO,GAAGA,OAAO;IACvBS,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;EACF,SAASI,OAAOA,CAACrB,QAAQ,EAAE;IACzBc,QAAQ,CAACN,OAAO,CAACc,IAAI,CAACtB,QAAQ,CAAC;IAC/BmB,WAAW,CAAC,CAAC;EACf;EACA,OAAO,CAACD,KAAK,CAACV,OAAO,EAAEa,OAAO,CAAC;AACjC;AAACR,GAAA,CApBeF,cAAc;EAAA,QAMVZ,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}