{"ast":null,"code":"import{unit}from'@ant-design/cssinjs';import{TinyColor}from'@ctrl/tinycolor';import{resetComponent}from'../../style';import{genStyleHooks,mergeToken}from'../../theme/internal';const genQRCodeStyle=token=>{const{componentCls,lineWidth,lineType,colorSplit}=token;return{[componentCls]:Object.assign(Object.assign({},resetComponent(token)),{display:'flex',justifyContent:'center',alignItems:'center',padding:token.paddingSM,backgroundColor:token.colorWhite,borderRadius:token.borderRadiusLG,border:\"\".concat(unit(lineWidth),\" \").concat(lineType,\" \").concat(colorSplit),position:'relative',overflow:'hidden',[\"& > \".concat(componentCls,\"-mask\")]:{position:'absolute',insetBlockStart:0,insetInlineStart:0,zIndex:10,display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',width:'100%',height:'100%',color:token.colorText,lineHeight:token.lineHeight,background:token.QRCodeMaskBackgroundColor,textAlign:'center',[\"& > \".concat(componentCls,\"-expired, & > \").concat(componentCls,\"-scanned\")]:{color:token.QRCodeTextColor}},'> canvas':{alignSelf:'stretch',flex:'auto',minWidth:0},'&-icon':{marginBlockEnd:token.marginXS,fontSize:token.controlHeight}}),[\"\".concat(componentCls,\"-borderless\")]:{borderColor:'transparent'}};};export const prepareComponentToken=token=>({QRCodeMaskBackgroundColor:new TinyColor(token.colorBgContainer).setAlpha(0.96).toRgbString()});export default genStyleHooks('QRCode',token=>{const mergedToken=mergeToken(token,{QRCodeTextColor:token.colorText});return genQRCodeStyle(mergedToken);},prepareComponentToken);","map":{"version":3,"names":["unit","TinyColor","resetComponent","genStyleHooks","mergeToken","genQRCodeStyle","token","componentCls","lineWidth","lineType","colorSplit","Object","assign","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","concat","position","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","width","height","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeTextColor","alignSelf","flex","minWidth","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor","prepareComponentToken","colorBgContainer","setAlpha","toRgbString","mergedToken"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/qr-code/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${unit(lineWidth)} ${lineType} ${colorSplit}`,\n      position: 'relative',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired, & > ${componentCls}-scanned`]: {\n          color: token.QRCodeTextColor\n        }\n      },\n      '> canvas': {\n        alignSelf: 'stretch',\n        flex: 'auto',\n        minWidth: 0\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport const prepareComponentToken = token => ({\n  QRCodeMaskBackgroundColor: new TinyColor(token.colorBgContainer).setAlpha(0.96).toRgbString()\n});\nexport default genStyleHooks('QRCode', token => {\n  const mergedToken = mergeToken(token, {\n    QRCodeTextColor: token.colorText\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);"],"mappings":"AAAA,OAASA,IAAI,KAAQ,qBAAqB,CAC1C,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,OAASC,cAAc,KAAQ,aAAa,CAC5C,OAASC,aAAa,CAAEC,UAAU,KAAQ,sBAAsB,CAChE,KAAM,CAAAC,cAAc,CAAGC,KAAK,EAAI,CAC9B,KAAM,CACJC,YAAY,CACZC,SAAS,CACTC,QAAQ,CACRC,UACF,CAAC,CAAGJ,KAAK,CACT,MAAO,CACL,CAACC,YAAY,EAAGI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEV,cAAc,CAACI,KAAK,CAAC,CAAC,CAAE,CACtEO,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,OAAO,CAAEV,KAAK,CAACW,SAAS,CACxBC,eAAe,CAAEZ,KAAK,CAACa,UAAU,CACjCC,YAAY,CAAEd,KAAK,CAACe,cAAc,CAClCC,MAAM,IAAAC,MAAA,CAAKvB,IAAI,CAACQ,SAAS,CAAC,MAAAe,MAAA,CAAId,QAAQ,MAAAc,MAAA,CAAIb,UAAU,CAAE,CACtDc,QAAQ,CAAE,UAAU,CACpBC,QAAQ,CAAE,QAAQ,CAClB,QAAAF,MAAA,CAAQhB,YAAY,WAAU,CAC5BiB,QAAQ,CAAE,UAAU,CACpBE,eAAe,CAAE,CAAC,CAClBC,gBAAgB,CAAE,CAAC,CACnBC,MAAM,CAAE,EAAE,CACVf,OAAO,CAAE,MAAM,CACfgB,aAAa,CAAE,QAAQ,CACvBf,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBe,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE1B,KAAK,CAAC2B,SAAS,CACtBC,UAAU,CAAE5B,KAAK,CAAC4B,UAAU,CAC5BC,UAAU,CAAE7B,KAAK,CAAC8B,yBAAyB,CAC3CC,SAAS,CAAE,QAAQ,CACnB,QAAAd,MAAA,CAAQhB,YAAY,mBAAAgB,MAAA,CAAiBhB,YAAY,cAAa,CAC5DyB,KAAK,CAAE1B,KAAK,CAACgC,eACf,CACF,CAAC,CACD,UAAU,CAAE,CACVC,SAAS,CAAE,SAAS,CACpBC,IAAI,CAAE,MAAM,CACZC,QAAQ,CAAE,CACZ,CAAC,CACD,QAAQ,CAAE,CACRC,cAAc,CAAEpC,KAAK,CAACqC,QAAQ,CAC9BC,QAAQ,CAAEtC,KAAK,CAACuC,aAClB,CACF,CAAC,CAAC,CACF,IAAAtB,MAAA,CAAIhB,YAAY,iBAAgB,CAC9BuC,WAAW,CAAE,aACf,CACF,CAAC,CACH,CAAC,CACD,MAAO,MAAM,CAAAC,qBAAqB,CAAGzC,KAAK,GAAK,CAC7C8B,yBAAyB,CAAE,GAAI,CAAAnC,SAAS,CAACK,KAAK,CAAC0C,gBAAgB,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,CAACC,WAAW,CAAC,CAC9F,CAAC,CAAC,CACF,cAAe,CAAA/C,aAAa,CAAC,QAAQ,CAAEG,KAAK,EAAI,CAC9C,KAAM,CAAA6C,WAAW,CAAG/C,UAAU,CAACE,KAAK,CAAE,CACpCgC,eAAe,CAAEhC,KAAK,CAAC2B,SACzB,CAAC,CAAC,CACF,MAAO,CAAA5B,cAAc,CAAC8C,WAAW,CAAC,CACpC,CAAC,CAAEJ,qBAAqB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}