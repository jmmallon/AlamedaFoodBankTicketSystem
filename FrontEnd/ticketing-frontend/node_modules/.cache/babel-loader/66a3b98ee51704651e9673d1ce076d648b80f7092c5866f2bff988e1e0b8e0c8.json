{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport useEntities from \"./useEntities\";\nexport default function useOptions(mergedFieldNames, options) {\n  _s();\n  var mergedOptions = React.useMemo(function () {\n    return options || [];\n  }, [options]);\n\n  // Only used in multiple mode, this fn will not call in single mode\n  var getPathKeyEntities = useEntities(mergedOptions, mergedFieldNames);\n\n  /** Convert path key back to value format */\n  var getValueByKeyPath = React.useCallback(function (pathKeys) {\n    var keyPathEntities = getPathKeyEntities();\n    return pathKeys.map(function (pathKey) {\n      var nodes = keyPathEntities[pathKey].nodes;\n      return nodes.map(function (node) {\n        return node[mergedFieldNames.value];\n      });\n    });\n  }, [getPathKeyEntities, mergedFieldNames]);\n  return [mergedOptions, getPathKeyEntities, getValueByKeyPath];\n}\n_s(useOptions, \"lMNV6wFCtAk0+pkiVF6Sxs1AmC0=\", false, function () {\n  return [useEntities];\n});","map":{"version":3,"names":["React","useEntities","useOptions","mergedFieldNames","options","_s","mergedOptions","useMemo","getPathKeyEntities","getValueByKeyPath","useCallback","pathKeys","keyPathEntities","map","pathKey","nodes","node","value"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-cascader/es/hooks/useOptions.js"],"sourcesContent":["import * as React from 'react';\nimport useEntities from \"./useEntities\";\nexport default function useOptions(mergedFieldNames, options) {\n  var mergedOptions = React.useMemo(function () {\n    return options || [];\n  }, [options]);\n\n  // Only used in multiple mode, this fn will not call in single mode\n  var getPathKeyEntities = useEntities(mergedOptions, mergedFieldNames);\n\n  /** Convert path key back to value format */\n  var getValueByKeyPath = React.useCallback(function (pathKeys) {\n    var keyPathEntities = getPathKeyEntities();\n    return pathKeys.map(function (pathKey) {\n      var nodes = keyPathEntities[pathKey].nodes;\n      return nodes.map(function (node) {\n        return node[mergedFieldNames.value];\n      });\n    });\n  }, [getPathKeyEntities, mergedFieldNames]);\n  return [mergedOptions, getPathKeyEntities, getValueByKeyPath];\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,WAAW,MAAM,eAAe;AACvC,eAAe,SAASC,UAAUA,CAACC,gBAAgB,EAAEC,OAAO,EAAE;EAAAC,EAAA;EAC5D,IAAIC,aAAa,GAAGN,KAAK,CAACO,OAAO,CAAC,YAAY;IAC5C,OAAOH,OAAO,IAAI,EAAE;EACtB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAEb;EACA,IAAII,kBAAkB,GAAGP,WAAW,CAACK,aAAa,EAAEH,gBAAgB,CAAC;;EAErE;EACA,IAAIM,iBAAiB,GAAGT,KAAK,CAACU,WAAW,CAAC,UAAUC,QAAQ,EAAE;IAC5D,IAAIC,eAAe,GAAGJ,kBAAkB,CAAC,CAAC;IAC1C,OAAOG,QAAQ,CAACE,GAAG,CAAC,UAAUC,OAAO,EAAE;MACrC,IAAIC,KAAK,GAAGH,eAAe,CAACE,OAAO,CAAC,CAACC,KAAK;MAC1C,OAAOA,KAAK,CAACF,GAAG,CAAC,UAAUG,IAAI,EAAE;QAC/B,OAAOA,IAAI,CAACb,gBAAgB,CAACc,KAAK,CAAC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,kBAAkB,EAAEL,gBAAgB,CAAC,CAAC;EAC1C,OAAO,CAACG,aAAa,EAAEE,kBAAkB,EAAEC,iBAAiB,CAAC;AAC/D;AAACJ,EAAA,CAnBuBH,UAAU;EAAA,QAMPD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}