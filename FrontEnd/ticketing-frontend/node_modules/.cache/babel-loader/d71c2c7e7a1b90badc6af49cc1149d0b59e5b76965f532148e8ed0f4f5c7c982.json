{"ast":null,"code":"import{TinyColor}from'@ctrl/tinycolor';export default function genColorMapToken(seed,_ref){let{generateColorPalettes,generateNeutralColorPalettes}=_ref;const{colorSuccess:colorSuccessBase,colorWarning:colorWarningBase,colorError:colorErrorBase,colorInfo:colorInfoBase,colorPrimary:colorPrimaryBase,colorBgBase,colorTextBase}=seed;const primaryColors=generateColorPalettes(colorPrimaryBase);const successColors=generateColorPalettes(colorSuccessBase);const warningColors=generateColorPalettes(colorWarningBase);const errorColors=generateColorPalettes(colorErrorBase);const infoColors=generateColorPalettes(colorInfoBase);const neutralColors=generateNeutralColorPalettes(colorBgBase,colorTextBase);// Color Link\nconst colorLink=seed.colorLink||seed.colorInfo;const linkColors=generateColorPalettes(colorLink);return Object.assign(Object.assign({},neutralColors),{colorPrimaryBg:primaryColors[1],colorPrimaryBgHover:primaryColors[2],colorPrimaryBorder:primaryColors[3],colorPrimaryBorderHover:primaryColors[4],colorPrimaryHover:primaryColors[5],colorPrimary:primaryColors[6],colorPrimaryActive:primaryColors[7],colorPrimaryTextHover:primaryColors[8],colorPrimaryText:primaryColors[9],colorPrimaryTextActive:primaryColors[10],colorSuccessBg:successColors[1],colorSuccessBgHover:successColors[2],colorSuccessBorder:successColors[3],colorSuccessBorderHover:successColors[4],colorSuccessHover:successColors[4],colorSuccess:successColors[6],colorSuccessActive:successColors[7],colorSuccessTextHover:successColors[8],colorSuccessText:successColors[9],colorSuccessTextActive:successColors[10],colorErrorBg:errorColors[1],colorErrorBgHover:errorColors[2],colorErrorBorder:errorColors[3],colorErrorBorderHover:errorColors[4],colorErrorHover:errorColors[5],colorError:errorColors[6],colorErrorActive:errorColors[7],colorErrorTextHover:errorColors[8],colorErrorText:errorColors[9],colorErrorTextActive:errorColors[10],colorWarningBg:warningColors[1],colorWarningBgHover:warningColors[2],colorWarningBorder:warningColors[3],colorWarningBorderHover:warningColors[4],colorWarningHover:warningColors[4],colorWarning:warningColors[6],colorWarningActive:warningColors[7],colorWarningTextHover:warningColors[8],colorWarningText:warningColors[9],colorWarningTextActive:warningColors[10],colorInfoBg:infoColors[1],colorInfoBgHover:infoColors[2],colorInfoBorder:infoColors[3],colorInfoBorderHover:infoColors[4],colorInfoHover:infoColors[4],colorInfo:infoColors[6],colorInfoActive:infoColors[7],colorInfoTextHover:infoColors[8],colorInfoText:infoColors[9],colorInfoTextActive:infoColors[10],colorLinkHover:linkColors[4],colorLink:linkColors[6],colorLinkActive:linkColors[7],colorBgMask:new TinyColor('#000').setAlpha(0.45).toRgbString(),colorWhite:'#fff'});}","map":{"version":3,"names":["TinyColor","genColorMapToken","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccess","colorSuccessBase","colorWarning","colorWarningBase","colorError","colorErrorBase","colorInfo","colorInfoBase","colorPrimary","colorPrimaryBase","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","colorLink","linkColors","Object","assign","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorLinkHover","colorLinkActive","colorBgMask","setAlpha","toRgbString","colorWhite"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/theme/themes/shared/genColorMapToken.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nexport default function genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  // Color Link\n  const colorLink = seed.colorLink || seed.colorInfo;\n  const linkColors = generateColorPalettes(colorLink);\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorLinkHover: linkColors[4],\n    colorLink: linkColors[6],\n    colorLinkActive: linkColors[7],\n    colorBgMask: new TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}