{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState,useEffect}from'react';/**\n * Execute code before next frame but async\n */export function useLayoutState(defaultState){var stateRef=useRef(defaultState);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),forceUpdate=_useState2[1];var lastPromiseRef=useRef(null);var updateBatchRef=useRef([]);function setFrameState(updater){updateBatchRef.current.push(updater);var promise=Promise.resolve();lastPromiseRef.current=promise;promise.then(function(){if(lastPromiseRef.current===promise){var prevBatch=updateBatchRef.current;var prevState=stateRef.current;updateBatchRef.current=[];prevBatch.forEach(function(batchUpdater){stateRef.current=batchUpdater(stateRef.current);});lastPromiseRef.current=null;if(prevState!==stateRef.current){forceUpdate({});}}});}useEffect(function(){return function(){lastPromiseRef.current=null;};},[]);return[stateRef.current,setFrameState];}/** Lock frame, when frame pass reset the lock. */export function useTimeoutLock(defaultState){var frameRef=useRef(defaultState||null);var timeoutRef=useRef();function cleanUp(){window.clearTimeout(timeoutRef.current);}function setState(newState){frameRef.current=newState;cleanUp();timeoutRef.current=window.setTimeout(function(){frameRef.current=null;timeoutRef.current=undefined;},100);}function getState(){return frameRef.current;}useEffect(function(){return cleanUp;},[]);return[setState,getState];}","map":{"version":3,"names":["_slicedToArray","useRef","useState","useEffect","useLayoutState","defaultState","stateRef","_useState","_useState2","forceUpdate","lastPromiseRef","updateBatchRef","setFrameState","updater","current","push","promise","Promise","resolve","then","prevBatch","prevState","forEach","batchUpdater","useTimeoutLock","frameRef","timeoutRef","cleanUp","window","clearTimeout","setState","newState","setTimeout","undefined","getState"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-table/es/hooks/useFrame.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\n/**\n * Execute code before next frame but async\n */\nexport function useLayoutState(defaultState) {\n  var stateRef = useRef(defaultState);\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    forceUpdate = _useState2[1];\n  var lastPromiseRef = useRef(null);\n  var updateBatchRef = useRef([]);\n  function setFrameState(updater) {\n    updateBatchRef.current.push(updater);\n    var promise = Promise.resolve();\n    lastPromiseRef.current = promise;\n    promise.then(function () {\n      if (lastPromiseRef.current === promise) {\n        var prevBatch = updateBatchRef.current;\n        var prevState = stateRef.current;\n        updateBatchRef.current = [];\n        prevBatch.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        lastPromiseRef.current = null;\n        if (prevState !== stateRef.current) {\n          forceUpdate({});\n        }\n      }\n    });\n  }\n  useEffect(function () {\n    return function () {\n      lastPromiseRef.current = null;\n    };\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n\n/** Lock frame, when frame pass reset the lock. */\nexport function useTimeoutLock(defaultState) {\n  var frameRef = useRef(defaultState || null);\n  var timeoutRef = useRef();\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = undefined;\n    }, 100);\n  }\n  function getState() {\n    return frameRef.current;\n  }\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}"],"mappings":"AAAA,MAAO,CAAAA,cAAc,KAAM,0CAA0C,CACrE,OAASC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACnD;AACA;AACA,GACA,MAAO,SAAS,CAAAC,cAAcA,CAACC,YAAY,CAAE,CAC3C,GAAI,CAAAC,QAAQ,CAAGL,MAAM,CAACI,YAAY,CAAC,CACnC,GAAI,CAAAE,SAAS,CAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1BM,UAAU,CAAGR,cAAc,CAACO,SAAS,CAAE,CAAC,CAAC,CACzCE,WAAW,CAAGD,UAAU,CAAC,CAAC,CAAC,CAC7B,GAAI,CAAAE,cAAc,CAAGT,MAAM,CAAC,IAAI,CAAC,CACjC,GAAI,CAAAU,cAAc,CAAGV,MAAM,CAAC,EAAE,CAAC,CAC/B,QAAS,CAAAW,aAAaA,CAACC,OAAO,CAAE,CAC9BF,cAAc,CAACG,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC,CACpC,GAAI,CAAAG,OAAO,CAAGC,OAAO,CAACC,OAAO,CAAC,CAAC,CAC/BR,cAAc,CAACI,OAAO,CAAGE,OAAO,CAChCA,OAAO,CAACG,IAAI,CAAC,UAAY,CACvB,GAAIT,cAAc,CAACI,OAAO,GAAKE,OAAO,CAAE,CACtC,GAAI,CAAAI,SAAS,CAAGT,cAAc,CAACG,OAAO,CACtC,GAAI,CAAAO,SAAS,CAAGf,QAAQ,CAACQ,OAAO,CAChCH,cAAc,CAACG,OAAO,CAAG,EAAE,CAC3BM,SAAS,CAACE,OAAO,CAAC,SAAUC,YAAY,CAAE,CACxCjB,QAAQ,CAACQ,OAAO,CAAGS,YAAY,CAACjB,QAAQ,CAACQ,OAAO,CAAC,CACnD,CAAC,CAAC,CACFJ,cAAc,CAACI,OAAO,CAAG,IAAI,CAC7B,GAAIO,SAAS,GAAKf,QAAQ,CAACQ,OAAO,CAAE,CAClCL,WAAW,CAAC,CAAC,CAAC,CAAC,CACjB,CACF,CACF,CAAC,CAAC,CACJ,CACAN,SAAS,CAAC,UAAY,CACpB,MAAO,WAAY,CACjBO,cAAc,CAACI,OAAO,CAAG,IAAI,CAC/B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAACR,QAAQ,CAACQ,OAAO,CAAEF,aAAa,CAAC,CAC1C,CAEA,kDACA,MAAO,SAAS,CAAAY,cAAcA,CAACnB,YAAY,CAAE,CAC3C,GAAI,CAAAoB,QAAQ,CAAGxB,MAAM,CAACI,YAAY,EAAI,IAAI,CAAC,CAC3C,GAAI,CAAAqB,UAAU,CAAGzB,MAAM,CAAC,CAAC,CACzB,QAAS,CAAA0B,OAAOA,CAAA,CAAG,CACjBC,MAAM,CAACC,YAAY,CAACH,UAAU,CAACZ,OAAO,CAAC,CACzC,CACA,QAAS,CAAAgB,QAAQA,CAACC,QAAQ,CAAE,CAC1BN,QAAQ,CAACX,OAAO,CAAGiB,QAAQ,CAC3BJ,OAAO,CAAC,CAAC,CACTD,UAAU,CAACZ,OAAO,CAAGc,MAAM,CAACI,UAAU,CAAC,UAAY,CACjDP,QAAQ,CAACX,OAAO,CAAG,IAAI,CACvBY,UAAU,CAACZ,OAAO,CAAGmB,SAAS,CAChC,CAAC,CAAE,GAAG,CAAC,CACT,CACA,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,MAAO,CAAAT,QAAQ,CAACX,OAAO,CACzB,CACAX,SAAS,CAAC,UAAY,CACpB,MAAO,CAAAwB,OAAO,CAChB,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAACG,QAAQ,CAAEI,QAAQ,CAAC,CAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}