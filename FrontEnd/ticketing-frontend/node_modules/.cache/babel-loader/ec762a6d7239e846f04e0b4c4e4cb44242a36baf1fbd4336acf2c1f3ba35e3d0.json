{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";var _excluded=[\"id\",\"mode\",\"prefixCls\",\"backfill\",\"fieldNames\",\"inputValue\",\"searchValue\",\"onSearch\",\"autoClearSearchValue\",\"onSelect\",\"onDeselect\",\"dropdownMatchSelectWidth\",\"filterOption\",\"filterSort\",\"optionFilterProp\",\"optionLabelProp\",\"options\",\"optionRender\",\"children\",\"defaultActiveFirstOption\",\"menuItemSelectedIcon\",\"virtual\",\"direction\",\"listHeight\",\"listItemHeight\",\"labelRender\",\"value\",\"defaultValue\",\"labelInValue\",\"onChange\",\"maxCount\"];/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */import useMergedState from\"rc-util/es/hooks/useMergedState\";import warning from\"rc-util/es/warning\";import*as React from'react';import BaseSelect,{isMultiple}from\"./BaseSelect\";import OptGroup from\"./OptGroup\";import Option from\"./Option\";import OptionList from\"./OptionList\";import SelectContext from\"./SelectContext\";import useCache from\"./hooks/useCache\";import useFilterOptions from\"./hooks/useFilterOptions\";import useId from\"./hooks/useId\";import useOptions from\"./hooks/useOptions\";import useRefFunc from\"./hooks/useRefFunc\";import{hasValue,isComboNoValue,toArray}from\"./utils/commonUtil\";import{fillFieldNames,flattenOptions,injectPropsWithOption}from\"./utils/valueUtil\";import warningProps,{warningNullOptions}from\"./utils/warningPropsUtil\";var OMIT_DOM_PROPS=['inputValue'];function isRawValue(value){return!value||_typeof(value)!=='object';}var Select=/*#__PURE__*/React.forwardRef(function(props,ref){var id=props.id,mode=props.mode,_props$prefixCls=props.prefixCls,prefixCls=_props$prefixCls===void 0?'rc-select':_props$prefixCls,backfill=props.backfill,fieldNames=props.fieldNames,inputValue=props.inputValue,searchValue=props.searchValue,onSearch=props.onSearch,_props$autoClearSearc=props.autoClearSearchValue,autoClearSearchValue=_props$autoClearSearc===void 0?true:_props$autoClearSearc,onSelect=props.onSelect,onDeselect=props.onDeselect,_props$dropdownMatchS=props.dropdownMatchSelectWidth,dropdownMatchSelectWidth=_props$dropdownMatchS===void 0?true:_props$dropdownMatchS,filterOption=props.filterOption,filterSort=props.filterSort,optionFilterProp=props.optionFilterProp,optionLabelProp=props.optionLabelProp,options=props.options,optionRender=props.optionRender,children=props.children,defaultActiveFirstOption=props.defaultActiveFirstOption,menuItemSelectedIcon=props.menuItemSelectedIcon,virtual=props.virtual,direction=props.direction,_props$listHeight=props.listHeight,listHeight=_props$listHeight===void 0?200:_props$listHeight,_props$listItemHeight=props.listItemHeight,listItemHeight=_props$listItemHeight===void 0?20:_props$listItemHeight,labelRender=props.labelRender,value=props.value,defaultValue=props.defaultValue,labelInValue=props.labelInValue,onChange=props.onChange,maxCount=props.maxCount,restProps=_objectWithoutProperties(props,_excluded);var mergedId=useId(id);var multiple=isMultiple(mode);var childrenAsData=!!(!options&&children);var mergedFilterOption=React.useMemo(function(){if(filterOption===undefined&&mode==='combobox'){return false;}return filterOption;},[filterOption,mode]);// ========================= FieldNames =========================\nvar mergedFieldNames=React.useMemo(function(){return fillFieldNames(fieldNames,childrenAsData);},/* eslint-disable react-hooks/exhaustive-deps */[// We stringify fieldNames to avoid unnecessary re-renders.\nJSON.stringify(fieldNames),childrenAsData]/* eslint-enable react-hooks/exhaustive-deps */);// =========================== Search ===========================\nvar _useMergedState=useMergedState('',{value:searchValue!==undefined?searchValue:inputValue,postState:function postState(search){return search||'';}}),_useMergedState2=_slicedToArray(_useMergedState,2),mergedSearchValue=_useMergedState2[0],setSearchValue=_useMergedState2[1];// =========================== Option ===========================\nvar parsedOptions=useOptions(options,children,mergedFieldNames,optionFilterProp,optionLabelProp);var valueOptions=parsedOptions.valueOptions,labelOptions=parsedOptions.labelOptions,mergedOptions=parsedOptions.options;// ========================= Wrap Value =========================\nvar convert2LabelValues=React.useCallback(function(draftValues){// Convert to array\nvar valueList=toArray(draftValues);// Convert to labelInValue type\nreturn valueList.map(function(val){var rawValue;var rawLabel;var rawKey;var rawDisabled;var rawTitle;// Fill label & value\nif(isRawValue(val)){rawValue=val;}else{var _val$value;rawKey=val.key;rawLabel=val.label;rawValue=(_val$value=val.value)!==null&&_val$value!==void 0?_val$value:rawKey;}var option=valueOptions.get(rawValue);if(option){var _option$key;// Fill missing props\nif(rawLabel===undefined)rawLabel=option===null||option===void 0?void 0:option[optionLabelProp||mergedFieldNames.label];if(rawKey===undefined)rawKey=(_option$key=option===null||option===void 0?void 0:option.key)!==null&&_option$key!==void 0?_option$key:rawValue;rawDisabled=option===null||option===void 0?void 0:option.disabled;rawTitle=option===null||option===void 0?void 0:option.title;// Warning if label not same as provided\nif(process.env.NODE_ENV!=='production'&&!optionLabelProp){var optionLabel=option===null||option===void 0?void 0:option[mergedFieldNames.label];if(optionLabel!==undefined&&!/*#__PURE__*/React.isValidElement(optionLabel)&&!/*#__PURE__*/React.isValidElement(rawLabel)&&optionLabel!==rawLabel){warning(false,'`label` of `value` is not same as `label` in Select options.');}}}return{label:rawLabel,value:rawValue,key:rawKey,disabled:rawDisabled,title:rawTitle};});},[mergedFieldNames,optionLabelProp,valueOptions]);// =========================== Values ===========================\nvar _useMergedState3=useMergedState(defaultValue,{value:value}),_useMergedState4=_slicedToArray(_useMergedState3,2),internalValue=_useMergedState4[0],setInternalValue=_useMergedState4[1];// Merged value with LabelValueType\nvar rawLabeledValues=React.useMemo(function(){var _values$;var newInternalValue=multiple&&internalValue===null?[]:internalValue;var values=convert2LabelValues(newInternalValue);// combobox no need save value when it's no value (exclude value equal 0)\nif(mode==='combobox'&&isComboNoValue((_values$=values[0])===null||_values$===void 0?void 0:_values$.value)){return[];}return values;},[internalValue,convert2LabelValues,mode,multiple]);// Fill label with cache to avoid option remove\nvar _useCache=useCache(rawLabeledValues,valueOptions),_useCache2=_slicedToArray(_useCache,2),mergedValues=_useCache2[0],getMixedOption=_useCache2[1];var displayValues=React.useMemo(function(){// `null` need show as placeholder instead\n// https://github.com/ant-design/ant-design/issues/25057\nif(!mode&&mergedValues.length===1){var firstValue=mergedValues[0];if(firstValue.value===null&&(firstValue.label===null||firstValue.label===undefined)){return[];}}return mergedValues.map(function(item){var _ref;return _objectSpread(_objectSpread({},item),{},{label:(_ref=typeof labelRender==='function'?labelRender(item):item.label)!==null&&_ref!==void 0?_ref:item.value});});},[mode,mergedValues,labelRender]);/** Convert `displayValues` to raw value type set */var rawValues=React.useMemo(function(){return new Set(mergedValues.map(function(val){return val.value;}));},[mergedValues]);React.useEffect(function(){if(mode==='combobox'){var _mergedValues$;var strValue=(_mergedValues$=mergedValues[0])===null||_mergedValues$===void 0?void 0:_mergedValues$.value;setSearchValue(hasValue(strValue)?String(strValue):'');}},[mergedValues]);// ======================= Display Option =======================\n// Create a placeholder item if not exist in `options`\nvar createTagOption=useRefFunc(function(val,label){var mergedLabel=label!==null&&label!==void 0?label:val;return _defineProperty(_defineProperty({},mergedFieldNames.value,val),mergedFieldNames.label,mergedLabel);});// Fill tag as option if mode is `tags`\nvar filledTagOptions=React.useMemo(function(){if(mode!=='tags'){return mergedOptions;}// >>> Tag mode\nvar cloneOptions=_toConsumableArray(mergedOptions);// Check if value exist in options (include new patch item)\nvar existOptions=function existOptions(val){return valueOptions.has(val);};// Fill current value as option\n_toConsumableArray(mergedValues).sort(function(a,b){return a.value<b.value?-1:1;}).forEach(function(item){var val=item.value;if(!existOptions(val)){cloneOptions.push(createTagOption(val,item.label));}});return cloneOptions;},[createTagOption,mergedOptions,valueOptions,mergedValues,mode]);var filteredOptions=useFilterOptions(filledTagOptions,mergedFieldNames,mergedSearchValue,mergedFilterOption,optionFilterProp);// Fill options with search value if needed\nvar filledSearchOptions=React.useMemo(function(){if(mode!=='tags'||!mergedSearchValue||filteredOptions.some(function(item){return item[optionFilterProp||'value']===mergedSearchValue;})){return filteredOptions;}// ignore when search value equal select input value\nif(filteredOptions.some(function(item){return item[mergedFieldNames.value]===mergedSearchValue;})){return filteredOptions;}// Fill search value as option\nreturn[createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));},[createTagOption,optionFilterProp,mode,filteredOptions,mergedSearchValue,mergedFieldNames]);var orderedFilteredOptions=React.useMemo(function(){if(!filterSort){return filledSearchOptions;}return _toConsumableArray(filledSearchOptions).sort(function(a,b){return filterSort(a,b);});},[filledSearchOptions,filterSort]);var displayOptions=React.useMemo(function(){return flattenOptions(orderedFilteredOptions,{fieldNames:mergedFieldNames,childrenAsData:childrenAsData});},[orderedFilteredOptions,mergedFieldNames,childrenAsData]);// =========================== Change ===========================\nvar triggerChange=function triggerChange(values){var labeledValues=convert2LabelValues(values);setInternalValue(labeledValues);if(onChange&&(// Trigger event only when value changed\nlabeledValues.length!==mergedValues.length||labeledValues.some(function(newVal,index){var _mergedValues$index;return((_mergedValues$index=mergedValues[index])===null||_mergedValues$index===void 0?void 0:_mergedValues$index.value)!==(newVal===null||newVal===void 0?void 0:newVal.value);}))){var returnValues=labelInValue?labeledValues:labeledValues.map(function(v){return v.value;});var returnOptions=labeledValues.map(function(v){return injectPropsWithOption(getMixedOption(v.value));});onChange(// Value\nmultiple?returnValues:returnValues[0],// Option\nmultiple?returnOptions:returnOptions[0]);}};// ======================= Accessibility ========================\nvar _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),activeValue=_React$useState2[0],setActiveValue=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),accessibilityIndex=_React$useState4[0],setAccessibilityIndex=_React$useState4[1];var mergedDefaultActiveFirstOption=defaultActiveFirstOption!==undefined?defaultActiveFirstOption:mode!=='combobox';var onActiveValue=React.useCallback(function(active,index){var _ref3=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref3$source=_ref3.source,source=_ref3$source===void 0?'keyboard':_ref3$source;setAccessibilityIndex(index);if(backfill&&mode==='combobox'&&active!==null&&source==='keyboard'){setActiveValue(String(active));}},[backfill,mode]);// ========================= OptionList =========================\nvar triggerSelect=function triggerSelect(val,selected,type){var getSelectEnt=function getSelectEnt(){var _option$key2;var option=getMixedOption(val);return[labelInValue?{label:option===null||option===void 0?void 0:option[mergedFieldNames.label],value:val,key:(_option$key2=option===null||option===void 0?void 0:option.key)!==null&&_option$key2!==void 0?_option$key2:val}:val,injectPropsWithOption(option)];};if(selected&&onSelect){var _getSelectEnt=getSelectEnt(),_getSelectEnt2=_slicedToArray(_getSelectEnt,2),wrappedValue=_getSelectEnt2[0],_option=_getSelectEnt2[1];onSelect(wrappedValue,_option);}else if(!selected&&onDeselect&&type!=='clear'){var _getSelectEnt3=getSelectEnt(),_getSelectEnt4=_slicedToArray(_getSelectEnt3,2),_wrappedValue=_getSelectEnt4[0],_option2=_getSelectEnt4[1];onDeselect(_wrappedValue,_option2);}};// Used for OptionList selection\nvar onInternalSelect=useRefFunc(function(val,info){var cloneValues;// Single mode always trigger select only with option list\nvar mergedSelect=multiple?info.selected:true;if(mergedSelect){cloneValues=multiple?[].concat(_toConsumableArray(mergedValues),[val]):[val];}else{cloneValues=mergedValues.filter(function(v){return v.value!==val;});}triggerChange(cloneValues);triggerSelect(val,mergedSelect);// Clean search value if single or configured\nif(mode==='combobox'){// setSearchValue(String(val));\nsetActiveValue('');}else if(!isMultiple||autoClearSearchValue){setSearchValue('');setActiveValue('');}});// ======================= Display Change =======================\n// BaseSelect display values change\nvar onDisplayValuesChange=function onDisplayValuesChange(nextValues,info){triggerChange(nextValues);var type=info.type,values=info.values;if(type==='remove'||type==='clear'){values.forEach(function(item){triggerSelect(item.value,false,type);});}};// =========================== Search ===========================\nvar onInternalSearch=function onInternalSearch(searchText,info){setSearchValue(searchText);setActiveValue(null);// [Submit] Tag mode should flush input\nif(info.source==='submit'){var formatted=(searchText||'').trim();// prevent empty tags from appearing when you click the Enter button\nif(formatted){var newRawValues=Array.from(new Set([].concat(_toConsumableArray(rawValues),[formatted])));triggerChange(newRawValues);triggerSelect(formatted,true);setSearchValue('');}return;}if(info.source!=='blur'){if(mode==='combobox'){triggerChange(searchText);}onSearch===null||onSearch===void 0||onSearch(searchText);}};var onInternalSearchSplit=function onInternalSearchSplit(words){var patchValues=words;if(mode!=='tags'){patchValues=words.map(function(word){var opt=labelOptions.get(word);return opt===null||opt===void 0?void 0:opt.value;}).filter(function(val){return val!==undefined;});}var newRawValues=Array.from(new Set([].concat(_toConsumableArray(rawValues),_toConsumableArray(patchValues))));triggerChange(newRawValues);newRawValues.forEach(function(newRawValue){triggerSelect(newRawValue,true);});};// ========================== Context ===========================\nvar selectContext=React.useMemo(function(){var realVirtual=virtual!==false&&dropdownMatchSelectWidth!==false;return _objectSpread(_objectSpread({},parsedOptions),{},{flattenOptions:displayOptions,onActiveValue:onActiveValue,defaultActiveFirstOption:mergedDefaultActiveFirstOption,onSelect:onInternalSelect,menuItemSelectedIcon:menuItemSelectedIcon,rawValues:rawValues,fieldNames:mergedFieldNames,virtual:realVirtual,direction:direction,listHeight:listHeight,listItemHeight:listItemHeight,childrenAsData:childrenAsData,maxCount:maxCount,optionRender:optionRender});},[maxCount,parsedOptions,displayOptions,onActiveValue,mergedDefaultActiveFirstOption,onInternalSelect,menuItemSelectedIcon,rawValues,mergedFieldNames,virtual,dropdownMatchSelectWidth,direction,listHeight,listItemHeight,childrenAsData,optionRender]);// ========================== Warning ===========================\nif(process.env.NODE_ENV!=='production'){warningProps(props);warningNullOptions(mergedOptions,mergedFieldNames);}// ==============================================================\n// ==                          Render                          ==\n// ==============================================================\nreturn/*#__PURE__*/React.createElement(SelectContext.Provider,{value:selectContext},/*#__PURE__*/React.createElement(BaseSelect,_extends({},restProps,{// >>> MISC\nid:mergedId,prefixCls:prefixCls,ref:ref,omitDomProps:OMIT_DOM_PROPS,mode:mode// >>> Values\n,displayValues:displayValues,onDisplayValuesChange:onDisplayValuesChange// >>> Trigger\n,direction:direction// >>> Search\n,searchValue:mergedSearchValue,onSearch:onInternalSearch,autoClearSearchValue:autoClearSearchValue,onSearchSplit:onInternalSearchSplit,dropdownMatchSelectWidth:dropdownMatchSelectWidth// >>> OptionList\n,OptionList:OptionList,emptyOptions:!displayOptions.length// >>> Accessibility\n,activeValue:activeValue,activeDescendantId:\"\".concat(mergedId,\"_list_\").concat(accessibilityIndex)})));});if(process.env.NODE_ENV!=='production'){Select.displayName='Select';}var TypedSelect=Select;TypedSelect.Option=Option;TypedSelect.OptGroup=OptGroup;export default TypedSelect;","map":{"version":3,"names":["_extends","_toConsumableArray","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_typeof","_excluded","useMergedState","warning","React","BaseSelect","isMultiple","OptGroup","Option","OptionList","SelectContext","useCache","useFilterOptions","useId","useOptions","useRefFunc","hasValue","isComboNoValue","toArray","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","warningNullOptions","OMIT_DOM_PROPS","isRawValue","value","Select","forwardRef","props","ref","id","mode","_props$prefixCls","prefixCls","backfill","fieldNames","inputValue","searchValue","onSearch","_props$autoClearSearc","autoClearSearchValue","onSelect","onDeselect","_props$dropdownMatchS","dropdownMatchSelectWidth","filterOption","filterSort","optionFilterProp","optionLabelProp","options","optionRender","children","defaultActiveFirstOption","menuItemSelectedIcon","virtual","direction","_props$listHeight","listHeight","_props$listItemHeight","listItemHeight","labelRender","defaultValue","labelInValue","onChange","maxCount","restProps","mergedId","multiple","childrenAsData","mergedFilterOption","useMemo","undefined","mergedFieldNames","JSON","stringify","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","useCallback","draftValues","valueList","map","val","rawValue","rawLabel","rawKey","rawDisabled","rawTitle","_val$value","key","label","option","get","_option$key","disabled","title","process","env","NODE_ENV","optionLabel","isValidElement","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","_values$","newInternalValue","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","_ref","rawValues","Set","useEffect","_mergedValues$","strValue","String","createTagOption","mergedLabel","filledTagOptions","cloneOptions","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","_mergedValues$index","returnValues","v","returnOptions","_React$useState","useState","_React$useState2","activeValue","setActiveValue","_React$useState3","_React$useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","arguments","_ref3$source","source","triggerSelect","selected","type","getSelectEnt","_option$key2","_getSelectEnt","_getSelectEnt2","wrappedValue","_option","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option2","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","Array","from","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","selectContext","realVirtual","createElement","Provider","omitDomProps","onSearchSplit","emptyOptions","activeDescendantId","displayName","TypedSelect"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-select/es/Select.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"id\", \"mode\", \"prefixCls\", \"backfill\", \"fieldNames\", \"inputValue\", \"searchValue\", \"onSearch\", \"autoClearSearchValue\", \"onSelect\", \"onDeselect\", \"dropdownMatchSelectWidth\", \"filterOption\", \"filterSort\", \"optionFilterProp\", \"optionLabelProp\", \"options\", \"optionRender\", \"children\", \"defaultActiveFirstOption\", \"menuItemSelectedIcon\", \"virtual\", \"direction\", \"listHeight\", \"listItemHeight\", \"labelRender\", \"value\", \"defaultValue\", \"labelInValue\", \"onChange\", \"maxCount\"];\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabIndex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport BaseSelect, { isMultiple } from \"./BaseSelect\";\nimport OptGroup from \"./OptGroup\";\nimport Option from \"./Option\";\nimport OptionList from \"./OptionList\";\nimport SelectContext from \"./SelectContext\";\nimport useCache from \"./hooks/useCache\";\nimport useFilterOptions from \"./hooks/useFilterOptions\";\nimport useId from \"./hooks/useId\";\nimport useOptions from \"./hooks/useOptions\";\nimport useRefFunc from \"./hooks/useRefFunc\";\nimport { hasValue, isComboNoValue, toArray } from \"./utils/commonUtil\";\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from \"./utils/valueUtil\";\nimport warningProps, { warningNullOptions } from \"./utils/warningPropsUtil\";\nvar OMIT_DOM_PROPS = ['inputValue'];\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nvar Select = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var id = props.id,\n    mode = props.mode,\n    _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-select' : _props$prefixCls,\n    backfill = props.backfill,\n    fieldNames = props.fieldNames,\n    inputValue = props.inputValue,\n    searchValue = props.searchValue,\n    onSearch = props.onSearch,\n    _props$autoClearSearc = props.autoClearSearchValue,\n    autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc,\n    onSelect = props.onSelect,\n    onDeselect = props.onDeselect,\n    _props$dropdownMatchS = props.dropdownMatchSelectWidth,\n    dropdownMatchSelectWidth = _props$dropdownMatchS === void 0 ? true : _props$dropdownMatchS,\n    filterOption = props.filterOption,\n    filterSort = props.filterSort,\n    optionFilterProp = props.optionFilterProp,\n    optionLabelProp = props.optionLabelProp,\n    options = props.options,\n    optionRender = props.optionRender,\n    children = props.children,\n    defaultActiveFirstOption = props.defaultActiveFirstOption,\n    menuItemSelectedIcon = props.menuItemSelectedIcon,\n    virtual = props.virtual,\n    direction = props.direction,\n    _props$listHeight = props.listHeight,\n    listHeight = _props$listHeight === void 0 ? 200 : _props$listHeight,\n    _props$listItemHeight = props.listItemHeight,\n    listItemHeight = _props$listItemHeight === void 0 ? 20 : _props$listItemHeight,\n    labelRender = props.labelRender,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    labelInValue = props.labelInValue,\n    onChange = props.onChange,\n    maxCount = props.maxCount,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var mergedId = useId(id);\n  var multiple = isMultiple(mode);\n  var childrenAsData = !!(!options && children);\n  var mergedFilterOption = React.useMemo(function () {\n    if (filterOption === undefined && mode === 'combobox') {\n      return false;\n    }\n    return filterOption;\n  }, [filterOption, mode]);\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames, childrenAsData);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [\n  // We stringify fieldNames to avoid unnecessary re-renders.\n  JSON.stringify(fieldNames), childrenAsData]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Search ===========================\n  var _useMergedState = useMergedState('', {\n      value: searchValue !== undefined ? searchValue : inputValue,\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSearchValue = _useMergedState2[0],\n    setSearchValue = _useMergedState2[1];\n\n  // =========================== Option ===========================\n  var parsedOptions = useOptions(options, children, mergedFieldNames, optionFilterProp, optionLabelProp);\n  var valueOptions = parsedOptions.valueOptions,\n    labelOptions = parsedOptions.labelOptions,\n    mergedOptions = parsedOptions.options;\n\n  // ========================= Wrap Value =========================\n  var convert2LabelValues = React.useCallback(function (draftValues) {\n    // Convert to array\n    var valueList = toArray(draftValues);\n\n    // Convert to labelInValue type\n    return valueList.map(function (val) {\n      var rawValue;\n      var rawLabel;\n      var rawKey;\n      var rawDisabled;\n      var rawTitle;\n\n      // Fill label & value\n      if (isRawValue(val)) {\n        rawValue = val;\n      } else {\n        var _val$value;\n        rawKey = val.key;\n        rawLabel = val.label;\n        rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n      }\n      var option = valueOptions.get(rawValue);\n      if (option) {\n        var _option$key;\n        // Fill missing props\n        if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[optionLabelProp || mergedFieldNames.label];\n        if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n        rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n        rawTitle = option === null || option === void 0 ? void 0 : option.title;\n\n        // Warning if label not same as provided\n        if (process.env.NODE_ENV !== 'production' && !optionLabelProp) {\n          var optionLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.label];\n          if (optionLabel !== undefined && ! /*#__PURE__*/React.isValidElement(optionLabel) && ! /*#__PURE__*/React.isValidElement(rawLabel) && optionLabel !== rawLabel) {\n            warning(false, '`label` of `value` is not same as `label` in Select options.');\n          }\n        }\n      }\n      return {\n        label: rawLabel,\n        value: rawValue,\n        key: rawKey,\n        disabled: rawDisabled,\n        title: rawTitle\n      };\n    });\n  }, [mergedFieldNames, optionLabelProp, valueOptions]);\n\n  // =========================== Values ===========================\n  var _useMergedState3 = useMergedState(defaultValue, {\n      value: value\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    internalValue = _useMergedState4[0],\n    setInternalValue = _useMergedState4[1];\n\n  // Merged value with LabelValueType\n  var rawLabeledValues = React.useMemo(function () {\n    var _values$;\n    var newInternalValue = multiple && internalValue === null ? [] : internalValue;\n    var values = convert2LabelValues(newInternalValue);\n\n    // combobox no need save value when it's no value (exclude value equal 0)\n    if (mode === 'combobox' && isComboNoValue((_values$ = values[0]) === null || _values$ === void 0 ? void 0 : _values$.value)) {\n      return [];\n    }\n    return values;\n  }, [internalValue, convert2LabelValues, mode, multiple]);\n\n  // Fill label with cache to avoid option remove\n  var _useCache = useCache(rawLabeledValues, valueOptions),\n    _useCache2 = _slicedToArray(_useCache, 2),\n    mergedValues = _useCache2[0],\n    getMixedOption = _useCache2[1];\n  var displayValues = React.useMemo(function () {\n    // `null` need show as placeholder instead\n    // https://github.com/ant-design/ant-design/issues/25057\n    if (!mode && mergedValues.length === 1) {\n      var firstValue = mergedValues[0];\n      if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n        return [];\n      }\n    }\n    return mergedValues.map(function (item) {\n      var _ref;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: (_ref = typeof labelRender === 'function' ? labelRender(item) : item.label) !== null && _ref !== void 0 ? _ref : item.value\n      });\n    });\n  }, [mode, mergedValues, labelRender]);\n\n  /** Convert `displayValues` to raw value type set */\n  var rawValues = React.useMemo(function () {\n    return new Set(mergedValues.map(function (val) {\n      return val.value;\n    }));\n  }, [mergedValues]);\n  React.useEffect(function () {\n    if (mode === 'combobox') {\n      var _mergedValues$;\n      var strValue = (_mergedValues$ = mergedValues[0]) === null || _mergedValues$ === void 0 ? void 0 : _mergedValues$.value;\n      setSearchValue(hasValue(strValue) ? String(strValue) : '');\n    }\n  }, [mergedValues]);\n\n  // ======================= Display Option =======================\n  // Create a placeholder item if not exist in `options`\n  var createTagOption = useRefFunc(function (val, label) {\n    var mergedLabel = label !== null && label !== void 0 ? label : val;\n    return _defineProperty(_defineProperty({}, mergedFieldNames.value, val), mergedFieldNames.label, mergedLabel);\n  });\n\n  // Fill tag as option if mode is `tags`\n  var filledTagOptions = React.useMemo(function () {\n    if (mode !== 'tags') {\n      return mergedOptions;\n    }\n\n    // >>> Tag mode\n    var cloneOptions = _toConsumableArray(mergedOptions);\n\n    // Check if value exist in options (include new patch item)\n    var existOptions = function existOptions(val) {\n      return valueOptions.has(val);\n    };\n\n    // Fill current value as option\n    _toConsumableArray(mergedValues).sort(function (a, b) {\n      return a.value < b.value ? -1 : 1;\n    }).forEach(function (item) {\n      var val = item.value;\n      if (!existOptions(val)) {\n        cloneOptions.push(createTagOption(val, item.label));\n      }\n    });\n    return cloneOptions;\n  }, [createTagOption, mergedOptions, valueOptions, mergedValues, mode]);\n  var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, optionFilterProp);\n\n  // Fill options with search value if needed\n  var filledSearchOptions = React.useMemo(function () {\n    if (mode !== 'tags' || !mergedSearchValue || filteredOptions.some(function (item) {\n      return item[optionFilterProp || 'value'] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // ignore when search value equal select input value\n    if (filteredOptions.some(function (item) {\n      return item[mergedFieldNames.value] === mergedSearchValue;\n    })) {\n      return filteredOptions;\n    }\n    // Fill search value as option\n    return [createTagOption(mergedSearchValue)].concat(_toConsumableArray(filteredOptions));\n  }, [createTagOption, optionFilterProp, mode, filteredOptions, mergedSearchValue, mergedFieldNames]);\n  var orderedFilteredOptions = React.useMemo(function () {\n    if (!filterSort) {\n      return filledSearchOptions;\n    }\n    return _toConsumableArray(filledSearchOptions).sort(function (a, b) {\n      return filterSort(a, b);\n    });\n  }, [filledSearchOptions, filterSort]);\n  var displayOptions = React.useMemo(function () {\n    return flattenOptions(orderedFilteredOptions, {\n      fieldNames: mergedFieldNames,\n      childrenAsData: childrenAsData\n    });\n  }, [orderedFilteredOptions, mergedFieldNames, childrenAsData]);\n\n  // =========================== Change ===========================\n  var triggerChange = function triggerChange(values) {\n    var labeledValues = convert2LabelValues(values);\n    setInternalValue(labeledValues);\n    if (onChange && (\n    // Trigger event only when value changed\n    labeledValues.length !== mergedValues.length || labeledValues.some(function (newVal, index) {\n      var _mergedValues$index;\n      return ((_mergedValues$index = mergedValues[index]) === null || _mergedValues$index === void 0 ? void 0 : _mergedValues$index.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n    }))) {\n      var returnValues = labelInValue ? labeledValues : labeledValues.map(function (v) {\n        return v.value;\n      });\n      var returnOptions = labeledValues.map(function (v) {\n        return injectPropsWithOption(getMixedOption(v.value));\n      });\n      onChange(\n      // Value\n      multiple ? returnValues : returnValues[0],\n      // Option\n      multiple ? returnOptions : returnOptions[0]);\n    }\n  };\n\n  // ======================= Accessibility ========================\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeValue = _React$useState2[0],\n    setActiveValue = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    accessibilityIndex = _React$useState4[0],\n    setAccessibilityIndex = _React$useState4[1];\n  var mergedDefaultActiveFirstOption = defaultActiveFirstOption !== undefined ? defaultActiveFirstOption : mode !== 'combobox';\n  var onActiveValue = React.useCallback(function (active, index) {\n    var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref3$source = _ref3.source,\n      source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n    setAccessibilityIndex(index);\n    if (backfill && mode === 'combobox' && active !== null && source === 'keyboard') {\n      setActiveValue(String(active));\n    }\n  }, [backfill, mode]);\n\n  // ========================= OptionList =========================\n  var triggerSelect = function triggerSelect(val, selected, type) {\n    var getSelectEnt = function getSelectEnt() {\n      var _option$key2;\n      var option = getMixedOption(val);\n      return [labelInValue ? {\n        label: option === null || option === void 0 ? void 0 : option[mergedFieldNames.label],\n        value: val,\n        key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n      } : val, injectPropsWithOption(option)];\n    };\n    if (selected && onSelect) {\n      var _getSelectEnt = getSelectEnt(),\n        _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n        wrappedValue = _getSelectEnt2[0],\n        _option = _getSelectEnt2[1];\n      onSelect(wrappedValue, _option);\n    } else if (!selected && onDeselect && type !== 'clear') {\n      var _getSelectEnt3 = getSelectEnt(),\n        _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n        _wrappedValue = _getSelectEnt4[0],\n        _option2 = _getSelectEnt4[1];\n      onDeselect(_wrappedValue, _option2);\n    }\n  };\n\n  // Used for OptionList selection\n  var onInternalSelect = useRefFunc(function (val, info) {\n    var cloneValues;\n\n    // Single mode always trigger select only with option list\n    var mergedSelect = multiple ? info.selected : true;\n    if (mergedSelect) {\n      cloneValues = multiple ? [].concat(_toConsumableArray(mergedValues), [val]) : [val];\n    } else {\n      cloneValues = mergedValues.filter(function (v) {\n        return v.value !== val;\n      });\n    }\n    triggerChange(cloneValues);\n    triggerSelect(val, mergedSelect);\n\n    // Clean search value if single or configured\n    if (mode === 'combobox') {\n      // setSearchValue(String(val));\n      setActiveValue('');\n    } else if (!isMultiple || autoClearSearchValue) {\n      setSearchValue('');\n      setActiveValue('');\n    }\n  });\n\n  // ======================= Display Change =======================\n  // BaseSelect display values change\n  var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n    triggerChange(nextValues);\n    var type = info.type,\n      values = info.values;\n    if (type === 'remove' || type === 'clear') {\n      values.forEach(function (item) {\n        triggerSelect(item.value, false, type);\n      });\n    }\n  };\n\n  // =========================== Search ===========================\n  var onInternalSearch = function onInternalSearch(searchText, info) {\n    setSearchValue(searchText);\n    setActiveValue(null);\n\n    // [Submit] Tag mode should flush input\n    if (info.source === 'submit') {\n      var formatted = (searchText || '').trim();\n      // prevent empty tags from appearing when you click the Enter button\n      if (formatted) {\n        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), [formatted])));\n        triggerChange(newRawValues);\n        triggerSelect(formatted, true);\n        setSearchValue('');\n      }\n      return;\n    }\n    if (info.source !== 'blur') {\n      if (mode === 'combobox') {\n        triggerChange(searchText);\n      }\n      onSearch === null || onSearch === void 0 || onSearch(searchText);\n    }\n  };\n  var onInternalSearchSplit = function onInternalSearchSplit(words) {\n    var patchValues = words;\n    if (mode !== 'tags') {\n      patchValues = words.map(function (word) {\n        var opt = labelOptions.get(word);\n        return opt === null || opt === void 0 ? void 0 : opt.value;\n      }).filter(function (val) {\n        return val !== undefined;\n      });\n    }\n    var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues), _toConsumableArray(patchValues))));\n    triggerChange(newRawValues);\n    newRawValues.forEach(function (newRawValue) {\n      triggerSelect(newRawValue, true);\n    });\n  };\n\n  // ========================== Context ===========================\n  var selectContext = React.useMemo(function () {\n    var realVirtual = virtual !== false && dropdownMatchSelectWidth !== false;\n    return _objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: menuItemSelectedIcon,\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      direction: direction,\n      listHeight: listHeight,\n      listItemHeight: listItemHeight,\n      childrenAsData: childrenAsData,\n      maxCount: maxCount,\n      optionRender: optionRender\n    });\n  }, [maxCount, parsedOptions, displayOptions, onActiveValue, mergedDefaultActiveFirstOption, onInternalSelect, menuItemSelectedIcon, rawValues, mergedFieldNames, virtual, dropdownMatchSelectWidth, direction, listHeight, listItemHeight, childrenAsData, optionRender]);\n\n  // ========================== Warning ===========================\n  if (process.env.NODE_ENV !== 'production') {\n    warningProps(props);\n    warningNullOptions(mergedOptions, mergedFieldNames);\n  }\n\n  // ==============================================================\n  // ==                          Render                          ==\n  // ==============================================================\n  return /*#__PURE__*/React.createElement(SelectContext.Provider, {\n    value: selectContext\n  }, /*#__PURE__*/React.createElement(BaseSelect, _extends({}, restProps, {\n    // >>> MISC\n    id: mergedId,\n    prefixCls: prefixCls,\n    ref: ref,\n    omitDomProps: OMIT_DOM_PROPS,\n    mode: mode\n    // >>> Values\n    ,\n    displayValues: displayValues,\n    onDisplayValuesChange: onDisplayValuesChange\n    // >>> Trigger\n    ,\n    direction: direction\n    // >>> Search\n    ,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    onSearchSplit: onInternalSearchSplit,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n    // >>> OptionList\n    ,\n    OptionList: OptionList,\n    emptyOptions: !displayOptions.length\n    // >>> Accessibility\n    ,\n    activeValue: activeValue,\n    activeDescendantId: \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex)\n  })));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Select.displayName = 'Select';\n}\nvar TypedSelect = Select;\nTypedSelect.Option = Option;\nTypedSelect.OptGroup = OptGroup;\nexport default TypedSelect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}