{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import{fillFieldNames}from\"rc-tree/es/utils/treeUtil\";var Record;(function(Record){Record[Record[\"None\"]=0]=\"None\";Record[Record[\"Start\"]=1]=\"Start\";Record[Record[\"End\"]=2]=\"End\";})(Record||(Record={}));function traverseNodesKey(treeData,callback,fieldNames){const{key:fieldKey,children:fieldChildren}=fieldNames;function processNode(dataNode){const key=dataNode[fieldKey];const children=dataNode[fieldChildren];if(callback(key,dataNode)!==false){traverseNodesKey(children||[],callback,fieldNames);}}treeData.forEach(processNode);}/** 计算选中范围，只考虑expanded情况以优化性能 */export function calcRangeKeys(_ref){let{treeData,expandedKeys,startKey,endKey,fieldNames}=_ref;const keys=[];let record=Record.None;if(startKey&&startKey===endKey){return[startKey];}if(!startKey||!endKey){return[];}function matchKey(key){return key===startKey||key===endKey;}traverseNodesKey(treeData,key=>{if(record===Record.End){return false;}if(matchKey(key)){// Match test\nkeys.push(key);if(record===Record.None){record=Record.Start;}else if(record===Record.Start){record=Record.End;return false;}}else if(record===Record.Start){// Append selection\nkeys.push(key);}return expandedKeys.includes(key);},fillFieldNames(fieldNames));return keys;}export function convertDirectoryKeysToNodes(treeData,keys,fieldNames){const restKeys=_toConsumableArray(keys);const nodes=[];traverseNodesKey(treeData,(key,node)=>{const index=restKeys.indexOf(key);if(index!==-1){nodes.push(node);restKeys.splice(index,1);}return!!restKeys.length;},fillFieldNames(fieldNames));return nodes;}","map":{"version":3,"names":["_toConsumableArray","fillFieldNames","Record","traverseNodesKey","treeData","callback","fieldNames","key","fieldKey","children","fieldChildren","processNode","dataNode","forEach","calcRangeKeys","_ref","expandedKeys","startKey","endKey","keys","record","None","matchKey","End","push","Start","includes","convertDirectoryKeysToNodes","restKeys","nodes","node","index","indexOf","splice","length"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/tree/utils/dictUtil.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { fillFieldNames } from \"rc-tree/es/utils/treeUtil\";\nvar Record;\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\nfunction traverseNodesKey(treeData, callback, fieldNames) {\n  const {\n    key: fieldKey,\n    children: fieldChildren\n  } = fieldNames;\n  function processNode(dataNode) {\n    const key = dataNode[fieldKey];\n    const children = dataNode[fieldChildren];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback, fieldNames);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(_ref) {\n  let {\n    treeData,\n    expandedKeys,\n    startKey,\n    endKey,\n    fieldNames\n  } = _ref;\n  const keys = [];\n  let record = Record.None;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, key => {\n    if (record === Record.End) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  }, fillFieldNames(fieldNames));\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = _toConsumableArray(keys);\n  const nodes = [];\n  traverseNodesKey(treeData, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  }, fillFieldNames(fieldNames));\n  return nodes;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}