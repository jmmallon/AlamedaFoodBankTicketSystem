{"ast":null,"code":"// NextCustomerPage.js\nimport React,{useEffect,useRef,useState}from'react';import DvdLogo from'./FoodIcon';import{Divider,Button}from'antd';import'react-toastify/dist/ReactToastify.css';import wavFile from'./next.mp3';import'./nextCustomerPage.css';// Import the CSS\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NextCustomerPage=()=>{// Assuming you have the customer number stored in a variable\n// const [data, setData] = useState([]);\nconst[currentTicket,setCurrentTicket]=useState(null);const[sessionId,setSessionId]=useState(generateUniqueSessionId());const[servedCustomers,setServedCustomers]=useState([]);const[loading,setLoading]=useState(false);// Initialize loading state\nconst[waitingCustomers,setWaitingCustomers]=useState([]);// Define the start and end times for the range (11:00 AM to 11:30 AM)\nvar startTimeHours=10;var startTimeMinutes=30;var endTimeHours=11;var endTimeMinutes=30;useEffect(function(){let fetchNextTicket=arguments.length>0&&arguments[0]!==undefined?arguments[0]:fetchNextTicket;// Fetch data from the endpoint\nfetchNextTicket();},[]);useEffect(function(){let fetchNextTicket=arguments.length>0&&arguments[0]!==undefined?arguments[0]:fetchNextTicket;// Fetch data from the endpoint\nconsole.log(\"creating SSE\");// Set up the SSE connection to listen for updates\nconst eventSource=new EventSource('http://'+window.location.hostname+':8888/sse/tickets');// Open a connection to the SSE endpoint\neventSource.addEventListener('refresh',event=>{try{const incomingData=JSON.parse(event.data);console.log(\"Refresh Heard\",incomingData);console.log(\" incomingData.refreshToken\",incomingData.refreshtoken);console.log(\" incomingData.refreshToken === 'refreshToken'\",incomingData.refreshtoken==='refreshToken');if(incomingData&&incomingData.refreshtoken==='refreshToken'){console.log(\"should refresh bc ncomingData.refreshToken: \",incomingData.refreshToken);fetchNextTicket();}}catch(error){console.error('Failed to parse JSON data:',error,'Raw data:',event.data);}});return()=>{eventSource.close();// Close the SSE connection when the component unmounts\n};},[]);function generateUniqueSessionId(){const timestamp=new Date().getTime();const randomPart=Math.random().toString(36).substr(2,9);var x=\"session-\".concat(timestamp,\"-\").concat(randomPart);console.log(\"generateUniqueSessionId\",x);return\"session-\".concat(timestamp,\"-\").concat(randomPart);}const fetchNextTicket=()=>{fetch('http://'+window.location.hostname+':8888/tickets/not-done-from-last-12-hours').then(response=>response.json()).then(incomingData=>{console.log(\"incomingData: \",incomingData);console.log(\"incomingData.length: \",incomingData.length);if(incomingData.length===null){console.log(\"incomingData is null\");setCurrentTicket(null);return;}let currentTime=new Date();let currentTimeMinusThirty=new Date(currentTime.getTime()-30*60*1000);let currentTimePlus45Mins=new Date(currentTime.getTime()+45*60*1000);// Separate data into two arrays based on scheduleAppointmentTime\nconst within30Mins=[];const outside30Mins=[];incomingData.forEach(item=>{// Insert code to also check if time is 11 to 1130 \n// and then check if we have appointments from within the next 30 minutes ? \nconst isBetween11And1130=isCurrentTimeBetweenXandY();console.log(\"TYLER:: DEBUG\\n          new Date(): \".concat(new Date().toLocaleDateString(),\"\\n          isBetween11And1130: \").concat(isBetween11And1130,\"\\n          item.scheduleAppointmentTime: \").concat(item.scheduleAppointmentTime,\" \\n          new Date(item.scheduleAppointmentTime): \").concat(new Date(item.scheduleAppointmentTime),\" \\n          currentTimePlusThirty: \").concat(currentTimePlus45Mins,\"\\n          currentTimePlusOneHour: \").concat(currentTimePlus45Mins,\"\\n          \"));if(isBetween11And1130&&item.scheduleAppointmentTime&&IsTheTime1130(item.scheduleAppointmentTime)){console.log(\"TYLER :: SPECIAL CASE isBetween11And1130\",item);within30Mins.push(item);}else if(item.scheduleAppointmentTime&&new Date(item.scheduleAppointmentTime)>=currentTimeMinusThirty&&new Date(item.scheduleAppointmentTime)<=currentTime){console.log(\"TYLER:: Within 30\");console.log(\"TYLER:: Schedule Time\",new Date(item.scheduleAppointmentTime));console.log(\"TYLER:: Current time - 30\",new Date(currentTimeMinusThirty.getTime()-30*60*1000));within30Mins.push(item);}else{console.log(\"TYLER:: Outside 30\");console.log(\"TYLER:: new Date(item.scheduleAppointmentTime)\",new Date(item.scheduleAppointmentTime));console.log(\"TYLER:: new Date(currentTime.getTime() - 30 * 60 * 1000)\",new Date(currentTime.getTime()-30*60*1000));console.log(\"TYLER:: new Date(new Date().getTime() - 30 * 60 * 10000)\",new Date(new Date().getTime()-30*60*1000));outside30Mins.push(item);}});// Sort within30Mins array based on scheduleAppointmentTime\nwithin30Mins.sort((a,b)=>new Date(a.scheduleAppointmentTime)-new Date(b.scheduleAppointmentTime));console.log(\"Within 30 mins:\");within30Mins.map(item=>console.log(\"Tyler:\",item));outside30Mins.sort((a,b)=>a.positionInLine-b.positionInLine);console.log(\"Outsite 30 mins:\");outside30Mins.map(item=>console.log(\"Tyler:\",item));console.log(\"within30Mins[0]\",within30Mins);if(within30Mins.length!==0){console.log(\"within30Mins[0]\",within30Mins[0]);setCurrentTicket(within30Mins[0]);}else if(outside30Mins.length!==0){console.log(\"outside30Min\",outside30Mins);setCurrentTicket(outside30Mins[0]);}else{setCurrentTicket(null);}// Merge the arrays\nconst mergedArray=[...within30Mins,...outside30Mins];// Check the length and remove the first element if necessary\nif(mergedArray.length>0){mergedArray.shift();setWaitingCustomers(mergedArray);}}).catch(error=>{console.error('Error fetching data:',error);});};const isCurrentTimeBetweenXandY=()=>{// Create a Date object for the current time\nvar currentTime=new Date();console.log(\"currentTime\",currentTime.toTimeString());// Get the current hours and minutes\nvar currentHours=currentTime.getHours();var currentMinutes=currentTime.getMinutes();// Compare the current time with the desired range\nif((currentHours>startTimeHours||currentHours===startTimeHours&&currentMinutes>=startTimeMinutes)&&(currentHours<endTimeHours||currentHours===endTimeHours&&currentMinutes<=endTimeMinutes)){console.log(\"currentTime is between 11 and 1130\");return true;}else{console.log(\"currentTime is NOT between 11 and 1130\");return false;}};const handleNumberTap=e=>{e.preventDefault();if(loading!=false)return;if(currentTicket){setLoading(true);console.log(\"number tapped pressed\");const updatedTicket={...currentTicket,done:true};// Update the ticket data on the backend using the PUT request\nfetch(\"http://\".concat(window.location.hostname,\":8888/tickets/\").concat(currentTicket.id),{method:'PUT',headers:{'Content-Type':'application/json','X-Session-Id':sessionId// Include the session ID as a custom header\n},body:JSON.stringify(updatedTicket)}).then(response=>response.json()).then(()=>{setServedCustomers(prevDoneTickets=>[...prevDoneTickets,currentTicket]);fetchNextTicket();// Fetch the next ticket after updating the current one\nconst audio=new Audio(wavFile);audio.play();}).catch(error=>{console.error('Error updating ticket:',error);}).finally(()=>{setLoading(false);// Stop loading after API call completes\n});}};useEffect(function(){let fetchNextTicket=arguments.length>0&&arguments[0]!==undefined?arguments[0]:fetchNextTicket;const handleKeyPress=event=>{console.log(\"111 event.keyCode: \",event.keyCode);if(loading!=false)return;if(event.key===' '){if(currentTicket){setLoading(true);console.log(\"space pressed\");const updatedTicket={...currentTicket,done:true};// Update the ticket data on the backend using the PUT request\nfetch(\"http://\".concat(window.location.hostname,\":8888/tickets/\").concat(currentTicket.id),{method:'PUT',headers:{'Content-Type':'application/json','X-Session-Id':sessionId// Include the session ID as a custom header\n},body:JSON.stringify(updatedTicket)}).then(response=>response.json()).then(()=>{setServedCustomers(prevDoneTickets=>[...prevDoneTickets,currentTicket]);fetchNextTicket();// Fetch the next ticket after updating the current one\nconst audio=new Audio(wavFile);audio.play();}).catch(error=>console.error('Error updating ticket:',error)).finally(()=>{setLoading(false);// Stop loading after API call completes\n});}else{fetchNextTicket();}}else if(event.keyCode===120){undoTicketChange();}};document.addEventListener('keypress',handleKeyPress);return()=>{document.removeEventListener('keypress',handleKeyPress);};},[currentTicket]);const undoTicketChange=()=>{if(servedCustomers.length===0){console.log(\"no doneTickets\");return;// No ticket to revert\n}console.log(\"doneTickets\",servedCustomers);const lastDoneTicket=servedCustomers[servedCustomers.length-1];console.log(\"last done ticket:\",lastDoneTicket);const updatedTicket={...lastDoneTicket,done:false};setLoading(true);fetch(\"http://\".concat(window.location.hostname,\":8888/tickets/\").concat(lastDoneTicket.id),{method:'PUT',headers:{'Content-Type':'application/json','X-Session-Id':sessionId// Include the session ID as a custom header\n},body:JSON.stringify(updatedTicket)}).then(response=>{if(!response.ok){throw new Error(\"Error reverting ticket update. Please try again.\");}return response.json();}).then(data=>{// Handle success logic if any\n// Remove the last ticket from the doneTickets state\nsetServedCustomers(prevDoneTickets=>prevDoneTickets.slice(0,-1));fetchNextTicket();}).catch(error=>{console.error('Error reverting ticket update:',error);}).finally(()=>{setLoading(false);// Stop loading after undo action completes\n});};useEffect(()=>{// Update the document title using the browser API\n{console.log(\"doneTickets: \",servedCustomers);}});const getDateInPacTime=newDate=>{console.log(\"TYLER::getDateInPacTime\",getDateInPacTime);const dateObj=new Date(newDate);const pacificDateTime=dateObj.toLocaleString('en-US',{timeZone:'America/Los_Angeles',hour12:true,hour:'2-digit',minute:'2-digit'});return/*#__PURE__*/_jsx(_Fragment,{children:pacificDateTime});};const IsTheTime1130=newDate=>{console.log(\"TYLER::getDateInPacTime\",getDateInPacTime);const dateObj=new Date(newDate);const pacificDateTime=dateObj.toLocaleString('en-US',{timeZone:'America/Los_Angeles',hour:'2-digit',minute:'2-digit'});console.log(\"TYLER::1130 Check 2:\",pacificDateTime.toString());console.log(\"TYLER::1130 Check:  \",pacificDateTime.hour,\" \",pacificDateTime.minute,\" \",pacificDateTime.toString()===\"11:30 AM\");return pacificDateTime.toString()===\"11:30 AM\";};const showAdditionalNotes=additionalNotes=>{if(additionalNotes===null||additionalNotes===\"\"){return/*#__PURE__*/_jsx(_Fragment,{});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Additional Notes:\"}),additionalNotes]})});};const showAdditionalNotesBigger=additionalNotes=>{if(additionalNotes===null||additionalNotes===\"\"){return/*#__PURE__*/_jsx(_Fragment,{});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:\"13px\"},children:[/*#__PURE__*/_jsx(\"div\",{children:\"Additional Notes:\"}),additionalNotes]})});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:styles.floatingDivLeft,children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Unserved Clients:\"}),/*#__PURE__*/_jsx(\"div\",{style:styles.scrollableContainer,children:waitingCustomers.map((customer,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[customer.positionInLine,\" \",customer.firstName,\" \",customer.lastName.charAt(0),\" \",customer.scheduleAppointmentTime!=null?getDateInPacTime(customer.scheduleAppointmentTime):\"\",showAdditionalNotes(customer.additionalNotes),/*#__PURE__*/_jsx(Divider,{style:{marginTop:'4px','backgroundColor':'black'}})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{style:styles.floatingDivRight,children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Served Clients:\"}),/*#__PURE__*/_jsx(\"div\",{style:styles.scrollableContainer,children:servedCustomers.map((customer,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[customer.positionInLine,\" \",customer.firstName,\" \",customer.lastName.charAt(0),\" \",customer.scheduleAppointmentTime!=null?getDateInPacTime(customer.scheduleAppointmentTime):\"\",showAdditionalNotes(customer.additionalNotes),/*#__PURE__*/_jsx(Divider,{style:{'backgroundColor':'black'}})]},index))})]}),/*#__PURE__*/_jsx(\"div\",{onClick:undoTicketChange,children:/*#__PURE__*/_jsx(DvdLogo,{})}),/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[console.log(\"Serving Customers!\"),/*#__PURE__*/_jsxs(\"div\",{style:styles.buttonTextContainer,children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{undoTicketChange();},style:{margin:'10px',display:'inline-flex',alignItems:'center',padding:'20px',fontSize:'20px',backgroundColor:'red',color:'white'},children:\"Previous\"}),/*#__PURE__*/_jsx(\"h2\",{style:styles.servingText,children:\"Serving Client Number\"}),/*#__PURE__*/_jsx(Button,{onClick:handleNumberTap,style:{margin:'10px',display:'inline-flex',alignItems:'center',padding:'20px',fontSize:'20px',backgroundColor:'green',color:'white'},children:\"Next\"})]}),/*#__PURE__*/_jsx(\"h1\",{onClick:handleNumberTap,style:styles.customerNumber,children:currentTicket!=null&&currentTicket.positionInLine!=null?currentTicket.positionInLine:\"☺️\"}),currentTicket&&currentTicket.firstName!=null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{style:styles.positionInLine,children:[\"You are up: \",currentTicket.firstName,\" \",currentTicket.lastName.charAt(0),\".\"]}),showAdditionalNotesBigger(currentTicket.additionalNotes)]})]})]});};const styles={container:{overflow:'hidden',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',height:'100vh',background:'#f0f0f0'// Light gray background\n},buttonTextContainer:{display:'flex',alignItems:'center'},floatingDivRight:{position:'fixed',top:0,right:0,// Place the div on the right side\nwidth:'20%',// Adjust the width as needed\nheight:'100%',// Adjust the height as needed\nbackground:'#fff',// White background\nboxShadow:'0 0 5px rgba(0, 0, 0, 0.2)',// Shadow for the div\npadding:'10px',// Add some padding for content\nzIndex:1// Set to a lower value to place it behind the other content\n},floatingDivLeft:{position:'fixed',top:0,left:0,width:'20%',// Adjust the width as needed\nheight:'100%',// Adjust the height as needed\nbackground:'#fff',// White background\nboxShadow:'0 0 5px rgba(0, 0, 0, 0.2)',// Shadow for the div\npadding:'10px',// Add some padding for content\nzIndex:1// Make sure it's above other content\n},servingText:{fontSize:'24px',fontWeight:'bold',fontFamily:'Helvetica, Arial, sans-serif',// Apple-like font\ncolor:'#333',// Dark gray text color\nmargin:0// Remove margin between elements\n},customerNumber:{fontSize:'448px',// Larger font size for the number\nfontWeight:'bold',fontFamily:'Helvetica, Arial, sans-serif',// Apple-like font\ncolor:'#333',// Dark gray text color\nmargin:0// Remove margin between elements\n},// Add a new style for the scrollable container\nscrollableContainer:{height:'100%',// Set a fixed height\noverflowY:'auto'// Add vertical scroll when content overflows\n}};export default NextCustomerPage;","map":{"version":3,"names":["React","useEffect","useRef","useState","DvdLogo","Divider","Button","wavFile","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","NextCustomerPage","currentTicket","setCurrentTicket","sessionId","setSessionId","generateUniqueSessionId","servedCustomers","setServedCustomers","loading","setLoading","waitingCustomers","setWaitingCustomers","startTimeHours","startTimeMinutes","endTimeHours","endTimeMinutes","fetchNextTicket","arguments","length","undefined","console","log","eventSource","EventSource","window","location","hostname","addEventListener","event","incomingData","JSON","parse","data","refreshtoken","refreshToken","error","close","timestamp","Date","getTime","randomPart","Math","random","toString","substr","x","concat","fetch","then","response","json","currentTime","currentTimeMinusThirty","currentTimePlus45Mins","within30Mins","outside30Mins","forEach","item","isBetween11And1130","isCurrentTimeBetweenXandY","toLocaleDateString","scheduleAppointmentTime","IsTheTime1130","push","sort","a","b","map","positionInLine","mergedArray","shift","catch","toTimeString","currentHours","getHours","currentMinutes","getMinutes","handleNumberTap","e","preventDefault","updatedTicket","done","id","method","headers","body","stringify","prevDoneTickets","audio","Audio","play","finally","handleKeyPress","keyCode","key","undoTicketChange","document","removeEventListener","lastDoneTicket","ok","Error","slice","getDateInPacTime","newDate","dateObj","pacificDateTime","toLocaleString","timeZone","hour12","hour","minute","children","showAdditionalNotes","additionalNotes","style","fontSize","showAdditionalNotesBigger","styles","floatingDivLeft","scrollableContainer","customer","index","firstName","lastName","charAt","marginTop","floatingDivRight","onClick","container","buttonTextContainer","margin","display","alignItems","padding","backgroundColor","color","servingText","customerNumber","overflow","flexDirection","justifyContent","height","background","position","top","right","width","boxShadow","zIndex","left","fontWeight","fontFamily","overflowY"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/NextCustomerPage.jsx"],"sourcesContent":["// NextCustomerPage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport DvdLogo from './FoodIcon';\nimport {Divider, Button } from 'antd';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport wavFile from './next.mp3';\nimport './nextCustomerPage.css';  // Import the CSS\n\nconst NextCustomerPage = () => {\n  // Assuming you have the customer number stored in a variable\n  // const [data, setData] = useState([]);\n  const [currentTicket, setCurrentTicket] = useState(null);\n  const [sessionId, setSessionId] = useState(generateUniqueSessionId());\n  const [servedCustomers, setServedCustomers] = useState([]);\n  const [loading, setLoading] = useState(false); // Initialize loading state\n  const [waitingCustomers, setWaitingCustomers] = useState([]);\n\n  // Define the start and end times for the range (11:00 AM to 11:30 AM)\n  var startTimeHours = 10;\n  var startTimeMinutes = 30;\n  var endTimeHours = 11;\n  var endTimeMinutes = 30;\n\n  useEffect((fetchNextTicket = fetchNextTicket) => {\n    // Fetch data from the endpoint\n    fetchNextTicket()\n  }, []);\n\n  useEffect((fetchNextTicket = fetchNextTicket) => {\n    // Fetch data from the endpoint\n    console.log(\"creating SSE\")\n    // Set up the SSE connection to listen for updates\n    const eventSource = new EventSource('http://' + window.location.hostname + ':8888/sse/tickets');\n    // Open a connection to the SSE endpoint\n\n    eventSource.addEventListener('refresh', (event) => {\n      try {\n        const incomingData = JSON.parse(event.data);\n        console.log(\"Refresh Heard\", incomingData);\n        console.log(\" incomingData.refreshToken\", incomingData.refreshtoken);\n        console.log(\" incomingData.refreshToken === 'refreshToken'\", incomingData.refreshtoken === 'refreshToken');\n\n        if (incomingData && incomingData.refreshtoken === 'refreshToken') {\n          console.log(\"should refresh bc ncomingData.refreshToken: \", incomingData.refreshToken);\n          fetchNextTicket()\n        }\n      } catch (error) {\n        console.error('Failed to parse JSON data:', error, 'Raw data:', event.data);\n      }\n    });\n\n    return () => {\n      eventSource.close(); // Close the SSE connection when the component unmounts\n    };\n  }, []);\n\n  function generateUniqueSessionId() {\n    const timestamp = new Date().getTime();\n    const randomPart = Math.random().toString(36).substr(2, 9);\n    var x = `session-${timestamp}-${randomPart}`\n    console.log(\"generateUniqueSessionId\", x)\n    return `session-${timestamp}-${randomPart}`;\n  }\n\n  const fetchNextTicket = () => {\n    fetch('http://' + window.location.hostname + ':8888/tickets/not-done-from-last-12-hours')\n      .then(response => response.json())\n      .then(incomingData => {\n        console.log(\"incomingData: \", incomingData)\n        console.log(\"incomingData.length: \", incomingData.length)\n\n        if (incomingData.length === null) {\n          console.log(\"incomingData is null\")\n          setCurrentTicket(null)\n          return;\n        }\n\n        let currentTime = new Date();\n        let currentTimeMinusThirty = new Date(currentTime.getTime() - 30 * 60 * 1000);\n\n        let currentTimePlus45Mins = new Date(currentTime.getTime() + 45 * 60 * 1000);\n\n        // Separate data into two arrays based on scheduleAppointmentTime\n        const within30Mins = [];\n        const outside30Mins = [];\n        incomingData.forEach(item => {\n          // Insert code to also check if time is 11 to 1130 \n          // and then check if we have appointments from within the next 30 minutes ? \n          const isBetween11And1130 = isCurrentTimeBetweenXandY();\n          console.log(`TYLER:: DEBUG\n          new Date(): ${new Date().toLocaleDateString()}\n          isBetween11And1130: ${isBetween11And1130}\n          item.scheduleAppointmentTime: ${item.scheduleAppointmentTime} \n          new Date(item.scheduleAppointmentTime): ${new Date(item.scheduleAppointmentTime)} \n          currentTimePlusThirty: ${currentTimePlus45Mins}\n          currentTimePlusOneHour: ${currentTimePlus45Mins}\n          `)\n\n          if (\n            isBetween11And1130 && item.scheduleAppointmentTime &&\n            IsTheTime1130(item.scheduleAppointmentTime)\n          ) {\n            console.log(\"TYLER :: SPECIAL CASE isBetween11And1130\", item)\n            within30Mins.push(item);\n          }\n          else if (\n            item.scheduleAppointmentTime &&\n            new Date(item.scheduleAppointmentTime) >=\n            currentTimeMinusThirty &&\n            new Date(item.scheduleAppointmentTime) <=\n            currentTime\n          ) {\n            console.log(\"TYLER:: Within 30\")\n            console.log(\"TYLER:: Schedule Time\", new Date(item.scheduleAppointmentTime))\n            console.log(\"TYLER:: Current time - 30\", new Date(currentTimeMinusThirty.getTime() - 30 * 60 * 1000))\n            within30Mins.push(item);\n          } else {\n            console.log(\"TYLER:: Outside 30\")\n            console.log(\"TYLER:: new Date(item.scheduleAppointmentTime)\", new Date(item.scheduleAppointmentTime))\n            console.log(\"TYLER:: new Date(currentTime.getTime() - 30 * 60 * 1000)\", new Date(currentTime.getTime() - 30 * 60 * 1000))\n            console.log(\"TYLER:: new Date(new Date().getTime() - 30 * 60 * 10000)\", new Date(new Date().getTime() - 30 * 60 * 1000))\n            outside30Mins.push(item);\n          }\n        });\n\n        // Sort within30Mins array based on scheduleAppointmentTime\n        within30Mins.sort(\n          (a, b) =>\n            new Date(a.scheduleAppointmentTime) -\n            new Date(b.scheduleAppointmentTime)\n        );\n\n        console.log(\"Within 30 mins:\")\n\n        within30Mins.map(item => (\n          console.log(\"Tyler:\", item)\n        ))\n\n        outside30Mins.sort((a, b) => a.positionInLine - b.positionInLine);\n\n        console.log(\"Outsite 30 mins:\")\n\n        outside30Mins.map(item => (\n          console.log(\"Tyler:\", item)\n        ))\n\n        console.log(\"within30Mins[0]\", within30Mins)\n\n        if (within30Mins.length !== 0) {\n          console.log(\"within30Mins[0]\", within30Mins[0])\n          setCurrentTicket(within30Mins[0]);\n        } else if (outside30Mins.length !== 0) {\n          console.log(\"outside30Min\", outside30Mins)\n          setCurrentTicket(outside30Mins[0]);\n        } else {\n          setCurrentTicket(null)\n        }\n        // Merge the arrays\n        const mergedArray = [...within30Mins, ...outside30Mins];\n\n        // Check the length and remove the first element if necessary\n        if (mergedArray.length > 0) {\n          mergedArray.shift();\n          setWaitingCustomers(mergedArray);\n\n        }\n\n\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n\n\n  const isCurrentTimeBetweenXandY = () => {\n    // Create a Date object for the current time\n    var currentTime = new Date();\n\n    console.log(\"currentTime\", currentTime.toTimeString())\n\n    // Get the current hours and minutes\n    var currentHours = currentTime.getHours();\n    var currentMinutes = currentTime.getMinutes();\n\n    // Compare the current time with the desired range\n    if (\n      (currentHours > startTimeHours || (currentHours === startTimeHours && currentMinutes >= startTimeMinutes)) &&\n      (currentHours < endTimeHours || (currentHours === endTimeHours && currentMinutes <= endTimeMinutes))\n    ) {\n      console.log(\"currentTime is between 11 and 1130\")\n      return true;\n    } else {\n      console.log(\"currentTime is NOT between 11 and 1130\")\n      return false\n    }\n  }\n\n  const handleNumberTap = (e) => {\n    e.preventDefault();\n    if (loading != false)\n      return;\n    if (currentTicket) {\n      setLoading(true);\n      console.log(\"number tapped pressed\")\n      const updatedTicket = { ...currentTicket, done: true };\n      // Update the ticket data on the backend using the PUT request\n      fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-Id': sessionId // Include the session ID as a custom header\n        },\n        body: JSON.stringify(updatedTicket),\n      })\n        .then((response) => response.json())\n        .then(() => {\n          setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n          fetchNextTicket(); // Fetch the next ticket after updating the current one\n          const audio = new Audio(wavFile);\n          audio.play();\n        })\n        .catch((error) => {\n          console.error('Error updating ticket:', error);\n        }).finally(() => {\n          setLoading(false);  // Stop loading after API call completes\n        });\n    }\n  };\n\n  useEffect((fetchNextTicket = fetchNextTicket) => {\n    const handleKeyPress = (event) => {\n\n      console.log(\"111 event.keyCode: \", event.keyCode);\n      if (loading != false)\n        return;\n      if (event.key === ' ') {\n        if (currentTicket) {\n          setLoading(true);\n          console.log(\"space pressed\")\n          const updatedTicket = { ...currentTicket, done: true };\n          // Update the ticket data on the backend using the PUT request\n          fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Session-Id': sessionId // Include the session ID as a custom header\n            },\n            body: JSON.stringify(updatedTicket),\n          })\n            .then((response) => response.json())\n            .then(() => {\n              setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n              fetchNextTicket(); // Fetch the next ticket after updating the current one\n              const audio = new Audio(wavFile);\n              audio.play();\n            })\n            .catch((error) => console.error('Error updating ticket:', error))\n            .finally(() => {\n              setLoading(false);  // Stop loading after API call completes\n            });\n        } else {\n          fetchNextTicket();\n        }\n      } else if (event.keyCode === 120) {\n        undoTicketChange()\n      }\n    };\n\n    document.addEventListener('keypress', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, [currentTicket]);\n\n  const undoTicketChange = () => {\n    if (servedCustomers.length === 0) {\n      console.log(\"no doneTickets\")\n      return;  // No ticket to revert\n    }\n    console.log(\"doneTickets\", servedCustomers)\n    const lastDoneTicket = servedCustomers[servedCustomers.length - 1];\n    console.log(\"last done ticket:\", lastDoneTicket)\n    const updatedTicket = { ...lastDoneTicket, done: false };\n    setLoading(true);\n    fetch(`http://${window.location.hostname}:8888/tickets/${lastDoneTicket.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Session-Id': sessionId // Include the session ID as a custom header\n      },\n      body: JSON.stringify(updatedTicket),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Error reverting ticket update. Please try again.\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        // Handle success logic if any\n        // Remove the last ticket from the doneTickets state\n        setServedCustomers(prevDoneTickets => prevDoneTickets.slice(0, -1));\n        fetchNextTicket();\n      })\n      .catch(error => {\n        console.error('Error reverting ticket update:', error);\n      })\n      .finally(() => {\n        setLoading(false);  // Stop loading after undo action completes\n      });\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    { console.log(\"doneTickets: \", servedCustomers) }\n  });\n\n  const getDateInPacTime = (newDate) => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime)\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles', hour12: true, hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    return <>{pacificDateTime}</>;\n  };\n\n  const IsTheTime1130 = (newDate) => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime)\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles', hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    console.log(\"TYLER::1130 Check 2:\", pacificDateTime.toString())\n    console.log(\"TYLER::1130 Check:  \", pacificDateTime.hour, \" \", pacificDateTime.minute, \" \", pacificDateTime.toString() === \"11:30 AM\")\n\n\n    return pacificDateTime.toString() === \"11:30 AM\"\n  };\n\n  const showAdditionalNotes = (additionalNotes) => {\n    if (additionalNotes === null || additionalNotes === \"\"){\n      return <></>\n    }\n\n    return <div>\n      <p style={{fontSize: \"10px\"}}>\n        <div >\n        Additional Notes:\n        </div>\n      {additionalNotes}\n        </p>\n       </div>\n  }\n\n\n  const showAdditionalNotesBigger = (additionalNotes) => {\n    if (additionalNotes === null || additionalNotes === \"\"){\n      return <></>\n    }\n\n    return <div>\n      <p style={{fontSize: \"13px\"}}>\n        <div >\n        Additional Notes:\n        </div>\n      {additionalNotes}\n        </p>\n      \n       </div>\n  }\n\n  return (\n\n    <div>\n      {/* Floating Div */}\n      <div style={styles.floatingDivLeft}>\n\n        <h5>Unserved Clients:</h5>\n        <div style={styles.scrollableContainer}>\n          {waitingCustomers.map((customer, index) => (\n            <div key={index}>\n              {customer.positionInLine} {customer.firstName} {customer.lastName.charAt(0)} {customer.scheduleAppointmentTime != null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\"}\n              {showAdditionalNotes(customer.additionalNotes)}\n              \n            <Divider\n              style={{\n                marginTop:'4px',\n                'backgroundColor':'black'}}\n            ></Divider>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={styles.floatingDivRight}>\n        <h5>Served Clients:</h5>\n        <div style={styles.scrollableContainer}>\n          {servedCustomers.map((customer, index) => (\n            <div key={index}>\n               {customer.positionInLine} {customer.firstName} {customer.lastName.charAt(0)} {customer.scheduleAppointmentTime != null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\"}\n              {showAdditionalNotes(customer.additionalNotes)}\n            <Divider\n              style={{'backgroundColor':'black'}}\n            ></Divider>\n              </div>\n          ))}\n        </div>\n\n      </div>\n      <div onClick={undoTicketChange}>\n        <DvdLogo />\n      </div>\n      <div style={styles.container}>\n        {console.log(\"Serving Customers!\")}\n        <div style={styles.buttonTextContainer}>\n          <Button\n            onClick={() => { undoTicketChange() }}\n            style={{\n              margin:'10px',\n              display: 'inline-flex',\n              alignItems: 'center',\n              padding:'20px',\n              fontSize: '20px',\n              backgroundColor: 'red',\n              color: 'white',\n            }}\n          >Previous</Button>\n          <h2 style={styles.servingText}>Serving Client Number</h2>\n\n          <Button\n            onClick={handleNumberTap}\n            style={{\n              margin:'10px',\n              display: 'inline-flex',\n              alignItems: 'center',\n              padding:'20px',\n              fontSize: '20px',\n              backgroundColor: 'green',\n              color: 'white',\n            }}\n          >Next</Button>\n        </div>\n        <h1 onClick={handleNumberTap} style={styles.customerNumber}>{(currentTicket != null && currentTicket.positionInLine != null) ? currentTicket.positionInLine : \"☺️\"}</h1>\n        {currentTicket && currentTicket.firstName != null && (\n          <div>\n\n\n          \n          <h2 style={styles.positionInLine}>You are up: {currentTicket.firstName} {currentTicket.lastName.charAt(0)}.</h2>\n          {showAdditionalNotesBigger(currentTicket.additionalNotes)}\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: '#f0f0f0', // Light gray background\n  },\n\n  buttonTextContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  floatingDivRight: {\n    position: 'fixed',\n    top: 0,\n    right: 0, // Place the div on the right side\n    width: '20%', // Adjust the width as needed\n    height: '100%', // Adjust the height as needed\n    background: '#fff', // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', // Shadow for the div\n    padding: '10px', // Add some padding for content\n    zIndex: 1, // Set to a lower value to place it behind the other content\n  },\n\n  floatingDivLeft: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '20%', // Adjust the width as needed\n    height: '100%', // Adjust the height as needed\n    background: '#fff', // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', // Shadow for the div\n    padding: '10px', // Add some padding for content\n    zIndex: 1, // Make sure it's above other content\n  },\n  servingText: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif', // Apple-like font\n    color: '#333', // Dark gray text color\n    margin: 0, // Remove margin between elements\n  },\n  customerNumber: {\n    fontSize: '448px', // Larger font size for the number\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif', // Apple-like font\n    color: '#333', // Dark gray text color\n    margin: 0, // Remove margin between elements\n  },\n  // Add a new style for the scrollable container\n  scrollableContainer: {\n    height: '100%', // Set a fixed height\n    overflowY: 'auto', // Add vertical scroll when content overflows\n  },\n};\n\nexport default NextCustomerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}