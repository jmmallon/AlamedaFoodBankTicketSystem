{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"@babel/runtime/helpers/esm/createClass\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var FORMAT_KEYS=['YYYY','MM','DD','HH','mm','ss','SSS'];// Use Chinese character to avoid conflict with the mask format\nvar REPLACE_KEY='顧';var MaskFormat=/*#__PURE__*/function(){function MaskFormat(format){_classCallCheck(this,MaskFormat);_defineProperty(this,\"format\",void 0);_defineProperty(this,\"maskFormat\",void 0);_defineProperty(this,\"cells\",void 0);_defineProperty(this,\"maskCells\",void 0);this.format=format;// Generate mask format\nvar replaceKeys=FORMAT_KEYS.map(function(key){return\"(\".concat(key,\")\");}).join('|');var replaceReg=new RegExp(replaceKeys,'g');this.maskFormat=format.replace(replaceReg,// Use Chinese character to avoid user use it in format\nfunction(key){return REPLACE_KEY.repeat(key.length);});// Generate cells\nvar cellReg=new RegExp(\"(\".concat(FORMAT_KEYS.join('|'),\")\"));var strCells=(format.split(cellReg)||[]).filter(function(str){return str;});var offset=0;this.cells=strCells.map(function(text){var mask=FORMAT_KEYS.includes(text);var start=offset;var end=offset+text.length;offset=end;return{text:text,mask:mask,start:start,end:end};});// Mask cells\nthis.maskCells=this.cells.filter(function(cell){return cell.mask;});}_createClass(MaskFormat,[{key:\"getSelection\",value:function getSelection(maskCellIndex){var _ref=this.maskCells[maskCellIndex]||{},start=_ref.start,end=_ref.end;return[start||0,end||0];}/** Check given text match format */},{key:\"match\",value:function match(text){for(var i=0;i<this.maskFormat.length;i+=1){var maskChar=this.maskFormat[i];var textChar=text[i];if(!textChar||maskChar!==REPLACE_KEY&&maskChar!==textChar){return false;}}return true;}/** Get mask cell count */},{key:\"size\",value:function size(){return this.maskCells.length;}},{key:\"getMaskCellIndex\",value:function getMaskCellIndex(anchorIndex){var closetDist=Number.MAX_SAFE_INTEGER;var closetIndex=0;for(var i=0;i<this.maskCells.length;i+=1){var _this$maskCells$i=this.maskCells[i],start=_this$maskCells$i.start,end=_this$maskCells$i.end;if(anchorIndex>=start&&anchorIndex<=end){return i;}var dist=Math.min(Math.abs(anchorIndex-start),Math.abs(anchorIndex-end));if(dist<closetDist){closetDist=dist;closetIndex=i;}}return closetIndex;}}]);return MaskFormat;}();export{MaskFormat as default};","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","FORMAT_KEYS","REPLACE_KEY","MaskFormat","format","replaceKeys","map","key","concat","join","replaceReg","RegExp","maskFormat","replace","repeat","length","cellReg","strCells","split","filter","str","offset","cells","text","mask","includes","start","end","maskCells","cell","value","getSelection","maskCellIndex","_ref","match","i","maskChar","textChar","size","getMaskCellIndex","anchorIndex","closetDist","Number","MAX_SAFE_INTEGER","closetIndex","_this$maskCells$i","dist","Math","min","abs","default"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-picker/es/PickerInput/Selector/MaskFormat.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar FORMAT_KEYS = ['YYYY', 'MM', 'DD', 'HH', 'mm', 'ss', 'SSS'];\n// Use Chinese character to avoid conflict with the mask format\nvar REPLACE_KEY = '顧';\nvar MaskFormat = /*#__PURE__*/function () {\n  function MaskFormat(format) {\n    _classCallCheck(this, MaskFormat);\n    _defineProperty(this, \"format\", void 0);\n    _defineProperty(this, \"maskFormat\", void 0);\n    _defineProperty(this, \"cells\", void 0);\n    _defineProperty(this, \"maskCells\", void 0);\n    this.format = format;\n\n    // Generate mask format\n    var replaceKeys = FORMAT_KEYS.map(function (key) {\n      return \"(\".concat(key, \")\");\n    }).join('|');\n    var replaceReg = new RegExp(replaceKeys, 'g');\n    this.maskFormat = format.replace(replaceReg,\n    // Use Chinese character to avoid user use it in format\n    function (key) {\n      return REPLACE_KEY.repeat(key.length);\n    });\n\n    // Generate cells\n    var cellReg = new RegExp(\"(\".concat(FORMAT_KEYS.join('|'), \")\"));\n    var strCells = (format.split(cellReg) || []).filter(function (str) {\n      return str;\n    });\n    var offset = 0;\n    this.cells = strCells.map(function (text) {\n      var mask = FORMAT_KEYS.includes(text);\n      var start = offset;\n      var end = offset + text.length;\n      offset = end;\n      return {\n        text: text,\n        mask: mask,\n        start: start,\n        end: end\n      };\n    });\n\n    // Mask cells\n    this.maskCells = this.cells.filter(function (cell) {\n      return cell.mask;\n    });\n  }\n  _createClass(MaskFormat, [{\n    key: \"getSelection\",\n    value: function getSelection(maskCellIndex) {\n      var _ref = this.maskCells[maskCellIndex] || {},\n        start = _ref.start,\n        end = _ref.end;\n      return [start || 0, end || 0];\n    }\n\n    /** Check given text match format */\n  }, {\n    key: \"match\",\n    value: function match(text) {\n      for (var i = 0; i < this.maskFormat.length; i += 1) {\n        var maskChar = this.maskFormat[i];\n        var textChar = text[i];\n        if (!textChar || maskChar !== REPLACE_KEY && maskChar !== textChar) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /** Get mask cell count */\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.maskCells.length;\n    }\n  }, {\n    key: \"getMaskCellIndex\",\n    value: function getMaskCellIndex(anchorIndex) {\n      var closetDist = Number.MAX_SAFE_INTEGER;\n      var closetIndex = 0;\n      for (var i = 0; i < this.maskCells.length; i += 1) {\n        var _this$maskCells$i = this.maskCells[i],\n          start = _this$maskCells$i.start,\n          end = _this$maskCells$i.end;\n        if (anchorIndex >= start && anchorIndex <= end) {\n          return i;\n        }\n        var dist = Math.min(Math.abs(anchorIndex - start), Math.abs(anchorIndex - end));\n        if (dist < closetDist) {\n          closetDist = dist;\n          closetIndex = i;\n        }\n      }\n      return closetIndex;\n    }\n  }]);\n  return MaskFormat;\n}();\nexport { MaskFormat as default };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}