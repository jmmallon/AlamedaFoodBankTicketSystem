{"ast":null,"code":"var _s = $RefreshSig$();\nimport { fillRef, supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nvar TriggerWrapper = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s(function (props, ref) {\n  _s();\n  var children = props.children,\n    getTriggerDOMNode = props.getTriggerDOMNode;\n  var canUseRef = supportRef(children);\n\n  // When use `getTriggerDOMNode`, we should do additional work to get the real dom\n  var setRef = React.useCallback(function (node) {\n    fillRef(ref, getTriggerDOMNode ? getTriggerDOMNode(node) : node);\n  }, [getTriggerDOMNode]);\n  var mergedRef = useComposeRef(setRef, children.ref);\n  return canUseRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children;\n}, \"i+8E+Z+OcdO36Wd3uBpjYdtVKQk=\", false, function () {\n  return [useComposeRef];\n})), \"i+8E+Z+OcdO36Wd3uBpjYdtVKQk=\", false, function () {\n  return [useComposeRef];\n});\n_c2 = TriggerWrapper;\nif (process.env.NODE_ENV !== 'production') {\n  TriggerWrapper.displayName = 'TriggerWrapper';\n}\nexport default TriggerWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"TriggerWrapper$React.forwardRef\");\n$RefreshReg$(_c2, \"TriggerWrapper\");","map":{"version":3,"names":["fillRef","supportRef","useComposeRef","React","TriggerWrapper","_s","forwardRef","_c","props","ref","children","getTriggerDOMNode","canUseRef","setRef","useCallback","node","mergedRef","cloneElement","_c2","process","env","NODE_ENV","displayName","$RefreshReg$"],"sources":["/Users/jmmallon/git/a/AlamedaFoodBankTicketSystem/FrontEnd/ticketing-frontend/src/node_modules/@rc-component/trigger/es/TriggerWrapper.js"],"sourcesContent":["import { fillRef, supportRef, useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nvar TriggerWrapper = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n    getTriggerDOMNode = props.getTriggerDOMNode;\n  var canUseRef = supportRef(children);\n\n  // When use `getTriggerDOMNode`, we should do additional work to get the real dom\n  var setRef = React.useCallback(function (node) {\n    fillRef(ref, getTriggerDOMNode ? getTriggerDOMNode(node) : node);\n  }, [getTriggerDOMNode]);\n  var mergedRef = useComposeRef(setRef, children.ref);\n  return canUseRef ? /*#__PURE__*/React.cloneElement(children, {\n    ref: mergedRef\n  }) : children;\n});\nif (process.env.NODE_ENV !== 'production') {\n  TriggerWrapper.displayName = 'TriggerWrapper';\n}\nexport default TriggerWrapper;"],"mappings":";AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,aAAa,QAAQ,gBAAgB;AACnE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,IAAIC,cAAc,GAAG,aAAAC,EAAA,eAAaF,KAAK,CAACG,UAAU,CAAAC,EAAA,GAAAF,EAAA,CAAC,UAAUG,KAAK,EAAEC,GAAG,EAAE;EAAAJ,EAAA;EACvE,IAAIK,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IAC3BC,iBAAiB,GAAGH,KAAK,CAACG,iBAAiB;EAC7C,IAAIC,SAAS,GAAGX,UAAU,CAACS,QAAQ,CAAC;;EAEpC;EACA,IAAIG,MAAM,GAAGV,KAAK,CAACW,WAAW,CAAC,UAAUC,IAAI,EAAE;IAC7Cf,OAAO,CAACS,GAAG,EAAEE,iBAAiB,GAAGA,iBAAiB,CAACI,IAAI,CAAC,GAAGA,IAAI,CAAC;EAClE,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EACvB,IAAIK,SAAS,GAAGd,aAAa,CAACW,MAAM,EAAEH,QAAQ,CAACD,GAAG,CAAC;EACnD,OAAOG,SAAS,GAAG,aAAaT,KAAK,CAACc,YAAY,CAACP,QAAQ,EAAE;IAC3DD,GAAG,EAAEO;EACP,CAAC,CAAC,GAAGN,QAAQ;AACf,CAAC;EAAA,QAJiBR,aAAa;AAAA,EAI9B,CAAC;EAAA,QAJgBA,aAAa;AAAA,EAI7B;AAACgB,GAAA,GAbCd,cAAc;AAclB,IAAIe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCjB,cAAc,CAACkB,WAAW,GAAG,gBAAgB;AAC/C;AACA,eAAelB,cAAc;AAAC,IAAAG,EAAA,EAAAW,GAAA;AAAAK,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}