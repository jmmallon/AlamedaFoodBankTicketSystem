{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from '@rc-component/context';\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction ExpandedRow(props) {\n  _s();\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var prefixCls = props.prefixCls,\n    children = props.children,\n    Component = props.component,\n    cellComponent = props.cellComponent,\n    className = props.className,\n    expanded = props.expanded,\n    colSpan = props.colSpan,\n    isEmpty = props.isEmpty;\n  var _useContext = useContext(TableContext, ['scrollbarSize', 'fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n    scrollbarSize = _useContext.scrollbarSize,\n    fixHeader = _useContext.fixHeader,\n    fixColumn = _useContext.fixColumn,\n    componentWidth = _useContext.componentWidth,\n    horizonScroll = _useContext.horizonScroll;\n\n  // Cache render node\n  var contentNode = children;\n  if (isEmpty ? horizonScroll && componentWidth : fixColumn) {\n    contentNode = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: componentWidth - (fixHeader ? scrollbarSize : 0),\n        position: 'sticky',\n        left: 0,\n        overflow: 'hidden'\n      },\n      className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n    }, contentNode);\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    className: className,\n    style: {\n      display: expanded ? null : 'none'\n    }\n  }, /*#__PURE__*/React.createElement(Cell, {\n    component: cellComponent,\n    prefixCls: prefixCls,\n    colSpan: colSpan\n  }, contentNode));\n}\n_s(ExpandedRow, \"ySleuVEGUHOXu8arixTynPLQ8z8=\");\n_c = ExpandedRow;\nexport default ExpandedRow;\nvar _c;\n$RefreshReg$(_c, \"ExpandedRow\");","map":{"version":3,"names":["useContext","React","Cell","TableContext","devRenderTimes","ExpandedRow","props","_s","process","env","NODE_ENV","prefixCls","children","Component","component","cellComponent","className","expanded","colSpan","isEmpty","_useContext","scrollbarSize","fixHeader","fixColumn","componentWidth","horizonScroll","contentNode","createElement","style","width","position","left","overflow","concat","display","_c","$RefreshReg$"],"sources":["/Users/jmmallon/git/a/AlamedaFoodBankTicketSystem/FrontEnd/ticketing-frontend/src/node_modules/rc-table/es/Body/ExpandedRow.js"],"sourcesContent":["import { useContext } from '@rc-component/context';\nimport * as React from 'react';\nimport Cell from \"../Cell\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction ExpandedRow(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var prefixCls = props.prefixCls,\n    children = props.children,\n    Component = props.component,\n    cellComponent = props.cellComponent,\n    className = props.className,\n    expanded = props.expanded,\n    colSpan = props.colSpan,\n    isEmpty = props.isEmpty;\n  var _useContext = useContext(TableContext, ['scrollbarSize', 'fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n    scrollbarSize = _useContext.scrollbarSize,\n    fixHeader = _useContext.fixHeader,\n    fixColumn = _useContext.fixColumn,\n    componentWidth = _useContext.componentWidth,\n    horizonScroll = _useContext.horizonScroll;\n\n  // Cache render node\n  var contentNode = children;\n  if (isEmpty ? horizonScroll && componentWidth : fixColumn) {\n    contentNode = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: componentWidth - (fixHeader ? scrollbarSize : 0),\n        position: 'sticky',\n        left: 0,\n        overflow: 'hidden'\n      },\n      className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n    }, contentNode);\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    className: className,\n    style: {\n      display: expanded ? null : 'none'\n    }\n  }, /*#__PURE__*/React.createElement(Cell, {\n    component: cellComponent,\n    prefixCls: prefixCls,\n    colSpan: colSpan\n  }, contentNode));\n}\nexport default ExpandedRow;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCN,cAAc,CAACE,KAAK,CAAC;EACvB;EACA,IAAIK,SAAS,GAAGL,KAAK,CAACK,SAAS;IAC7BC,QAAQ,GAAGN,KAAK,CAACM,QAAQ;IACzBC,SAAS,GAAGP,KAAK,CAACQ,SAAS;IAC3BC,aAAa,GAAGT,KAAK,CAACS,aAAa;IACnCC,SAAS,GAAGV,KAAK,CAACU,SAAS;IAC3BC,QAAQ,GAAGX,KAAK,CAACW,QAAQ;IACzBC,OAAO,GAAGZ,KAAK,CAACY,OAAO;IACvBC,OAAO,GAAGb,KAAK,CAACa,OAAO;EACzB,IAAIC,WAAW,GAAGpB,UAAU,CAACG,YAAY,EAAE,CAAC,eAAe,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,CAAC,CAAC;IACxHkB,aAAa,GAAGD,WAAW,CAACC,aAAa;IACzCC,SAAS,GAAGF,WAAW,CAACE,SAAS;IACjCC,SAAS,GAAGH,WAAW,CAACG,SAAS;IACjCC,cAAc,GAAGJ,WAAW,CAACI,cAAc;IAC3CC,aAAa,GAAGL,WAAW,CAACK,aAAa;;EAE3C;EACA,IAAIC,WAAW,GAAGd,QAAQ;EAC1B,IAAIO,OAAO,GAAGM,aAAa,IAAID,cAAc,GAAGD,SAAS,EAAE;IACzDG,WAAW,GAAG,aAAazB,KAAK,CAAC0B,aAAa,CAAC,KAAK,EAAE;MACpDC,KAAK,EAAE;QACLC,KAAK,EAAEL,cAAc,IAAIF,SAAS,GAAGD,aAAa,GAAG,CAAC,CAAC;QACvDS,QAAQ,EAAE,QAAQ;QAClBC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE;MACZ,CAAC;MACDhB,SAAS,EAAE,EAAE,CAACiB,MAAM,CAACtB,SAAS,EAAE,qBAAqB;IACvD,CAAC,EAAEe,WAAW,CAAC;EACjB;EACA,OAAO,aAAazB,KAAK,CAAC0B,aAAa,CAACd,SAAS,EAAE;IACjDG,SAAS,EAAEA,SAAS;IACpBY,KAAK,EAAE;MACLM,OAAO,EAAEjB,QAAQ,GAAG,IAAI,GAAG;IAC7B;EACF,CAAC,EAAE,aAAahB,KAAK,CAAC0B,aAAa,CAACzB,IAAI,EAAE;IACxCY,SAAS,EAAEC,aAAa;IACxBJ,SAAS,EAAEA,SAAS;IACpBO,OAAO,EAAEA;EACX,CAAC,EAAEQ,WAAW,CAAC,CAAC;AAClB;AAACnB,EAAA,CA1CQF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}