{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nexport default function useBase(customizePrefixCls, direction) {\n  _s();\n  const {\n    getPrefixCls,\n    direction: rootDirection,\n    renderEmpty\n  } = React.useContext(ConfigContext);\n  const mergedDirection = direction || rootDirection;\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const cascaderPrefixCls = getPrefixCls('cascader', customizePrefixCls);\n  return [prefixCls, cascaderPrefixCls, mergedDirection, renderEmpty];\n}\n_s(useBase, \"m6//FStWH/kJJAKL92B4SEpb5hQ=\");","map":{"version":3,"names":["React","ConfigContext","useBase","customizePrefixCls","direction","_s","getPrefixCls","rootDirection","renderEmpty","useContext","mergedDirection","prefixCls","cascaderPrefixCls"],"sources":["/Users/jmmallon/git/a/AlamedaFoodBankTicketSystem/FrontEnd/ticketing-frontend/src/node_modules/antd/es/cascader/hooks/useBase.js"],"sourcesContent":["import * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nexport default function useBase(customizePrefixCls, direction) {\n  const {\n    getPrefixCls,\n    direction: rootDirection,\n    renderEmpty\n  } = React.useContext(ConfigContext);\n  const mergedDirection = direction || rootDirection;\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const cascaderPrefixCls = getPrefixCls('cascader', customizePrefixCls);\n  return [prefixCls, cascaderPrefixCls, mergedDirection, renderEmpty];\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,uBAAuB;AACrD,eAAe,SAASC,OAAOA,CAACC,kBAAkB,EAAEC,SAAS,EAAE;EAAAC,EAAA;EAC7D,MAAM;IACJC,YAAY;IACZF,SAAS,EAAEG,aAAa;IACxBC;EACF,CAAC,GAAGR,KAAK,CAACS,UAAU,CAACR,aAAa,CAAC;EACnC,MAAMS,eAAe,GAAGN,SAAS,IAAIG,aAAa;EAClD,MAAMI,SAAS,GAAGL,YAAY,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;EAC5D,MAAMS,iBAAiB,GAAGN,YAAY,CAAC,UAAU,EAAEH,kBAAkB,CAAC;EACtE,OAAO,CAACQ,SAAS,EAAEC,iBAAiB,EAAEF,eAAe,EAAEF,WAAW,CAAC;AACrE;AAACH,EAAA,CAVuBH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}