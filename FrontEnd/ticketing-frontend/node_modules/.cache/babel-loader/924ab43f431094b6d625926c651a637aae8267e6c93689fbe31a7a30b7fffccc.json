{"ast":null,"code":"import _typeof from\"@babel/runtime/helpers/esm/typeof\";import toNodeArray from\"rc-util/es/Children/toArray\";import warning,{noteOnce}from\"rc-util/es/warning\";import*as React from'react';import{isMultiple}from\"../BaseSelect\";import{toArray}from\"./commonUtil\";import{convertChildrenToData}from\"./legacyUtil\";function warningProps(props){var mode=props.mode,options=props.options,children=props.children,backfill=props.backfill,allowClear=props.allowClear,placeholder=props.placeholder,getInputElement=props.getInputElement,showSearch=props.showSearch,onSearch=props.onSearch,defaultOpen=props.defaultOpen,autoFocus=props.autoFocus,labelInValue=props.labelInValue,value=props.value,inputValue=props.inputValue,optionLabelProp=props.optionLabelProp;var multiple=isMultiple(mode);var mergedShowSearch=showSearch!==undefined?showSearch:multiple||mode==='combobox';var mergedOptions=options||convertChildrenToData(children);// `tags` should not set option as disabled\nwarning(mode!=='tags'||mergedOptions.every(function(opt){return!opt.disabled;}),'Please avoid setting option to disabled in tags mode since user can always type text as tag.');// `combobox` & `tags` should option be `string` type\nif(mode==='tags'||mode==='combobox'){var hasNumberValue=mergedOptions.some(function(item){if(item.options){return item.options.some(function(opt){return typeof('value'in opt?opt.value:opt.key)==='number';});}return typeof('value'in item?item.value:item.key)==='number';});warning(!hasNumberValue,'`value` of Option should not use number type when `mode` is `tags` or `combobox`.');}// `combobox` should not use `optionLabelProp`\nwarning(mode!=='combobox'||!optionLabelProp,'`combobox` mode not support `optionLabelProp`. Please set `value` on Option directly.');// Only `combobox` support `backfill`\nwarning(mode==='combobox'||!backfill,'`backfill` only works with `combobox` mode.');// Only `combobox` support `getInputElement`\nwarning(mode==='combobox'||!getInputElement,'`getInputElement` only work with `combobox` mode.');// Customize `getInputElement` should not use `allowClear` & `placeholder`\nnoteOnce(mode!=='combobox'||!getInputElement||!allowClear||!placeholder,'Customize `getInputElement` should customize clear and placeholder logic instead of configuring `allowClear` and `placeholder`.');// `onSearch` should use in `combobox` or `showSearch`\nif(onSearch&&!mergedShowSearch&&mode!=='combobox'&&mode!=='tags'){warning(false,'`onSearch` should work with `showSearch` instead of use alone.');}noteOnce(!defaultOpen||autoFocus,'`defaultOpen` makes Select open without focus which means it will not close by click outside. You can set `autoFocus` if needed.');if(value!==undefined&&value!==null){var values=toArray(value);warning(!labelInValue||values.every(function(val){return _typeof(val)==='object'&&('key'in val||'value'in val);}),'`value` should in shape of `{ value: string | number, label?: ReactNode }` when you set `labelInValue` to `true`');warning(!multiple||Array.isArray(value),'`value` should be array when `mode` is `multiple` or `tags`');}// Syntactic sugar should use correct children type\nif(children){var invalidateChildType=null;toNodeArray(children).some(function(node){if(!/*#__PURE__*/React.isValidElement(node)||!node.type){return false;}var _ref=node,type=_ref.type;if(type.isSelectOption){return false;}if(type.isSelectOptGroup){var allChildrenValid=toNodeArray(node.props.children).every(function(subNode){if(!/*#__PURE__*/React.isValidElement(subNode)||!node.type||subNode.type.isSelectOption){return true;}invalidateChildType=subNode.type;return false;});if(allChildrenValid){return false;}return true;}invalidateChildType=type;return true;});if(invalidateChildType){warning(false,\"`children` should be `Select.Option` or `Select.OptGroup` instead of `\".concat(invalidateChildType.displayName||invalidateChildType.name||invalidateChildType,\"`.\"));}warning(inputValue===undefined,'`inputValue` is deprecated, please use `searchValue` instead.');}}// value in Select option should not be null\n// note: OptGroup has options too\nexport function warningNullOptions(options,fieldNames){if(options){var recursiveOptions=function recursiveOptions(optionsList){var inGroup=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;for(var i=0;i<optionsList.length;i++){var option=optionsList[i];if(option[fieldNames===null||fieldNames===void 0?void 0:fieldNames.value]===null){warning(false,'`value` in Select options should not be `null`.');return true;}if(!inGroup&&Array.isArray(option[fieldNames===null||fieldNames===void 0?void 0:fieldNames.options])&&recursiveOptions(option[fieldNames===null||fieldNames===void 0?void 0:fieldNames.options],true)){break;}}};recursiveOptions(options);}}export default warningProps;","map":{"version":3,"names":["_typeof","toNodeArray","warning","noteOnce","React","isMultiple","toArray","convertChildrenToData","warningProps","props","mode","options","children","backfill","allowClear","placeholder","getInputElement","showSearch","onSearch","defaultOpen","autoFocus","labelInValue","value","inputValue","optionLabelProp","multiple","mergedShowSearch","undefined","mergedOptions","every","opt","disabled","hasNumberValue","some","item","key","values","val","Array","isArray","invalidateChildType","node","isValidElement","type","_ref","isSelectOption","isSelectOptGroup","allChildrenValid","subNode","concat","displayName","name","warningNullOptions","fieldNames","recursiveOptions","optionsList","inGroup","arguments","length","i","option"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-select/es/utils/warningPropsUtil.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toNodeArray from \"rc-util/es/Children/toArray\";\nimport warning, { noteOnce } from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport { isMultiple } from \"../BaseSelect\";\nimport { toArray } from \"./commonUtil\";\nimport { convertChildrenToData } from \"./legacyUtil\";\nfunction warningProps(props) {\n  var mode = props.mode,\n    options = props.options,\n    children = props.children,\n    backfill = props.backfill,\n    allowClear = props.allowClear,\n    placeholder = props.placeholder,\n    getInputElement = props.getInputElement,\n    showSearch = props.showSearch,\n    onSearch = props.onSearch,\n    defaultOpen = props.defaultOpen,\n    autoFocus = props.autoFocus,\n    labelInValue = props.labelInValue,\n    value = props.value,\n    inputValue = props.inputValue,\n    optionLabelProp = props.optionLabelProp;\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = showSearch !== undefined ? showSearch : multiple || mode === 'combobox';\n  var mergedOptions = options || convertChildrenToData(children);\n\n  // `tags` should not set option as disabled\n  warning(mode !== 'tags' || mergedOptions.every(function (opt) {\n    return !opt.disabled;\n  }), 'Please avoid setting option to disabled in tags mode since user can always type text as tag.');\n\n  // `combobox` & `tags` should option be `string` type\n  if (mode === 'tags' || mode === 'combobox') {\n    var hasNumberValue = mergedOptions.some(function (item) {\n      if (item.options) {\n        return item.options.some(function (opt) {\n          return typeof ('value' in opt ? opt.value : opt.key) === 'number';\n        });\n      }\n      return typeof ('value' in item ? item.value : item.key) === 'number';\n    });\n    warning(!hasNumberValue, '`value` of Option should not use number type when `mode` is `tags` or `combobox`.');\n  }\n\n  // `combobox` should not use `optionLabelProp`\n  warning(mode !== 'combobox' || !optionLabelProp, '`combobox` mode not support `optionLabelProp`. Please set `value` on Option directly.');\n\n  // Only `combobox` support `backfill`\n  warning(mode === 'combobox' || !backfill, '`backfill` only works with `combobox` mode.');\n\n  // Only `combobox` support `getInputElement`\n  warning(mode === 'combobox' || !getInputElement, '`getInputElement` only work with `combobox` mode.');\n\n  // Customize `getInputElement` should not use `allowClear` & `placeholder`\n  noteOnce(mode !== 'combobox' || !getInputElement || !allowClear || !placeholder, 'Customize `getInputElement` should customize clear and placeholder logic instead of configuring `allowClear` and `placeholder`.');\n\n  // `onSearch` should use in `combobox` or `showSearch`\n  if (onSearch && !mergedShowSearch && mode !== 'combobox' && mode !== 'tags') {\n    warning(false, '`onSearch` should work with `showSearch` instead of use alone.');\n  }\n  noteOnce(!defaultOpen || autoFocus, '`defaultOpen` makes Select open without focus which means it will not close by click outside. You can set `autoFocus` if needed.');\n  if (value !== undefined && value !== null) {\n    var values = toArray(value);\n    warning(!labelInValue || values.every(function (val) {\n      return _typeof(val) === 'object' && ('key' in val || 'value' in val);\n    }), '`value` should in shape of `{ value: string | number, label?: ReactNode }` when you set `labelInValue` to `true`');\n    warning(!multiple || Array.isArray(value), '`value` should be array when `mode` is `multiple` or `tags`');\n  }\n\n  // Syntactic sugar should use correct children type\n  if (children) {\n    var invalidateChildType = null;\n    toNodeArray(children).some(function (node) {\n      if (! /*#__PURE__*/React.isValidElement(node) || !node.type) {\n        return false;\n      }\n      var _ref = node,\n        type = _ref.type;\n      if (type.isSelectOption) {\n        return false;\n      }\n      if (type.isSelectOptGroup) {\n        var allChildrenValid = toNodeArray(node.props.children).every(function (subNode) {\n          if (! /*#__PURE__*/React.isValidElement(subNode) || !node.type || subNode.type.isSelectOption) {\n            return true;\n          }\n          invalidateChildType = subNode.type;\n          return false;\n        });\n        if (allChildrenValid) {\n          return false;\n        }\n        return true;\n      }\n      invalidateChildType = type;\n      return true;\n    });\n    if (invalidateChildType) {\n      warning(false, \"`children` should be `Select.Option` or `Select.OptGroup` instead of `\".concat(invalidateChildType.displayName || invalidateChildType.name || invalidateChildType, \"`.\"));\n    }\n    warning(inputValue === undefined, '`inputValue` is deprecated, please use `searchValue` instead.');\n  }\n}\n\n// value in Select option should not be null\n// note: OptGroup has options too\nexport function warningNullOptions(options, fieldNames) {\n  if (options) {\n    var recursiveOptions = function recursiveOptions(optionsList) {\n      var inGroup = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      for (var i = 0; i < optionsList.length; i++) {\n        var option = optionsList[i];\n        if (option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.value] === null) {\n          warning(false, '`value` in Select options should not be `null`.');\n          return true;\n        }\n        if (!inGroup && Array.isArray(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.options]) && recursiveOptions(option[fieldNames === null || fieldNames === void 0 ? void 0 : fieldNames.options], true)) {\n          break;\n        }\n      }\n    };\n    recursiveOptions(options);\n  }\n}\nexport default warningProps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}