{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/esm/objectDestructuringEmpty\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"className\",\"style\",\"motion\",\"motionNodes\",\"motionType\",\"onMotionStart\",\"onMotionEnd\",\"active\",\"treeNodeRequiredProps\"];import classNames from'classnames';import CSSMotion from'rc-motion';import useLayoutEffect from\"rc-util/es/hooks/useLayoutEffect\";import*as React from'react';import{TreeContext}from\"./contextTypes\";import TreeNode from\"./TreeNode\";import useUnmount from\"./useUnmount\";import{getTreeNodeProps}from\"./utils/treeUtil\";var MotionTreeNode=function MotionTreeNode(_ref,ref){var className=_ref.className,style=_ref.style,motion=_ref.motion,motionNodes=_ref.motionNodes,motionType=_ref.motionType,onOriginMotionStart=_ref.onMotionStart,onOriginMotionEnd=_ref.onMotionEnd,active=_ref.active,treeNodeRequiredProps=_ref.treeNodeRequiredProps,props=_objectWithoutProperties(_ref,_excluded);var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),visible=_React$useState2[0],setVisible=_React$useState2[1];var _React$useContext=React.useContext(TreeContext),prefixCls=_React$useContext.prefixCls;// Calculate target visible here.\n// And apply in effect to make `leave` motion work.\nvar targetVisible=motionNodes&&motionType!=='hide';useLayoutEffect(function(){if(motionNodes){if(targetVisible!==visible){setVisible(targetVisible);}}},[motionNodes]);var triggerMotionStart=function triggerMotionStart(){if(motionNodes){onOriginMotionStart();}};// Should only trigger once\nvar triggerMotionEndRef=React.useRef(false);var triggerMotionEnd=function triggerMotionEnd(){if(motionNodes&&!triggerMotionEndRef.current){triggerMotionEndRef.current=true;onOriginMotionEnd();}};// Effect if unmount\nuseUnmount(triggerMotionStart,triggerMotionEnd);// Motion end event\nvar onVisibleChanged=function onVisibleChanged(nextVisible){if(targetVisible===nextVisible){triggerMotionEnd();}};if(motionNodes){return/*#__PURE__*/React.createElement(CSSMotion,_extends({ref:ref,visible:visible},motion,{motionAppear:motionType==='show',onVisibleChanged:onVisibleChanged}),function(_ref2,motionRef){var motionClassName=_ref2.className,motionStyle=_ref2.style;return/*#__PURE__*/React.createElement(\"div\",{ref:motionRef,className:classNames(\"\".concat(prefixCls,\"-treenode-motion\"),motionClassName),style:motionStyle},motionNodes.map(function(treeNode){var restProps=Object.assign({},(_objectDestructuringEmpty(treeNode.data),treeNode.data)),title=treeNode.title,key=treeNode.key,isStart=treeNode.isStart,isEnd=treeNode.isEnd;delete restProps.children;var treeNodeProps=getTreeNodeProps(key,treeNodeRequiredProps);return/*#__PURE__*/React.createElement(TreeNode,_extends({},restProps,treeNodeProps,{title:title,active:active,data:treeNode.data,key:key,isStart:isStart,isEnd:isEnd}));}));});}return/*#__PURE__*/React.createElement(TreeNode,_extends({domRef:ref,className:className,style:style},props,{active:active}));};MotionTreeNode.displayName='MotionTreeNode';var RefMotionTreeNode=/*#__PURE__*/React.forwardRef(MotionTreeNode);export default RefMotionTreeNode;","map":{"version":3,"names":["_extends","_objectDestructuringEmpty","_slicedToArray","_objectWithoutProperties","_excluded","classNames","CSSMotion","useLayoutEffect","React","TreeContext","TreeNode","useUnmount","getTreeNodeProps","MotionTreeNode","_ref","ref","className","style","motion","motionNodes","motionType","onOriginMotionStart","onMotionStart","onOriginMotionEnd","onMotionEnd","active","treeNodeRequiredProps","props","_React$useState","useState","_React$useState2","visible","setVisible","_React$useContext","useContext","prefixCls","targetVisible","triggerMotionStart","triggerMotionEndRef","useRef","triggerMotionEnd","current","onVisibleChanged","nextVisible","createElement","motionAppear","_ref2","motionRef","motionClassName","motionStyle","concat","map","treeNode","restProps","Object","assign","data","title","key","isStart","isEnd","children","treeNodeProps","domRef","displayName","RefMotionTreeNode","forwardRef"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-tree/es/MotionTreeNode.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { TreeContext } from \"./contextTypes\";\nimport TreeNode from \"./TreeNode\";\nimport useUnmount from \"./useUnmount\";\nimport { getTreeNodeProps } from \"./utils/treeUtil\";\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n    style = _ref.style,\n    motion = _ref.motion,\n    motionNodes = _ref.motionNodes,\n    motionType = _ref.motionType,\n    onOriginMotionStart = _ref.onMotionStart,\n    onOriginMotionEnd = _ref.onMotionEnd,\n    active = _ref.active,\n    treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useContext = React.useContext(TreeContext),\n    prefixCls = _React$useContext.prefixCls;\n\n  // Calculate target visible here.\n  // And apply in effect to make `leave` motion work.\n  var targetVisible = motionNodes && motionType !== 'hide';\n  useLayoutEffect(function () {\n    if (motionNodes) {\n      if (targetVisible !== visible) {\n        setVisible(targetVisible);\n      }\n    }\n  }, [motionNodes]);\n  var triggerMotionStart = function triggerMotionStart() {\n    if (motionNodes) {\n      onOriginMotionStart();\n    }\n  };\n\n  // Should only trigger once\n  var triggerMotionEndRef = React.useRef(false);\n  var triggerMotionEnd = function triggerMotionEnd() {\n    if (motionNodes && !triggerMotionEndRef.current) {\n      triggerMotionEndRef.current = true;\n      onOriginMotionEnd();\n    }\n  };\n\n  // Effect if unmount\n  useUnmount(triggerMotionStart, triggerMotionEnd);\n\n  // Motion end event\n  var onVisibleChanged = function onVisibleChanged(nextVisible) {\n    if (targetVisible === nextVisible) {\n      triggerMotionEnd();\n    }\n  };\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onVisibleChanged: onVisibleChanged\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n        motionStyle = _ref2.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = Object.assign({}, (_objectDestructuringEmpty(treeNode.data), treeNode.data)),\n          title = treeNode.title,\n          key = treeNode.key,\n          isStart = treeNode.isStart,\n          isEnd = treeNode.isEnd;\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = /*#__PURE__*/React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}