{"ast":null,"code":"/* eslint-disable no-param-reassign */import{removeCSS,updateCSS}from\"./Dom/dynamicCSS\";var cached;function measureScrollbarSize(ele){var randomId=\"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));var measureEle=document.createElement('div');measureEle.id=randomId;// Create Style\nvar measureStyle=measureEle.style;measureStyle.position='absolute';measureStyle.left='0';measureStyle.top='0';measureStyle.width='100px';measureStyle.height='100px';measureStyle.overflow='scroll';// Clone Style if needed\nvar fallbackWidth;var fallbackHeight;if(ele){var targetStyle=getComputedStyle(ele);measureStyle.scrollbarColor=targetStyle.scrollbarColor;measureStyle.scrollbarWidth=targetStyle.scrollbarWidth;// Set Webkit style\nvar webkitScrollbarStyle=getComputedStyle(ele,'::-webkit-scrollbar');var width=parseInt(webkitScrollbarStyle.width,10);var height=parseInt(webkitScrollbarStyle.height,10);// Try wrap to handle CSP case\ntry{var widthStyle=width?\"width: \".concat(webkitScrollbarStyle.width,\";\"):'';var heightStyle=height?\"height: \".concat(webkitScrollbarStyle.height,\";\"):'';updateCSS(\"\\n#\".concat(randomId,\"::-webkit-scrollbar {\\n\").concat(widthStyle,\"\\n\").concat(heightStyle,\"\\n}\"),randomId);}catch(e){// Can't wrap, just log error\nconsole.error(e);// Get from style directly\nfallbackWidth=width;fallbackHeight=height;}}document.body.appendChild(measureEle);// Measure. Get fallback style if provided\nvar scrollWidth=ele&&fallbackWidth&&!isNaN(fallbackWidth)?fallbackWidth:measureEle.offsetWidth-measureEle.clientWidth;var scrollHeight=ele&&fallbackHeight&&!isNaN(fallbackHeight)?fallbackHeight:measureEle.offsetHeight-measureEle.clientHeight;// Clean up\ndocument.body.removeChild(measureEle);removeCSS(randomId);return{width:scrollWidth,height:scrollHeight};}export default function getScrollBarSize(fresh){if(typeof document==='undefined'){return 0;}if(fresh||cached===undefined){cached=measureScrollbarSize();}return cached.width;}export function getTargetScrollBarSize(target){if(typeof document==='undefined'||!target||!(target instanceof Element)){return{width:0,height:0};}return measureScrollbarSize(target);}","map":{"version":3,"names":["removeCSS","updateCSS","cached","measureScrollbarSize","ele","randomId","concat","Math","random","toString","substring","measureEle","document","createElement","id","measureStyle","style","position","left","top","width","height","overflow","fallbackWidth","fallbackHeight","targetStyle","getComputedStyle","scrollbarColor","scrollbarWidth","webkitScrollbarStyle","parseInt","widthStyle","heightStyle","e","console","error","body","appendChild","scrollWidth","isNaN","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","removeChild","getScrollBarSize","fresh","undefined","getTargetScrollBarSize","target","Element"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-util/es/getScrollBarSize.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { removeCSS, updateCSS } from \"./Dom/dynamicCSS\";\nvar cached;\nfunction measureScrollbarSize(ele) {\n  var randomId = \"rc-scrollbar-measure-\".concat(Math.random().toString(36).substring(7));\n  var measureEle = document.createElement('div');\n  measureEle.id = randomId;\n\n  // Create Style\n  var measureStyle = measureEle.style;\n  measureStyle.position = 'absolute';\n  measureStyle.left = '0';\n  measureStyle.top = '0';\n  measureStyle.width = '100px';\n  measureStyle.height = '100px';\n  measureStyle.overflow = 'scroll';\n\n  // Clone Style if needed\n  var fallbackWidth;\n  var fallbackHeight;\n  if (ele) {\n    var targetStyle = getComputedStyle(ele);\n    measureStyle.scrollbarColor = targetStyle.scrollbarColor;\n    measureStyle.scrollbarWidth = targetStyle.scrollbarWidth;\n\n    // Set Webkit style\n    var webkitScrollbarStyle = getComputedStyle(ele, '::-webkit-scrollbar');\n    var width = parseInt(webkitScrollbarStyle.width, 10);\n    var height = parseInt(webkitScrollbarStyle.height, 10);\n\n    // Try wrap to handle CSP case\n    try {\n      var widthStyle = width ? \"width: \".concat(webkitScrollbarStyle.width, \";\") : '';\n      var heightStyle = height ? \"height: \".concat(webkitScrollbarStyle.height, \";\") : '';\n      updateCSS(\"\\n#\".concat(randomId, \"::-webkit-scrollbar {\\n\").concat(widthStyle, \"\\n\").concat(heightStyle, \"\\n}\"), randomId);\n    } catch (e) {\n      // Can't wrap, just log error\n      console.error(e);\n\n      // Get from style directly\n      fallbackWidth = width;\n      fallbackHeight = height;\n    }\n  }\n  document.body.appendChild(measureEle);\n\n  // Measure. Get fallback style if provided\n  var scrollWidth = ele && fallbackWidth && !isNaN(fallbackWidth) ? fallbackWidth : measureEle.offsetWidth - measureEle.clientWidth;\n  var scrollHeight = ele && fallbackHeight && !isNaN(fallbackHeight) ? fallbackHeight : measureEle.offsetHeight - measureEle.clientHeight;\n\n  // Clean up\n  document.body.removeChild(measureEle);\n  removeCSS(randomId);\n  return {\n    width: scrollWidth,\n    height: scrollHeight\n  };\n}\nexport default function getScrollBarSize(fresh) {\n  if (typeof document === 'undefined') {\n    return 0;\n  }\n  if (fresh || cached === undefined) {\n    cached = measureScrollbarSize();\n  }\n  return cached.width;\n}\nexport function getTargetScrollBarSize(target) {\n  if (typeof document === 'undefined' || !target || !(target instanceof Element)) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  return measureScrollbarSize(target);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}