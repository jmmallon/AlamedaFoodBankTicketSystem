{"ast":null,"code":"var _jsxFileName = \"/Users/jmmallon/Downloads/js/ticketproject/src/NextCustomerPage.jsx\",\n  _s = $RefreshSig$();\n// NextCustomerPage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport DvdLogo from './FoodIcon';\nimport { Divider, Button } from 'antd';\nimport 'react-toastify/dist/ReactToastify.css';\nimport wavFile from './next.mp3';\nimport './nextCustomerPage.css'; // Import the CSS\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NextCustomerPage = () => {\n  _s();\n  // Assuming you have the customer number stored in a variable\n  // const [data, setData] = useState([]);\n  const [currentTicket, setCurrentTicket] = useState(null);\n  const [sessionId, setSessionId] = useState(generateUniqueSessionId());\n  const [servedCustomers, setServedCustomers] = useState([]);\n  const [loading, setLoading] = useState(false); // Initialize loading state\n  const [waitingCustomers, setWaitingCustomers] = useState([]);\n\n  // Define the start and end times for the range (11:00 AM to 11:30 AM)\n  var startTimeHours = 10;\n  var startTimeMinutes = 30;\n  var endTimeHours = 11;\n  var endTimeMinutes = 30;\n  useEffect(() => {\n    // Fetch data from the endpoint\n    fetchNextTicket();\n  }, []);\n  useEffect(() => {\n    // Fetch data from the endpoint\n    console.log(\"creating SSE\");\n    // Set up the SSE connection to listen for updates\n    const eventSource = new EventSource('http://' + window.location.hostname + ':8888/sse/tickets');\n    // Open a connection to the SSE endpoint\n\n    eventSource.addEventListener('refresh', event => {\n      try {\n        const incomingData = JSON.parse(event.data);\n        console.log(\"Refresh Heard\", incomingData);\n        console.log(\" incomingData.refreshToken\", incomingData.refreshtoken);\n        console.log(\" incomingData.refreshToken === 'refreshToken'\", incomingData.refreshtoken === 'refreshToken');\n        if (incomingData && incomingData.refreshtoken === 'refreshToken') {\n          console.log(\"should refresh bc ncomingData.refreshToken: \", incomingData.refreshToken);\n          fetchNextTicket();\n        }\n      } catch (error) {\n        console.error('Failed to parse JSON data:', error, 'Raw data:', event.data);\n      }\n    });\n    return () => {\n      eventSource.close(); // Close the SSE connection when the component unmounts\n    };\n  }, []);\n  function generateUniqueSessionId() {\n    const timestamp = new Date().getTime();\n    const randomPart = Math.random().toString(36).substr(2, 9);\n    var x = `session-${timestamp}-${randomPart}`;\n    console.log(\"generateUniqueSessionId\", x);\n    return `session-${timestamp}-${randomPart}`;\n  }\n  const fetchNextTicket = () => {\n    fetch('http://' + window.location.hostname + ':8888/tickets/not-done-from-last-12-hours').then(response => response.json()).then(incomingData => {\n      console.log(\"incomingData: \", incomingData);\n      console.log(\"incomingData.length: \", incomingData.length);\n      if (incomingData.length === null) {\n        console.log(\"incomingData is null\");\n        setCurrentTicket(null);\n        return;\n      }\n      let currentTime = new Date();\n      let currentTimeMinusThirty = new Date(currentTime.getTime() - 30 * 60 * 1000);\n      let currentTimePlus45Mins = new Date(currentTime.getTime() + 45 * 60 * 1000);\n\n      // Separate data into two arrays based on scheduleAppointmentTime\n      const within30Mins = [];\n      const outside30Mins = [];\n      incomingData.forEach(item => {\n        // Insert code to also check if time is 11 to 1130 \n        // and then check if we have appointments from within the next 30 minutes ? \n        const isBetween11And1130 = isCurrentTimeBetweenXandY();\n        console.log(`TYLER:: DEBUG\n          new Date(): ${new Date().toLocaleDateString()}\n          isBetween11And1130: ${isBetween11And1130}\n          item.scheduleAppointmentTime: ${item.scheduleAppointmentTime} \n          new Date(item.scheduleAppointmentTime): ${new Date(item.scheduleAppointmentTime)} \n          currentTimePlusThirty: ${currentTimePlus45Mins}\n          currentTimePlusOneHour: ${currentTimePlus45Mins}\n          `);\n        if (isBetween11And1130 && item.scheduleAppointmentTime && IsTheTime1130(item.scheduleAppointmentTime)) {\n          console.log(\"TYLER :: SPECIAL CASE isBetween11And1130\", item);\n          within30Mins.push(item);\n        } else if (item.scheduleAppointmentTime && new Date(item.scheduleAppointmentTime) >= currentTimeMinusThirty && new Date(item.scheduleAppointmentTime) <= currentTime) {\n          console.log(\"TYLER:: Within 30\");\n          console.log(\"TYLER:: Schedule Time\", new Date(item.scheduleAppointmentTime));\n          console.log(\"TYLER:: Current time - 30\", new Date(currentTimeMinusThirty.getTime() - 30 * 60 * 1000));\n          within30Mins.push(item);\n        } else {\n          console.log(\"TYLER:: Outside 30\");\n          console.log(\"TYLER:: new Date(item.scheduleAppointmentTime)\", new Date(item.scheduleAppointmentTime));\n          console.log(\"TYLER:: new Date(currentTime.getTime() - 30 * 60 * 1000)\", new Date(currentTime.getTime() - 30 * 60 * 1000));\n          console.log(\"TYLER:: new Date(new Date().getTime() - 30 * 60 * 10000)\", new Date(new Date().getTime() - 30 * 60 * 1000));\n          outside30Mins.push(item);\n        }\n      });\n\n      // Sort within30Mins array based on scheduleAppointmentTime\n      within30Mins.sort((a, b) => new Date(a.scheduleAppointmentTime) - new Date(b.scheduleAppointmentTime));\n      console.log(\"Within 30 mins:\");\n      within30Mins.map(item => console.log(\"Tyler:\", item));\n      outside30Mins.sort((a, b) => a.positionInLine - b.positionInLine);\n      console.log(\"Outsite 30 mins:\");\n      outside30Mins.map(item => console.log(\"Tyler:\", item));\n      console.log(\"within30Mins[0]\", within30Mins);\n      if (within30Mins.length !== 0) {\n        console.log(\"within30Mins[0]\", within30Mins[0]);\n        setCurrentTicket(within30Mins[0]);\n      } else if (outside30Mins.length !== 0) {\n        console.log(\"outside30Min\", outside30Mins);\n        setCurrentTicket(outside30Mins[0]);\n      } else {\n        setCurrentTicket(null);\n      }\n      // Merge the arrays\n      const mergedArray = [...within30Mins, ...outside30Mins];\n\n      // Check the length and remove the first element if necessary\n      if (mergedArray.length > 0) {\n        mergedArray.shift();\n        setWaitingCustomers(mergedArray);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  const isCurrentTimeBetweenXandY = () => {\n    // Create a Date object for the current time\n    var currentTime = new Date();\n    console.log(\"currentTime\", currentTime.toTimeString());\n\n    // Get the current hours and minutes\n    var currentHours = currentTime.getHours();\n    var currentMinutes = currentTime.getMinutes();\n\n    // Compare the current time with the desired range\n    if ((currentHours > startTimeHours || currentHours === startTimeHours && currentMinutes >= startTimeMinutes) && (currentHours < endTimeHours || currentHours === endTimeHours && currentMinutes <= endTimeMinutes)) {\n      console.log(\"currentTime is between 11 and 1130\");\n      return true;\n    } else {\n      console.log(\"currentTime is NOT between 11 and 1130\");\n      return false;\n    }\n  };\n  const handleNumberTap = e => {\n    e.preventDefault();\n    if (loading !== false) return;\n    if (currentTicket) {\n      setLoading(true);\n      console.log(\"number tapped pressed\");\n      const updatedTicket = {\n        ...currentTicket,\n        done: true\n      };\n      // Update the ticket data on the backend using the PUT request\n      fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-Id': sessionId // Include the session ID as a custom header\n        },\n        body: JSON.stringify(updatedTicket)\n      }).then(response => response.json()).then(() => {\n        setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n        fetchNextTicket(); // Fetch the next ticket after updating the current one\n        const audio = new Audio(wavFile);\n        audio.play();\n      }).catch(error => {\n        console.error('Error updating ticket:', error);\n      }).finally(() => {\n        setLoading(false); // Stop loading after API call completes\n      });\n    }\n  };\n  useEffect(() => {\n    const handleKeyPress = event => {\n      console.log(\"111 event.keyCode: \", event.keyCode);\n      if (loading !== false) return;\n      if (event.key === ' ') {\n        if (currentTicket) {\n          setLoading(true);\n          console.log(\"space pressed\");\n          const updatedTicket = {\n            ...currentTicket,\n            done: true\n          };\n          // Update the ticket data on the backend using the PUT request\n          fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Session-Id': sessionId // Include the session ID as a custom header\n            },\n            body: JSON.stringify(updatedTicket)\n          }).then(response => response.json()).then(() => {\n            setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n            fetchNextTicket(); // Fetch the next ticket after updating the current one\n            const audio = new Audio(wavFile);\n            audio.play();\n          }).catch(error => console.error('Error updating ticket:', error)).finally(() => {\n            setLoading(false); // Stop loading after API call completes\n          });\n        } else {\n          fetchNextTicket();\n        }\n      } else if (event.keyCode === 120) {\n        undoTicketChange();\n      }\n    };\n    document.addEventListener('keypress', handleKeyPress);\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, [currentTicket]);\n  const undoTicketChange = () => {\n    if (servedCustomers.length === 0) {\n      console.log(\"no doneTickets\");\n      return; // No ticket to revert\n    }\n    console.log(\"doneTickets\", servedCustomers);\n    const lastDoneTicket = servedCustomers[servedCustomers.length - 1];\n    console.log(\"last done ticket:\", lastDoneTicket);\n    const updatedTicket = {\n      ...lastDoneTicket,\n      done: false\n    };\n    setLoading(true);\n    fetch(`http://${window.location.hostname}:8888/tickets/${lastDoneTicket.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Session-Id': sessionId // Include the session ID as a custom header\n      },\n      body: JSON.stringify(updatedTicket)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Error reverting ticket update. Please try again.\");\n      }\n      return response.json();\n    }).then(data => {\n      // Handle success logic if any\n      // Remove the last ticket from the doneTickets state\n      setServedCustomers(prevDoneTickets => prevDoneTickets.slice(0, -1));\n      fetchNextTicket();\n    }).catch(error => {\n      console.error('Error reverting ticket update:', error);\n    }).finally(() => {\n      setLoading(false); // Stop loading after undo action completes\n    });\n  };\n\n  // useEffect(() => {\n  // Update the document title using the browser API\n  // { console.log(\"doneTickets: \", servedCustomers) }\n  // });\n\n  const getDateInPacTime = newDate => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime);\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles',\n      hour12: true,\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pacificDateTime\n    }, void 0, false);\n  };\n  const IsTheTime1130 = newDate => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime);\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    console.log(\"TYLER::1130 Check 2:\", pacificDateTime.toString());\n    console.log(\"TYLER::1130 Check:  \", pacificDateTime.hour, \" \", pacificDateTime.minute, \" \", pacificDateTime.toString() === \"11:30 AM\");\n    return pacificDateTime.toString() === \"11:30 AM\";\n  };\n  const showAdditionalNotes = additionalNotes => {\n    if (additionalNotes === null || additionalNotes === \"\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Additional Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }, this), additionalNotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 12\n    }, this);\n  };\n  const showAdditionalNotesBigger = additionalNotes => {\n    if (additionalNotes === null || additionalNotes === \"\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"13px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Additional Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }, this), additionalNotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.floatingDivLeft,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Unserved Clients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollableContainer,\n        children: waitingCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [customer.positionInLine, \" \", customer.firstName, \" \", customer.lastName.charAt(0), \" \", customer.scheduleAppointmentTime !== null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\", showAdditionalNotes(customer.additionalNotes), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              marginTop: '4px',\n              'backgroundColor': 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.floatingDivRight,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Served Clients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.scrollableContainer,\n        children: servedCustomers.map((customer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [customer.positionInLine, \" \", customer.firstName, \" \", customer.lastName.charAt(0), \" \", customer.scheduleAppointmentTime !== null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\", showAdditionalNotes(customer.additionalNotes), /*#__PURE__*/_jsxDEV(Divider, {\n            style: {\n              'backgroundColor': 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: undoTicketChange,\n      children: /*#__PURE__*/_jsxDEV(DvdLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [console.log(\"Serving Customers!\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.buttonTextContainer,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            undoTicketChange();\n          },\n          style: {\n            margin: '10px',\n            display: 'inline-flex',\n            alignItems: 'center',\n            padding: '20px',\n            fontSize: '20px',\n            backgroundColor: 'red',\n            color: 'white'\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.servingText,\n          children: \"Serving Client Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNumberTap,\n          style: {\n            margin: '10px',\n            display: 'inline-flex',\n            alignItems: 'center',\n            padding: '20px',\n            fontSize: '20px',\n            backgroundColor: 'green',\n            color: 'white'\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: handleNumberTap,\n        style: styles.customerNumber,\n        children: currentTicket !== null && currentTicket.positionInLine !== null ? currentTicket.positionInLine : \"☺️\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), currentTicket && currentTicket.firstName !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.positionInLine,\n          children: [\"You are up: \", currentTicket.firstName, \" \", currentTicket.lastName.charAt(0), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), showAdditionalNotesBigger(currentTicket.additionalNotes)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(NextCustomerPage, \"12aPtzbS8JABX0SGvhsWAFSNer4=\");\n_c = NextCustomerPage;\nconst styles = {\n  container: {\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: '#f0f0f0' // Light gray background\n  },\n  buttonTextContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  floatingDivRight: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    // Place the div on the right side\n    width: '20%',\n    // Adjust the width as needed\n    height: '100%',\n    // Adjust the height as needed\n    background: '#fff',\n    // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n    // Shadow for the div\n    padding: '10px',\n    // Add some padding for content\n    zIndex: 1 // Set to a lower value to place it behind the other content\n  },\n  floatingDivLeft: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '20%',\n    // Adjust the width as needed\n    height: '100%',\n    // Adjust the height as needed\n    background: '#fff',\n    // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n    // Shadow for the div\n    padding: '10px',\n    // Add some padding for content\n    zIndex: 1 // Make sure it's above other content\n  },\n  servingText: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif',\n    // Apple-like font\n    color: '#333',\n    // Dark gray text color\n    margin: 0 // Remove margin between elements\n  },\n  customerNumber: {\n    fontSize: '448px',\n    // Larger font size for the number\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif',\n    // Apple-like font\n    color: '#333',\n    // Dark gray text color\n    margin: 0 // Remove margin between elements\n  },\n  // Add a new style for the scrollable container\n  scrollableContainer: {\n    height: '100%',\n    // Set a fixed height\n    overflowY: 'auto' // Add vertical scroll when content overflows\n  }\n};\nexport default NextCustomerPage;\nvar _c;\n$RefreshReg$(_c, \"NextCustomerPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","DvdLogo","Divider","Button","wavFile","Fragment","_Fragment","jsxDEV","_jsxDEV","NextCustomerPage","_s","currentTicket","setCurrentTicket","sessionId","setSessionId","generateUniqueSessionId","servedCustomers","setServedCustomers","loading","setLoading","waitingCustomers","setWaitingCustomers","startTimeHours","startTimeMinutes","endTimeHours","endTimeMinutes","fetchNextTicket","console","log","eventSource","EventSource","window","location","hostname","addEventListener","event","incomingData","JSON","parse","data","refreshtoken","refreshToken","error","close","timestamp","Date","getTime","randomPart","Math","random","toString","substr","x","fetch","then","response","json","length","currentTime","currentTimeMinusThirty","currentTimePlus45Mins","within30Mins","outside30Mins","forEach","item","isBetween11And1130","isCurrentTimeBetweenXandY","toLocaleDateString","scheduleAppointmentTime","IsTheTime1130","push","sort","a","b","map","positionInLine","mergedArray","shift","catch","toTimeString","currentHours","getHours","currentMinutes","getMinutes","handleNumberTap","e","preventDefault","updatedTicket","done","id","method","headers","body","stringify","prevDoneTickets","audio","Audio","play","finally","handleKeyPress","keyCode","key","undoTicketChange","document","removeEventListener","lastDoneTicket","ok","Error","slice","getDateInPacTime","newDate","dateObj","pacificDateTime","toLocaleString","timeZone","hour12","hour","minute","children","showAdditionalNotes","additionalNotes","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","showAdditionalNotesBigger","styles","floatingDivLeft","scrollableContainer","customer","index","firstName","lastName","charAt","marginTop","floatingDivRight","onClick","container","buttonTextContainer","margin","display","alignItems","padding","backgroundColor","color","servingText","customerNumber","_c","overflow","flexDirection","justifyContent","height","background","position","top","right","width","boxShadow","zIndex","left","fontWeight","fontFamily","overflowY","$RefreshReg$"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/NextCustomerPage.jsx"],"sourcesContent":["// NextCustomerPage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport DvdLogo from './FoodIcon';\nimport {Divider, Button } from 'antd';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport wavFile from './next.mp3';\nimport './nextCustomerPage.css';  // Import the CSS\n\nconst NextCustomerPage = () => {\n  // Assuming you have the customer number stored in a variable\n  // const [data, setData] = useState([]);\n  const [currentTicket, setCurrentTicket] = useState(null);\n  const [sessionId, setSessionId] = useState(generateUniqueSessionId());\n  const [servedCustomers, setServedCustomers] = useState([]);\n  const [loading, setLoading] = useState(false); // Initialize loading state\n  const [waitingCustomers, setWaitingCustomers] = useState([]);\n\n  // Define the start and end times for the range (11:00 AM to 11:30 AM)\n  var startTimeHours = 10;\n  var startTimeMinutes = 30;\n  var endTimeHours = 11;\n  var endTimeMinutes = 30;\n\n  useEffect(() => {\n    // Fetch data from the endpoint\n    fetchNextTicket()\n  }, []);\n\n  useEffect(() => {\n    // Fetch data from the endpoint\n    console.log(\"creating SSE\")\n    // Set up the SSE connection to listen for updates\n    const eventSource = new EventSource('http://' + window.location.hostname + ':8888/sse/tickets');\n    // Open a connection to the SSE endpoint\n\n    eventSource.addEventListener('refresh', (event) => {\n      try {\n        const incomingData = JSON.parse(event.data);\n        console.log(\"Refresh Heard\", incomingData);\n        console.log(\" incomingData.refreshToken\", incomingData.refreshtoken);\n        console.log(\" incomingData.refreshToken === 'refreshToken'\", incomingData.refreshtoken === 'refreshToken');\n\n        if (incomingData && incomingData.refreshtoken === 'refreshToken') {\n          console.log(\"should refresh bc ncomingData.refreshToken: \", incomingData.refreshToken);\n          fetchNextTicket()\n        }\n      } catch (error) {\n        console.error('Failed to parse JSON data:', error, 'Raw data:', event.data);\n      }\n    });\n\n    return () => {\n      eventSource.close(); // Close the SSE connection when the component unmounts\n    };\n  }, []);\n\n  function generateUniqueSessionId() {\n    const timestamp = new Date().getTime();\n    const randomPart = Math.random().toString(36).substr(2, 9);\n    var x = `session-${timestamp}-${randomPart}`\n    console.log(\"generateUniqueSessionId\", x)\n    return `session-${timestamp}-${randomPart}`;\n  }\n\n  const fetchNextTicket = () => {\n    fetch('http://' + window.location.hostname + ':8888/tickets/not-done-from-last-12-hours')\n      .then(response => response.json())\n      .then(incomingData => {\n        console.log(\"incomingData: \", incomingData)\n        console.log(\"incomingData.length: \", incomingData.length)\n\n        if (incomingData.length === null) {\n          console.log(\"incomingData is null\")\n          setCurrentTicket(null)\n          return;\n        }\n\n        let currentTime = new Date();\n        let currentTimeMinusThirty = new Date(currentTime.getTime() - 30 * 60 * 1000);\n\n        let currentTimePlus45Mins = new Date(currentTime.getTime() + 45 * 60 * 1000);\n\n        // Separate data into two arrays based on scheduleAppointmentTime\n        const within30Mins = [];\n        const outside30Mins = [];\n        incomingData.forEach(item => {\n          // Insert code to also check if time is 11 to 1130 \n          // and then check if we have appointments from within the next 30 minutes ? \n          const isBetween11And1130 = isCurrentTimeBetweenXandY();\n          console.log(`TYLER:: DEBUG\n          new Date(): ${new Date().toLocaleDateString()}\n          isBetween11And1130: ${isBetween11And1130}\n          item.scheduleAppointmentTime: ${item.scheduleAppointmentTime} \n          new Date(item.scheduleAppointmentTime): ${new Date(item.scheduleAppointmentTime)} \n          currentTimePlusThirty: ${currentTimePlus45Mins}\n          currentTimePlusOneHour: ${currentTimePlus45Mins}\n          `)\n\n          if (\n            isBetween11And1130 && item.scheduleAppointmentTime &&\n            IsTheTime1130(item.scheduleAppointmentTime)\n          ) {\n            console.log(\"TYLER :: SPECIAL CASE isBetween11And1130\", item)\n            within30Mins.push(item);\n          }\n          else if (\n            item.scheduleAppointmentTime &&\n            new Date(item.scheduleAppointmentTime) >=\n            currentTimeMinusThirty &&\n            new Date(item.scheduleAppointmentTime) <=\n            currentTime\n          ) {\n            console.log(\"TYLER:: Within 30\")\n            console.log(\"TYLER:: Schedule Time\", new Date(item.scheduleAppointmentTime))\n            console.log(\"TYLER:: Current time - 30\", new Date(currentTimeMinusThirty.getTime() - 30 * 60 * 1000))\n            within30Mins.push(item);\n          } else {\n            console.log(\"TYLER:: Outside 30\")\n            console.log(\"TYLER:: new Date(item.scheduleAppointmentTime)\", new Date(item.scheduleAppointmentTime))\n            console.log(\"TYLER:: new Date(currentTime.getTime() - 30 * 60 * 1000)\", new Date(currentTime.getTime() - 30 * 60 * 1000))\n            console.log(\"TYLER:: new Date(new Date().getTime() - 30 * 60 * 10000)\", new Date(new Date().getTime() - 30 * 60 * 1000))\n            outside30Mins.push(item);\n          }\n        });\n\n        // Sort within30Mins array based on scheduleAppointmentTime\n        within30Mins.sort(\n          (a, b) =>\n            new Date(a.scheduleAppointmentTime) -\n            new Date(b.scheduleAppointmentTime)\n        );\n\n        console.log(\"Within 30 mins:\")\n\n        within30Mins.map(item => (\n          console.log(\"Tyler:\", item)\n        ))\n\n        outside30Mins.sort((a, b) => a.positionInLine - b.positionInLine);\n\n        console.log(\"Outsite 30 mins:\")\n\n        outside30Mins.map(item => (\n          console.log(\"Tyler:\", item)\n        ))\n\n        console.log(\"within30Mins[0]\", within30Mins)\n\n        if (within30Mins.length !== 0) {\n          console.log(\"within30Mins[0]\", within30Mins[0])\n          setCurrentTicket(within30Mins[0]);\n        } else if (outside30Mins.length !== 0) {\n          console.log(\"outside30Min\", outside30Mins)\n          setCurrentTicket(outside30Mins[0]);\n        } else {\n          setCurrentTicket(null)\n        }\n        // Merge the arrays\n        const mergedArray = [...within30Mins, ...outside30Mins];\n\n        // Check the length and remove the first element if necessary\n        if (mergedArray.length > 0) {\n          mergedArray.shift();\n          setWaitingCustomers(mergedArray);\n\n        }\n\n\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n\n\n  const isCurrentTimeBetweenXandY = () => {\n    // Create a Date object for the current time\n    var currentTime = new Date();\n\n    console.log(\"currentTime\", currentTime.toTimeString())\n\n    // Get the current hours and minutes\n    var currentHours = currentTime.getHours();\n    var currentMinutes = currentTime.getMinutes();\n\n    // Compare the current time with the desired range\n    if (\n      (currentHours > startTimeHours || (currentHours === startTimeHours && currentMinutes >= startTimeMinutes)) &&\n      (currentHours < endTimeHours || (currentHours === endTimeHours && currentMinutes <= endTimeMinutes))\n    ) {\n      console.log(\"currentTime is between 11 and 1130\")\n      return true;\n    } else {\n      console.log(\"currentTime is NOT between 11 and 1130\")\n      return false\n    }\n  }\n\n  const handleNumberTap = (e) => {\n    e.preventDefault();\n    if (loading !== false)\n      return;\n    if (currentTicket) {\n      setLoading(true);\n      console.log(\"number tapped pressed\")\n      const updatedTicket = { ...currentTicket, done: true };\n      // Update the ticket data on the backend using the PUT request\n      fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-Id': sessionId // Include the session ID as a custom header\n        },\n        body: JSON.stringify(updatedTicket),\n      })\n        .then((response) => response.json())\n        .then(() => {\n          setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n          fetchNextTicket(); // Fetch the next ticket after updating the current one\n          const audio = new Audio(wavFile);\n          audio.play();\n        })\n        .catch((error) => {\n          console.error('Error updating ticket:', error);\n        }).finally(() => {\n          setLoading(false);  // Stop loading after API call completes\n        });\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n\n      console.log(\"111 event.keyCode: \", event.keyCode);\n      if (loading !== false)\n        return;\n      if (event.key === ' ') {\n        if (currentTicket) {\n          setLoading(true);\n          console.log(\"space pressed\")\n          const updatedTicket = { ...currentTicket, done: true };\n          // Update the ticket data on the backend using the PUT request\n          fetch(`http://${window.location.hostname}:8888/tickets/${currentTicket.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Session-Id': sessionId // Include the session ID as a custom header\n            },\n            body: JSON.stringify(updatedTicket),\n          })\n            .then((response) => response.json())\n            .then(() => {\n              setServedCustomers(prevDoneTickets => [...prevDoneTickets, currentTicket]);\n              fetchNextTicket(); // Fetch the next ticket after updating the current one\n              const audio = new Audio(wavFile);\n              audio.play();\n            })\n            .catch((error) => console.error('Error updating ticket:', error))\n            .finally(() => {\n              setLoading(false);  // Stop loading after API call completes\n            });\n        } else {\n          fetchNextTicket();\n        }\n      } else if (event.keyCode === 120) {\n        undoTicketChange()\n      }\n    };\n\n    document.addEventListener('keypress', handleKeyPress);\n\n    return () => {\n      document.removeEventListener('keypress', handleKeyPress);\n    };\n  }, [currentTicket]);\n\n  const undoTicketChange = () => {\n    if (servedCustomers.length === 0) {\n      console.log(\"no doneTickets\")\n      return;  // No ticket to revert\n    }\n    console.log(\"doneTickets\", servedCustomers)\n    const lastDoneTicket = servedCustomers[servedCustomers.length - 1];\n    console.log(\"last done ticket:\", lastDoneTicket)\n    const updatedTicket = { ...lastDoneTicket, done: false };\n    setLoading(true);\n    fetch(`http://${window.location.hostname}:8888/tickets/${lastDoneTicket.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Session-Id': sessionId // Include the session ID as a custom header\n      },\n      body: JSON.stringify(updatedTicket),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Error reverting ticket update. Please try again.\");\n        }\n        return response.json();\n      })\n      .then(data => {\n        // Handle success logic if any\n        // Remove the last ticket from the doneTickets state\n        setServedCustomers(prevDoneTickets => prevDoneTickets.slice(0, -1));\n        fetchNextTicket();\n      })\n      .catch(error => {\n        console.error('Error reverting ticket update:', error);\n      })\n      .finally(() => {\n        setLoading(false);  // Stop loading after undo action completes\n      });\n  };\n\n  // useEffect(() => {\n    // Update the document title using the browser API\n    // { console.log(\"doneTickets: \", servedCustomers) }\n  // });\n\n  const getDateInPacTime = (newDate) => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime)\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles', hour12: true, hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    return <>{pacificDateTime}</>;\n  };\n\n  const IsTheTime1130 = (newDate) => {\n    console.log(\"TYLER::getDateInPacTime\", getDateInPacTime)\n    const dateObj = new Date(newDate);\n    const pacificDateTime = dateObj.toLocaleString('en-US', {\n      timeZone: 'America/Los_Angeles', hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    console.log(\"TYLER::1130 Check 2:\", pacificDateTime.toString())\n    console.log(\"TYLER::1130 Check:  \", pacificDateTime.hour, \" \", pacificDateTime.minute, \" \", pacificDateTime.toString() === \"11:30 AM\")\n\n\n    return pacificDateTime.toString() === \"11:30 AM\"\n  };\n\n  const showAdditionalNotes = (additionalNotes) => {\n    if (additionalNotes === null || additionalNotes === \"\"){\n      return <></>\n    }\n\n    return <div>\n      <p style={{fontSize: \"10px\"}}>\n        <div >\n        Additional Notes:\n        </div>\n      {additionalNotes}\n        </p>\n       </div>\n  }\n\n\n  const showAdditionalNotesBigger = (additionalNotes) => {\n    if (additionalNotes === null || additionalNotes === \"\"){\n      return <></>\n    }\n\n    return <div>\n      <p style={{fontSize: \"13px\"}}>\n        <div >\n        Additional Notes:\n        </div>\n      {additionalNotes}\n        </p>\n      \n       </div>\n  }\n\n  return (\n\n    <div>\n      {/* Floating Div */}\n      <div style={styles.floatingDivLeft}>\n\n        <h5>Unserved Clients:</h5>\n        <div style={styles.scrollableContainer}>\n          {waitingCustomers.map((customer, index) => (\n            <div key={index}>\n              {customer.positionInLine} {customer.firstName} {customer.lastName.charAt(0)} {customer.scheduleAppointmentTime !== null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\"}\n              {showAdditionalNotes(customer.additionalNotes)}\n              \n            <Divider\n              style={{\n                marginTop:'4px',\n                'backgroundColor':'black'}}\n            ></Divider>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={styles.floatingDivRight}>\n        <h5>Served Clients:</h5>\n        <div style={styles.scrollableContainer}>\n          {servedCustomers.map((customer, index) => (\n            <div key={index}>\n               {customer.positionInLine} {customer.firstName} {customer.lastName.charAt(0)} {customer.scheduleAppointmentTime !== null ? getDateInPacTime(customer.scheduleAppointmentTime) : \"\"}\n              {showAdditionalNotes(customer.additionalNotes)}\n            <Divider\n              style={{'backgroundColor':'black'}}\n            ></Divider>\n              </div>\n          ))}\n        </div>\n\n      </div>\n      <div onClick={undoTicketChange}>\n        <DvdLogo />\n      </div>\n      <div style={styles.container}>\n        {console.log(\"Serving Customers!\")}\n        <div style={styles.buttonTextContainer}>\n          <Button\n            onClick={() => { undoTicketChange() }}\n            style={{\n              margin:'10px',\n              display: 'inline-flex',\n              alignItems: 'center',\n              padding:'20px',\n              fontSize: '20px',\n              backgroundColor: 'red',\n              color: 'white',\n            }}\n          >Previous</Button>\n          <h2 style={styles.servingText}>Serving Client Number</h2>\n\n          <Button\n            onClick={handleNumberTap}\n            style={{\n              margin:'10px',\n              display: 'inline-flex',\n              alignItems: 'center',\n              padding:'20px',\n              fontSize: '20px',\n              backgroundColor: 'green',\n              color: 'white',\n            }}\n          >Next</Button>\n        </div>\n        <h1 onClick={handleNumberTap} style={styles.customerNumber}>{(currentTicket !== null && currentTicket.positionInLine !== null) ? currentTicket.positionInLine : \"☺️\"}</h1>\n        {currentTicket && currentTicket.firstName !== null && (\n          <div>\n\n\n          \n          <h2 style={styles.positionInLine}>You are up: {currentTicket.firstName} {currentTicket.lastName.charAt(0)}.</h2>\n          {showAdditionalNotesBigger(currentTicket.additionalNotes)}\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: '#f0f0f0', // Light gray background\n  },\n\n  buttonTextContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n\n  floatingDivRight: {\n    position: 'fixed',\n    top: 0,\n    right: 0, // Place the div on the right side\n    width: '20%', // Adjust the width as needed\n    height: '100%', // Adjust the height as needed\n    background: '#fff', // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', // Shadow for the div\n    padding: '10px', // Add some padding for content\n    zIndex: 1, // Set to a lower value to place it behind the other content\n  },\n\n  floatingDivLeft: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '20%', // Adjust the width as needed\n    height: '100%', // Adjust the height as needed\n    background: '#fff', // White background\n    boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', // Shadow for the div\n    padding: '10px', // Add some padding for content\n    zIndex: 1, // Make sure it's above other content\n  },\n  servingText: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif', // Apple-like font\n    color: '#333', // Dark gray text color\n    margin: 0, // Remove margin between elements\n  },\n  customerNumber: {\n    fontSize: '448px', // Larger font size for the number\n    fontWeight: 'bold',\n    fontFamily: 'Helvetica, Arial, sans-serif', // Apple-like font\n    color: '#333', // Dark gray text color\n    margin: 0, // Remove margin between elements\n  },\n  // Add a new style for the scrollable container\n  scrollableContainer: {\n    height: '100%', // Set a fixed height\n    overflowY: 'auto', // Add vertical scroll when content overflows\n  },\n};\n\nexport default NextCustomerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}