{"ast":null,"code":"/* eslint-disable import/prefer-default-export, prefer-destructuring */import{generate}from'@ant-design/colors';import{TinyColor}from'@ctrl/tinycolor';import canUseDom from\"rc-util/es/Dom/canUseDom\";import{updateCSS}from\"rc-util/es/Dom/dynamicCSS\";import warning from'../_util/warning';const dynamicStyleMark=\"-ant-\".concat(Date.now(),\"-\").concat(Math.random());export function getStyle(globalPrefixCls,theme){const variables={};const formatColor=(color,updater)=>{let clone=color.clone();clone=(updater===null||updater===void 0?void 0:updater(clone))||clone;return clone.toRgbString();};const fillColor=(colorVal,type)=>{const baseColor=new TinyColor(colorVal);const colorPalettes=generate(baseColor.toRgbString());variables[\"\".concat(type,\"-color\")]=formatColor(baseColor);variables[\"\".concat(type,\"-color-disabled\")]=colorPalettes[1];variables[\"\".concat(type,\"-color-hover\")]=colorPalettes[4];variables[\"\".concat(type,\"-color-active\")]=colorPalettes[6];variables[\"\".concat(type,\"-color-outline\")]=baseColor.clone().setAlpha(0.2).toRgbString();variables[\"\".concat(type,\"-color-deprecated-bg\")]=colorPalettes[0];variables[\"\".concat(type,\"-color-deprecated-border\")]=colorPalettes[2];};// ================ Primary Color ================\nif(theme.primaryColor){fillColor(theme.primaryColor,'primary');const primaryColor=new TinyColor(theme.primaryColor);const primaryColors=generate(primaryColor.toRgbString());// Legacy - We should use semantic naming standard\nprimaryColors.forEach((color,index)=>{variables[\"primary-\".concat(index+1)]=color;});// Deprecated\nvariables['primary-color-deprecated-l-35']=formatColor(primaryColor,c=>c.lighten(35));variables['primary-color-deprecated-l-20']=formatColor(primaryColor,c=>c.lighten(20));variables['primary-color-deprecated-t-20']=formatColor(primaryColor,c=>c.tint(20));variables['primary-color-deprecated-t-50']=formatColor(primaryColor,c=>c.tint(50));variables['primary-color-deprecated-f-12']=formatColor(primaryColor,c=>c.setAlpha(c.getAlpha()*0.12));const primaryActiveColor=new TinyColor(primaryColors[0]);variables['primary-color-active-deprecated-f-30']=formatColor(primaryActiveColor,c=>c.setAlpha(c.getAlpha()*0.3));variables['primary-color-active-deprecated-d-02']=formatColor(primaryActiveColor,c=>c.darken(2));}// ================ Success Color ================\nif(theme.successColor){fillColor(theme.successColor,'success');}// ================ Warning Color ================\nif(theme.warningColor){fillColor(theme.warningColor,'warning');}// ================= Error Color =================\nif(theme.errorColor){fillColor(theme.errorColor,'error');}// ================= Info Color ==================\nif(theme.infoColor){fillColor(theme.infoColor,'info');}// Convert to css variables\nconst cssList=Object.keys(variables).map(key=>\"--\".concat(globalPrefixCls,\"-\").concat(key,\": \").concat(variables[key],\";\"));return\"\\n  :root {\\n    \".concat(cssList.join('\\n'),\"\\n  }\\n  \").trim();}export function registerTheme(globalPrefixCls,theme){const style=getStyle(globalPrefixCls,theme);if(canUseDom()){updateCSS(style,\"\".concat(dynamicStyleMark,\"-dynamic-theme\"));}else{process.env.NODE_ENV!==\"production\"?warning(false,'ConfigProvider','SSR do not support dynamic theme with css variables.'):void 0;}}","map":{"version":3,"names":["generate","TinyColor","canUseDom","updateCSS","warning","dynamicStyleMark","concat","Date","now","Math","random","getStyle","globalPrefixCls","theme","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","colorPalettes","setAlpha","primaryColor","primaryColors","forEach","index","c","lighten","tint","getAlpha","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","cssList","Object","keys","map","key","join","trim","registerTheme","style","process","env","NODE_ENV"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/config-provider/cssVariables.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export, prefer-destructuring */\nimport { generate } from '@ant-design/colors';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nimport { updateCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport warning from '../_util/warning';\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nexport function getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new TinyColor(colorVal);\n    const colorPalettes = generate(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new TinyColor(theme.primaryColor);\n    const primaryColors = generate(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nexport function registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if (canUseDom()) {\n    updateCSS(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}