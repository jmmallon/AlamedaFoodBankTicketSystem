{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import*as React from'react';import{pathKey}from\"../Cache\";import StyleContext from\"../StyleContext\";import useCompatibleInsertionEffect from\"./useCompatibleInsertionEffect\";import useEffectCleanupRegister from\"./useEffectCleanupRegister\";import useHMR from\"./useHMR\";export default function useGlobalCache(prefix,keyPath,cacheFn,onCacheRemove,// Add additional effect trigger by `useInsertionEffect`\nonCacheEffect){var _React$useContext=React.useContext(StyleContext),globalCache=_React$useContext.cache;var fullPath=[prefix].concat(_toConsumableArray(keyPath));var fullPathStr=pathKey(fullPath);var register=useEffectCleanupRegister([fullPathStr]);var HMRUpdate=useHMR();var buildCache=function buildCache(updater){globalCache.opUpdate(fullPathStr,function(prevCache){var _ref=prevCache||[undefined,undefined],_ref2=_slicedToArray(_ref,2),_ref2$=_ref2[0],times=_ref2$===void 0?0:_ref2$,cache=_ref2[1];// HMR should always ignore cache since developer may change it\nvar tmpCache=cache;if(process.env.NODE_ENV!=='production'&&cache&&HMRUpdate){onCacheRemove===null||onCacheRemove===void 0||onCacheRemove(tmpCache,HMRUpdate);tmpCache=null;}var mergedCache=tmpCache||cacheFn();var data=[times,mergedCache];// Call updater if need additional logic\nreturn updater?updater(data):data;});};// Create cache\nReact.useMemo(function(){buildCache();},/* eslint-disable react-hooks/exhaustive-deps */[fullPathStr]/* eslint-enable */);var cacheEntity=globalCache.opGet(fullPathStr);// HMR clean the cache but not trigger `useMemo` again\n// Let's fallback of this\n// ref https://github.com/ant-design/cssinjs/issues/127\nif(process.env.NODE_ENV!=='production'&&!cacheEntity){buildCache();cacheEntity=globalCache.opGet(fullPathStr);}var cacheContent=cacheEntity[1];// Remove if no need anymore\nuseCompatibleInsertionEffect(function(){onCacheEffect===null||onCacheEffect===void 0||onCacheEffect(cacheContent);},function(polyfill){// It's bad to call build again in effect.\n// But we have to do this since StrictMode will call effect twice\n// which will clear cache on the first time.\nbuildCache(function(_ref3){var _ref4=_slicedToArray(_ref3,2),times=_ref4[0],cache=_ref4[1];if(polyfill&&times===0){onCacheEffect===null||onCacheEffect===void 0||onCacheEffect(cacheContent);}return[times+1,cache];});return function(){globalCache.opUpdate(fullPathStr,function(prevCache){var _ref5=prevCache||[],_ref6=_slicedToArray(_ref5,2),_ref6$=_ref6[0],times=_ref6$===void 0?0:_ref6$,cache=_ref6[1];var nextCount=times-1;if(nextCount===0){// Always remove styles in useEffect callback\nregister(function(){// With polyfill, registered callback will always be called synchronously\n// But without polyfill, it will be called in effect clean up,\n// And by that time this cache is cleaned up.\nif(polyfill||!globalCache.opGet(fullPathStr)){onCacheRemove===null||onCacheRemove===void 0||onCacheRemove(cache,false);}});return null;}return[times-1,cache];});};},[fullPathStr]);return cacheContent;}","map":{"version":3,"names":["_slicedToArray","_toConsumableArray","React","pathKey","StyleContext","useCompatibleInsertionEffect","useEffectCleanupRegister","useHMR","useGlobalCache","prefix","keyPath","cacheFn","onCacheRemove","onCacheEffect","_React$useContext","useContext","globalCache","cache","fullPath","concat","fullPathStr","register","HMRUpdate","buildCache","updater","opUpdate","prevCache","_ref","undefined","_ref2","_ref2$","times","tmpCache","process","env","NODE_ENV","mergedCache","data","useMemo","cacheEntity","opGet","cacheContent","polyfill","_ref3","_ref4","_ref5","_ref6","_ref6$","nextCount"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@ant-design/cssinjs/es/hooks/useGlobalCache.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { pathKey } from \"../Cache\";\nimport StyleContext from \"../StyleContext\";\nimport useCompatibleInsertionEffect from \"./useCompatibleInsertionEffect\";\nimport useEffectCleanupRegister from \"./useEffectCleanupRegister\";\nimport useHMR from \"./useHMR\";\nexport default function useGlobalCache(prefix, keyPath, cacheFn, onCacheRemove,\n// Add additional effect trigger by `useInsertionEffect`\nonCacheEffect) {\n  var _React$useContext = React.useContext(StyleContext),\n    globalCache = _React$useContext.cache;\n  var fullPath = [prefix].concat(_toConsumableArray(keyPath));\n  var fullPathStr = pathKey(fullPath);\n  var register = useEffectCleanupRegister([fullPathStr]);\n  var HMRUpdate = useHMR();\n  var buildCache = function buildCache(updater) {\n    globalCache.opUpdate(fullPathStr, function (prevCache) {\n      var _ref = prevCache || [undefined, undefined],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        times = _ref2$ === void 0 ? 0 : _ref2$,\n        cache = _ref2[1];\n\n      // HMR should always ignore cache since developer may change it\n      var tmpCache = cache;\n      if (process.env.NODE_ENV !== 'production' && cache && HMRUpdate) {\n        onCacheRemove === null || onCacheRemove === void 0 || onCacheRemove(tmpCache, HMRUpdate);\n        tmpCache = null;\n      }\n      var mergedCache = tmpCache || cacheFn();\n      var data = [times, mergedCache];\n\n      // Call updater if need additional logic\n      return updater ? updater(data) : data;\n    });\n  };\n\n  // Create cache\n  React.useMemo(function () {\n    buildCache();\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [fullPathStr]\n  /* eslint-enable */);\n\n  var cacheEntity = globalCache.opGet(fullPathStr);\n\n  // HMR clean the cache but not trigger `useMemo` again\n  // Let's fallback of this\n  // ref https://github.com/ant-design/cssinjs/issues/127\n  if (process.env.NODE_ENV !== 'production' && !cacheEntity) {\n    buildCache();\n    cacheEntity = globalCache.opGet(fullPathStr);\n  }\n  var cacheContent = cacheEntity[1];\n\n  // Remove if no need anymore\n  useCompatibleInsertionEffect(function () {\n    onCacheEffect === null || onCacheEffect === void 0 || onCacheEffect(cacheContent);\n  }, function (polyfill) {\n    // It's bad to call build again in effect.\n    // But we have to do this since StrictMode will call effect twice\n    // which will clear cache on the first time.\n    buildCache(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        times = _ref4[0],\n        cache = _ref4[1];\n      if (polyfill && times === 0) {\n        onCacheEffect === null || onCacheEffect === void 0 || onCacheEffect(cacheContent);\n      }\n      return [times + 1, cache];\n    });\n    return function () {\n      globalCache.opUpdate(fullPathStr, function (prevCache) {\n        var _ref5 = prevCache || [],\n          _ref6 = _slicedToArray(_ref5, 2),\n          _ref6$ = _ref6[0],\n          times = _ref6$ === void 0 ? 0 : _ref6$,\n          cache = _ref6[1];\n        var nextCount = times - 1;\n        if (nextCount === 0) {\n          // Always remove styles in useEffect callback\n          register(function () {\n            // With polyfill, registered callback will always be called synchronously\n            // But without polyfill, it will be called in effect clean up,\n            // And by that time this cache is cleaned up.\n            if (polyfill || !globalCache.opGet(fullPathStr)) {\n              onCacheRemove === null || onCacheRemove === void 0 || onCacheRemove(cache, false);\n            }\n          });\n          return null;\n        }\n        return [times - 1, cache];\n      });\n    };\n  }, [fullPathStr]);\n  return cacheContent;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}