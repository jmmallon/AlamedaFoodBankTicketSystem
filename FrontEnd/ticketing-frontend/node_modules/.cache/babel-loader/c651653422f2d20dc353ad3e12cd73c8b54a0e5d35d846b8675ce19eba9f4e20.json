{"ast":null,"code":"import{numberInputToObject,rgbaToHex,rgbToHex,rgbToHsl,rgbToHsv}from'./conversion.js';import{names}from'./css-color-names.js';import{inputToRGB}from'./format-input';import{bound01,boundAlpha,clamp01}from'./util.js';var TinyColor=/** @class */function(){function TinyColor(color,opts){if(color===void 0){color='';}if(opts===void 0){opts={};}var _a;// If input is already a tinycolor, return itself\nif(color instanceof TinyColor){// eslint-disable-next-line no-constructor-return\nreturn color;}if(typeof color==='number'){color=numberInputToObject(color);}this.originalInput=color;var rgb=inputToRGB(color);this.originalInput=color;this.r=rgb.r;this.g=rgb.g;this.b=rgb.b;this.a=rgb.a;this.roundA=Math.round(100*this.a)/100;this.format=(_a=opts.format)!==null&&_a!==void 0?_a:rgb.format;this.gradientType=opts.gradientType;// Don't let the range of [0,255] come back in [0,1].\n// Potentially lose a little bit of precision here, but will fix issues where\n// .5 gets interpreted as half of the total, instead of half of 1\n// If it was supposed to be 128, this was already taken care of by `inputToRgb`\nif(this.r<1){this.r=Math.round(this.r);}if(this.g<1){this.g=Math.round(this.g);}if(this.b<1){this.b=Math.round(this.b);}this.isValid=rgb.ok;}TinyColor.prototype.isDark=function(){return this.getBrightness()<128;};TinyColor.prototype.isLight=function(){return!this.isDark();};/**\n     * Returns the perceived brightness of the color, from 0-255.\n     */TinyColor.prototype.getBrightness=function(){// http://www.w3.org/TR/AERT#color-contrast\nvar rgb=this.toRgb();return(rgb.r*299+rgb.g*587+rgb.b*114)/1000;};/**\n     * Returns the perceived luminance of a color, from 0-1.\n     */TinyColor.prototype.getLuminance=function(){// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nvar rgb=this.toRgb();var R;var G;var B;var RsRGB=rgb.r/255;var GsRGB=rgb.g/255;var BsRGB=rgb.b/255;if(RsRGB<=0.03928){R=RsRGB/12.92;}else{// eslint-disable-next-line prefer-exponentiation-operator\nR=Math.pow((RsRGB+0.055)/1.055,2.4);}if(GsRGB<=0.03928){G=GsRGB/12.92;}else{// eslint-disable-next-line prefer-exponentiation-operator\nG=Math.pow((GsRGB+0.055)/1.055,2.4);}if(BsRGB<=0.03928){B=BsRGB/12.92;}else{// eslint-disable-next-line prefer-exponentiation-operator\nB=Math.pow((BsRGB+0.055)/1.055,2.4);}return 0.2126*R+0.7152*G+0.0722*B;};/**\n     * Returns the alpha value of a color, from 0-1.\n     */TinyColor.prototype.getAlpha=function(){return this.a;};/**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */TinyColor.prototype.setAlpha=function(alpha){this.a=boundAlpha(alpha);this.roundA=Math.round(100*this.a)/100;return this;};/**\n     * Returns whether the color is monochrome.\n     */TinyColor.prototype.isMonochrome=function(){var s=this.toHsl().s;return s===0;};/**\n     * Returns the object as a HSVA object.\n     */TinyColor.prototype.toHsv=function(){var hsv=rgbToHsv(this.r,this.g,this.b);return{h:hsv.h*360,s:hsv.s,v:hsv.v,a:this.a};};/**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */TinyColor.prototype.toHsvString=function(){var hsv=rgbToHsv(this.r,this.g,this.b);var h=Math.round(hsv.h*360);var s=Math.round(hsv.s*100);var v=Math.round(hsv.v*100);return this.a===1?\"hsv(\".concat(h,\", \").concat(s,\"%, \").concat(v,\"%)\"):\"hsva(\".concat(h,\", \").concat(s,\"%, \").concat(v,\"%, \").concat(this.roundA,\")\");};/**\n     * Returns the object as a HSLA object.\n     */TinyColor.prototype.toHsl=function(){var hsl=rgbToHsl(this.r,this.g,this.b);return{h:hsl.h*360,s:hsl.s,l:hsl.l,a:this.a};};/**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */TinyColor.prototype.toHslString=function(){var hsl=rgbToHsl(this.r,this.g,this.b);var h=Math.round(hsl.h*360);var s=Math.round(hsl.s*100);var l=Math.round(hsl.l*100);return this.a===1?\"hsl(\".concat(h,\", \").concat(s,\"%, \").concat(l,\"%)\"):\"hsla(\".concat(h,\", \").concat(s,\"%, \").concat(l,\"%, \").concat(this.roundA,\")\");};/**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */TinyColor.prototype.toHex=function(allow3Char){if(allow3Char===void 0){allow3Char=false;}return rgbToHex(this.r,this.g,this.b,allow3Char);};/**\n     * Returns the hex value of the color -with a # prefixed.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */TinyColor.prototype.toHexString=function(allow3Char){if(allow3Char===void 0){allow3Char=false;}return'#'+this.toHex(allow3Char);};/**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */TinyColor.prototype.toHex8=function(allow4Char){if(allow4Char===void 0){allow4Char=false;}return rgbaToHex(this.r,this.g,this.b,this.a,allow4Char);};/**\n     * Returns the hex 8 value of the color -with a # prefixed.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */TinyColor.prototype.toHex8String=function(allow4Char){if(allow4Char===void 0){allow4Char=false;}return'#'+this.toHex8(allow4Char);};/**\n     * Returns the shorter hex value of the color depends on its alpha -with a # prefixed.\n     * @param allowShortChar will shorten hex value to 3 or 4 char if possible\n     */TinyColor.prototype.toHexShortString=function(allowShortChar){if(allowShortChar===void 0){allowShortChar=false;}return this.a===1?this.toHexString(allowShortChar):this.toHex8String(allowShortChar);};/**\n     * Returns the object as a RGBA object.\n     */TinyColor.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a};};/**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */TinyColor.prototype.toRgbString=function(){var r=Math.round(this.r);var g=Math.round(this.g);var b=Math.round(this.b);return this.a===1?\"rgb(\".concat(r,\", \").concat(g,\", \").concat(b,\")\"):\"rgba(\".concat(r,\", \").concat(g,\", \").concat(b,\", \").concat(this.roundA,\")\");};/**\n     * Returns the object as a RGBA object.\n     */TinyColor.prototype.toPercentageRgb=function(){var fmt=function(x){return\"\".concat(Math.round(bound01(x,255)*100),\"%\");};return{r:fmt(this.r),g:fmt(this.g),b:fmt(this.b),a:this.a};};/**\n     * Returns the RGBA relative values interpolated into a string\n     */TinyColor.prototype.toPercentageRgbString=function(){var rnd=function(x){return Math.round(bound01(x,255)*100);};return this.a===1?\"rgb(\".concat(rnd(this.r),\"%, \").concat(rnd(this.g),\"%, \").concat(rnd(this.b),\"%)\"):\"rgba(\".concat(rnd(this.r),\"%, \").concat(rnd(this.g),\"%, \").concat(rnd(this.b),\"%, \").concat(this.roundA,\")\");};/**\n     * The 'real' name of the color -if there is one.\n     */TinyColor.prototype.toName=function(){if(this.a===0){return'transparent';}if(this.a<1){return false;}var hex='#'+rgbToHex(this.r,this.g,this.b,false);for(var _i=0,_a=Object.entries(names);_i<_a.length;_i++){var _b=_a[_i],key=_b[0],value=_b[1];if(hex===value){return key;}}return false;};TinyColor.prototype.toString=function(format){var formatSet=Boolean(format);format=format!==null&&format!==void 0?format:this.format;var formattedString=false;var hasAlpha=this.a<1&&this.a>=0;var needsAlphaFormat=!formatSet&&hasAlpha&&(format.startsWith('hex')||format==='name');if(needsAlphaFormat){// Special case for \"transparent\", all other non-alpha formats\n// will return rgba when there is transparency.\nif(format==='name'&&this.a===0){return this.toName();}return this.toRgbString();}if(format==='rgb'){formattedString=this.toRgbString();}if(format==='prgb'){formattedString=this.toPercentageRgbString();}if(format==='hex'||format==='hex6'){formattedString=this.toHexString();}if(format==='hex3'){formattedString=this.toHexString(true);}if(format==='hex4'){formattedString=this.toHex8String(true);}if(format==='hex8'){formattedString=this.toHex8String();}if(format==='name'){formattedString=this.toName();}if(format==='hsl'){formattedString=this.toHslString();}if(format==='hsv'){formattedString=this.toHsvString();}return formattedString||this.toHexString();};TinyColor.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b);};TinyColor.prototype.clone=function(){return new TinyColor(this.toString());};/**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.lighten=function(amount){if(amount===void 0){amount=10;}var hsl=this.toHsl();hsl.l+=amount/100;hsl.l=clamp01(hsl.l);return new TinyColor(hsl);};/**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.brighten=function(amount){if(amount===void 0){amount=10;}var rgb=this.toRgb();rgb.r=Math.max(0,Math.min(255,rgb.r-Math.round(255*-(amount/100))));rgb.g=Math.max(0,Math.min(255,rgb.g-Math.round(255*-(amount/100))));rgb.b=Math.max(0,Math.min(255,rgb.b-Math.round(255*-(amount/100))));return new TinyColor(rgb);};/**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.darken=function(amount){if(amount===void 0){amount=10;}var hsl=this.toHsl();hsl.l-=amount/100;hsl.l=clamp01(hsl.l);return new TinyColor(hsl);};/**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.tint=function(amount){if(amount===void 0){amount=10;}return this.mix('white',amount);};/**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.shade=function(amount){if(amount===void 0){amount=10;}return this.mix('black',amount);};/**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.desaturate=function(amount){if(amount===void 0){amount=10;}var hsl=this.toHsl();hsl.s-=amount/100;hsl.s=clamp01(hsl.s);return new TinyColor(hsl);};/**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */TinyColor.prototype.saturate=function(amount){if(amount===void 0){amount=10;}var hsl=this.toHsl();hsl.s+=amount/100;hsl.s=clamp01(hsl.s);return new TinyColor(hsl);};/**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */TinyColor.prototype.greyscale=function(){return this.desaturate(100);};/**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */TinyColor.prototype.spin=function(amount){var hsl=this.toHsl();var hue=(hsl.h+amount)%360;hsl.h=hue<0?360+hue:hue;return new TinyColor(hsl);};/**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */TinyColor.prototype.mix=function(color,amount){if(amount===void 0){amount=50;}var rgb1=this.toRgb();var rgb2=new TinyColor(color).toRgb();var p=amount/100;var rgba={r:(rgb2.r-rgb1.r)*p+rgb1.r,g:(rgb2.g-rgb1.g)*p+rgb1.g,b:(rgb2.b-rgb1.b)*p+rgb1.b,a:(rgb2.a-rgb1.a)*p+rgb1.a};return new TinyColor(rgba);};TinyColor.prototype.analogous=function(results,slices){if(results===void 0){results=6;}if(slices===void 0){slices=30;}var hsl=this.toHsl();var part=360/slices;var ret=[this];for(hsl.h=(hsl.h-(part*results>>1)+720)%360;--results;){hsl.h=(hsl.h+part)%360;ret.push(new TinyColor(hsl));}return ret;};/**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */TinyColor.prototype.complement=function(){var hsl=this.toHsl();hsl.h=(hsl.h+180)%360;return new TinyColor(hsl);};TinyColor.prototype.monochromatic=function(results){if(results===void 0){results=6;}var hsv=this.toHsv();var h=hsv.h;var s=hsv.s;var v=hsv.v;var res=[];var modification=1/results;while(results--){res.push(new TinyColor({h:h,s:s,v:v}));v=(v+modification)%1;}return res;};TinyColor.prototype.splitcomplement=function(){var hsl=this.toHsl();var h=hsl.h;return[this,new TinyColor({h:(h+72)%360,s:hsl.s,l:hsl.l}),new TinyColor({h:(h+216)%360,s:hsl.s,l:hsl.l})];};/**\n     * Compute how the color would appear on a background\n     */TinyColor.prototype.onBackground=function(background){var fg=this.toRgb();var bg=new TinyColor(background).toRgb();var alpha=fg.a+bg.a*(1-fg.a);return new TinyColor({r:(fg.r*fg.a+bg.r*bg.a*(1-fg.a))/alpha,g:(fg.g*fg.a+bg.g*bg.a*(1-fg.a))/alpha,b:(fg.b*fg.a+bg.b*bg.a*(1-fg.a))/alpha,a:alpha});};/**\n     * Alias for `polyad(3)`\n     */TinyColor.prototype.triad=function(){return this.polyad(3);};/**\n     * Alias for `polyad(4)`\n     */TinyColor.prototype.tetrad=function(){return this.polyad(4);};/**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */TinyColor.prototype.polyad=function(n){var hsl=this.toHsl();var h=hsl.h;var result=[this];var increment=360/n;for(var i=1;i<n;i++){result.push(new TinyColor({h:(h+i*increment)%360,s:hsl.s,l:hsl.l}));}return result;};/**\n     * compare color vs current color\n     */TinyColor.prototype.equals=function(color){return this.toRgbString()===new TinyColor(color).toRgbString();};return TinyColor;}();export{TinyColor};// kept for backwards compatability with v1\nexport function tinycolor(color,opts){if(color===void 0){color='';}if(opts===void 0){opts={};}return new TinyColor(color,opts);}","map":{"version":3,"names":["numberInputToObject","rgbaToHex","rgbToHex","rgbToHsl","rgbToHsv","names","inputToRGB","bound01","boundAlpha","clamp01","TinyColor","color","opts","_a","originalInput","rgb","r","g","b","a","roundA","Math","round","format","gradientType","isValid","ok","prototype","isDark","getBrightness","isLight","toRgb","getLuminance","R","G","B","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","isMonochrome","s","toHsl","toHsv","hsv","h","v","toHsvString","concat","hsl","l","toHslString","toHex","allow3Char","toHexString","toHex8","allow4Char","toHex8String","toHexShortString","allowShortChar","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","hex","_i","Object","entries","length","_b","key","value","toString","formatSet","Boolean","formattedString","hasAlpha","needsAlphaFormat","startsWith","toNumber","clone","lighten","amount","brighten","max","min","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","p","rgba","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","n","result","increment","i","equals","tinycolor"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@ctrl/tinycolor/dist/module/index.js"],"sourcesContent":["import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion.js';\nimport { names } from './css-color-names.js';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util.js';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns whether the color is monochrome.\n     */\n    TinyColor.prototype.isMonochrome = function () {\n        var s = this.toHsl().s;\n        return s === 0;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # prefixed.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # prefixed.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the shorter hex value of the color depends on its alpha -with a # prefixed.\n     * @param allowShortChar will shorten hex value to 3 or 4 char if possible\n     */\n    TinyColor.prototype.toHexShortString = function (allowShortChar) {\n        if (allowShortChar === void 0) { allowShortChar = false; }\n        return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        var alpha = fg.a + bg.a * (1 - fg.a);\n        return new TinyColor({\n            r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\n            g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\n            b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\n            a: alpha,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}