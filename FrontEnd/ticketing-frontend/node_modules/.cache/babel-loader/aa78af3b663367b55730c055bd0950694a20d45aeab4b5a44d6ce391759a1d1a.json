{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import{useMergedState}from'rc-util';import useLayoutEffect from\"rc-util/es/hooks/useLayoutEffect\";import*as React from'react';import{fillTime,isSame}from\"../../utils/dateUtil\";export function offsetPanelDate(generateConfig,picker,date,offset){switch(picker){case'date':case'week':return generateConfig.addMonth(date,offset);case'month':case'quarter':return generateConfig.addYear(date,offset);case'year':return generateConfig.addYear(date,offset*10);case'decade':return generateConfig.addYear(date,offset*100);default:return date;}}var EMPTY_LIST=[];export default function useRangePickerValue(generateConfig,locale,calendarValue,modes,open,activeIndex,pickerMode,multiplePanel){var defaultPickerValue=arguments.length>8&&arguments[8]!==undefined?arguments[8]:EMPTY_LIST;var pickerValue=arguments.length>9&&arguments[9]!==undefined?arguments[9]:EMPTY_LIST;var timeDefaultValue=arguments.length>10&&arguments[10]!==undefined?arguments[10]:EMPTY_LIST;var onPickerValueChange=arguments.length>11?arguments[11]:undefined;var minDate=arguments.length>12?arguments[12]:undefined;var maxDate=arguments.length>13?arguments[13]:undefined;var isTimePicker=pickerMode==='time';// ======================== Active ========================\n// `activeIndex` must be valid to avoid getting empty `pickerValue`\nvar mergedActiveIndex=activeIndex||0;// ===================== Picker Value =====================\nvar getDefaultPickerValue=function getDefaultPickerValue(index){var now=generateConfig.getNow();if(isTimePicker){now=fillTime(generateConfig,now);}return defaultPickerValue[index]||calendarValue[index]||now;};// Align `pickerValue` with `showTime.defaultValue`\nvar _pickerValue=_slicedToArray(pickerValue,2),startPickerValue=_pickerValue[0],endPickerValue=_pickerValue[1];// PickerValue state\nvar _useMergedState=useMergedState(function(){return getDefaultPickerValue(0);},{value:startPickerValue}),_useMergedState2=_slicedToArray(_useMergedState,2),mergedStartPickerValue=_useMergedState2[0],setStartPickerValue=_useMergedState2[1];var _useMergedState3=useMergedState(function(){return getDefaultPickerValue(1);},{value:endPickerValue}),_useMergedState4=_slicedToArray(_useMergedState3,2),mergedEndPickerValue=_useMergedState4[0],setEndPickerValue=_useMergedState4[1];// Current PickerValue\nvar currentPickerValue=React.useMemo(function(){var current=[mergedStartPickerValue,mergedEndPickerValue][mergedActiveIndex];// Merge the `showTime.defaultValue` into `pickerValue`\nreturn isTimePicker?current:fillTime(generateConfig,current,timeDefaultValue[mergedActiveIndex]);},[isTimePicker,mergedStartPickerValue,mergedEndPickerValue,mergedActiveIndex,generateConfig,timeDefaultValue]);var setCurrentPickerValue=function setCurrentPickerValue(nextPickerValue){var source=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'panel';var updater=[setStartPickerValue,setEndPickerValue][mergedActiveIndex];updater(nextPickerValue);var clone=[mergedStartPickerValue,mergedEndPickerValue];clone[mergedActiveIndex]=nextPickerValue;if(onPickerValueChange&&(!isSame(generateConfig,locale,mergedStartPickerValue,clone[0],pickerMode)||!isSame(generateConfig,locale,mergedEndPickerValue,clone[1],pickerMode))){onPickerValueChange(clone,{source:source,range:mergedActiveIndex===1?'end':'start',mode:modes});}};// ======================== Effect ========================\n/**\n   * EndDate pickerValue is little different. It should be:\n   * - If date picker (without time), endDate is not same year & month as startDate\n   *   - pickerValue minus one month\n   * - Else pass directly\n   */var getEndDatePickerValue=function getEndDatePickerValue(startDate,endDate){if(multiplePanel){// Basic offset\nvar SAME_CHECKER={date:'month',week:'month',month:'year',quarter:'year'};var mode=SAME_CHECKER[pickerMode];if(mode&&!isSame(generateConfig,locale,startDate,endDate,mode)){return offsetPanelDate(generateConfig,pickerMode,endDate,-1);}// Year offset\nif(pickerMode==='year'){var srcYear=Math.floor(generateConfig.getYear(startDate)/10);var tgtYear=Math.floor(generateConfig.getYear(endDate)/10);if(srcYear!==tgtYear){return offsetPanelDate(generateConfig,pickerMode,endDate,-1);}}}return endDate;};// >>> When switch field, reset the picker value as prev field picker value\nvar prevActiveIndexRef=React.useRef(null);useLayoutEffect(function(){if(open){if(!defaultPickerValue[mergedActiveIndex]){var nextPickerValue=isTimePicker?null:generateConfig.getNow();/**\n         * 1. If has prevActiveIndex, use it to avoid panel jump\n         * 2. If current field has value\n         *    - If `activeIndex` is 1 and `calendarValue[0]` is not same panel as `calendarValue[1]`,\n         *      offset `calendarValue[1]` and set it\n         *    - Else use `calendarValue[activeIndex]`\n         * 3. If current field has no value but another field has value, use another field value\n         * 4. Else use now (not any `calendarValue` can ref)\n         */if(prevActiveIndexRef.current!==null&&prevActiveIndexRef.current!==mergedActiveIndex){// If from another field, not jump picker value\nnextPickerValue=[mergedStartPickerValue,mergedEndPickerValue][mergedActiveIndex^1];}else if(calendarValue[mergedActiveIndex]){// Current field has value\nnextPickerValue=mergedActiveIndex===0?calendarValue[0]:getEndDatePickerValue(calendarValue[0],calendarValue[1]);}else if(calendarValue[mergedActiveIndex^1]){// Current field has no value but another field has value\nnextPickerValue=calendarValue[mergedActiveIndex^1];}// Only sync when has value, this will sync in the `min-max` logic\nif(nextPickerValue){// nextPickerValue < minDate\nif(minDate&&generateConfig.isAfter(minDate,nextPickerValue)){nextPickerValue=minDate;}// maxDate < nextPickerValue\nvar offsetPickerValue=multiplePanel?offsetPanelDate(generateConfig,pickerMode,nextPickerValue,1):nextPickerValue;if(maxDate&&generateConfig.isAfter(offsetPickerValue,maxDate)){nextPickerValue=multiplePanel?offsetPanelDate(generateConfig,pickerMode,maxDate,-1):maxDate;}setCurrentPickerValue(nextPickerValue,'reset');}}}},[open,mergedActiveIndex,calendarValue[mergedActiveIndex]]);// >>> Reset prevActiveIndex when panel closed\nReact.useEffect(function(){if(open){prevActiveIndexRef.current=mergedActiveIndex;}else{prevActiveIndexRef.current=null;}},[open,mergedActiveIndex]);// >>> defaultPickerValue: Resync to `defaultPickerValue` for each panel focused\nuseLayoutEffect(function(){if(open&&defaultPickerValue){if(defaultPickerValue[mergedActiveIndex]){setCurrentPickerValue(defaultPickerValue[mergedActiveIndex],'reset');}}},[open,mergedActiveIndex]);return[currentPickerValue,setCurrentPickerValue];}","map":{"version":3,"names":["_slicedToArray","useMergedState","useLayoutEffect","React","fillTime","isSame","offsetPanelDate","generateConfig","picker","date","offset","addMonth","addYear","EMPTY_LIST","useRangePickerValue","locale","calendarValue","modes","open","activeIndex","pickerMode","multiplePanel","defaultPickerValue","arguments","length","undefined","pickerValue","timeDefaultValue","onPickerValueChange","minDate","maxDate","isTimePicker","mergedActiveIndex","getDefaultPickerValue","index","now","getNow","_pickerValue","startPickerValue","endPickerValue","_useMergedState","value","_useMergedState2","mergedStartPickerValue","setStartPickerValue","_useMergedState3","_useMergedState4","mergedEndPickerValue","setEndPickerValue","currentPickerValue","useMemo","current","setCurrentPickerValue","nextPickerValue","source","updater","clone","range","mode","getEndDatePickerValue","startDate","endDate","SAME_CHECKER","week","month","quarter","srcYear","Math","floor","getYear","tgtYear","prevActiveIndexRef","useRef","isAfter","offsetPickerValue","useEffect"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-picker/es/PickerInput/hooks/useRangePickerValue.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useMergedState } from 'rc-util';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { fillTime, isSame } from \"../../utils/dateUtil\";\nexport function offsetPanelDate(generateConfig, picker, date, offset) {\n  switch (picker) {\n    case 'date':\n    case 'week':\n      return generateConfig.addMonth(date, offset);\n    case 'month':\n    case 'quarter':\n      return generateConfig.addYear(date, offset);\n    case 'year':\n      return generateConfig.addYear(date, offset * 10);\n    case 'decade':\n      return generateConfig.addYear(date, offset * 100);\n    default:\n      return date;\n  }\n}\nvar EMPTY_LIST = [];\nexport default function useRangePickerValue(generateConfig, locale, calendarValue, modes, open, activeIndex, pickerMode, multiplePanel) {\n  var defaultPickerValue = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : EMPTY_LIST;\n  var pickerValue = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : EMPTY_LIST;\n  var timeDefaultValue = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : EMPTY_LIST;\n  var onPickerValueChange = arguments.length > 11 ? arguments[11] : undefined;\n  var minDate = arguments.length > 12 ? arguments[12] : undefined;\n  var maxDate = arguments.length > 13 ? arguments[13] : undefined;\n  var isTimePicker = pickerMode === 'time';\n\n  // ======================== Active ========================\n  // `activeIndex` must be valid to avoid getting empty `pickerValue`\n  var mergedActiveIndex = activeIndex || 0;\n\n  // ===================== Picker Value =====================\n  var getDefaultPickerValue = function getDefaultPickerValue(index) {\n    var now = generateConfig.getNow();\n    if (isTimePicker) {\n      now = fillTime(generateConfig, now);\n    }\n    return defaultPickerValue[index] || calendarValue[index] || now;\n  };\n\n  // Align `pickerValue` with `showTime.defaultValue`\n  var _pickerValue = _slicedToArray(pickerValue, 2),\n    startPickerValue = _pickerValue[0],\n    endPickerValue = _pickerValue[1];\n\n  // PickerValue state\n  var _useMergedState = useMergedState(function () {\n      return getDefaultPickerValue(0);\n    }, {\n      value: startPickerValue\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedStartPickerValue = _useMergedState2[0],\n    setStartPickerValue = _useMergedState2[1];\n  var _useMergedState3 = useMergedState(function () {\n      return getDefaultPickerValue(1);\n    }, {\n      value: endPickerValue\n    }),\n    _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n    mergedEndPickerValue = _useMergedState4[0],\n    setEndPickerValue = _useMergedState4[1];\n\n  // Current PickerValue\n  var currentPickerValue = React.useMemo(function () {\n    var current = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex];\n\n    // Merge the `showTime.defaultValue` into `pickerValue`\n    return isTimePicker ? current : fillTime(generateConfig, current, timeDefaultValue[mergedActiveIndex]);\n  }, [isTimePicker, mergedStartPickerValue, mergedEndPickerValue, mergedActiveIndex, generateConfig, timeDefaultValue]);\n  var setCurrentPickerValue = function setCurrentPickerValue(nextPickerValue) {\n    var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'panel';\n    var updater = [setStartPickerValue, setEndPickerValue][mergedActiveIndex];\n    updater(nextPickerValue);\n    var clone = [mergedStartPickerValue, mergedEndPickerValue];\n    clone[mergedActiveIndex] = nextPickerValue;\n    if (onPickerValueChange && (!isSame(generateConfig, locale, mergedStartPickerValue, clone[0], pickerMode) || !isSame(generateConfig, locale, mergedEndPickerValue, clone[1], pickerMode))) {\n      onPickerValueChange(clone, {\n        source: source,\n        range: mergedActiveIndex === 1 ? 'end' : 'start',\n        mode: modes\n      });\n    }\n  };\n\n  // ======================== Effect ========================\n  /**\n   * EndDate pickerValue is little different. It should be:\n   * - If date picker (without time), endDate is not same year & month as startDate\n   *   - pickerValue minus one month\n   * - Else pass directly\n   */\n  var getEndDatePickerValue = function getEndDatePickerValue(startDate, endDate) {\n    if (multiplePanel) {\n      // Basic offset\n      var SAME_CHECKER = {\n        date: 'month',\n        week: 'month',\n        month: 'year',\n        quarter: 'year'\n      };\n      var mode = SAME_CHECKER[pickerMode];\n      if (mode && !isSame(generateConfig, locale, startDate, endDate, mode)) {\n        return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n      }\n\n      // Year offset\n      if (pickerMode === 'year') {\n        var srcYear = Math.floor(generateConfig.getYear(startDate) / 10);\n        var tgtYear = Math.floor(generateConfig.getYear(endDate) / 10);\n        if (srcYear !== tgtYear) {\n          return offsetPanelDate(generateConfig, pickerMode, endDate, -1);\n        }\n      }\n    }\n    return endDate;\n  };\n\n  // >>> When switch field, reset the picker value as prev field picker value\n  var prevActiveIndexRef = React.useRef(null);\n  useLayoutEffect(function () {\n    if (open) {\n      if (!defaultPickerValue[mergedActiveIndex]) {\n        var nextPickerValue = isTimePicker ? null : generateConfig.getNow();\n\n        /**\n         * 1. If has prevActiveIndex, use it to avoid panel jump\n         * 2. If current field has value\n         *    - If `activeIndex` is 1 and `calendarValue[0]` is not same panel as `calendarValue[1]`,\n         *      offset `calendarValue[1]` and set it\n         *    - Else use `calendarValue[activeIndex]`\n         * 3. If current field has no value but another field has value, use another field value\n         * 4. Else use now (not any `calendarValue` can ref)\n         */\n\n        if (prevActiveIndexRef.current !== null && prevActiveIndexRef.current !== mergedActiveIndex) {\n          // If from another field, not jump picker value\n          nextPickerValue = [mergedStartPickerValue, mergedEndPickerValue][mergedActiveIndex ^ 1];\n        } else if (calendarValue[mergedActiveIndex]) {\n          // Current field has value\n          nextPickerValue = mergedActiveIndex === 0 ? calendarValue[0] : getEndDatePickerValue(calendarValue[0], calendarValue[1]);\n        } else if (calendarValue[mergedActiveIndex ^ 1]) {\n          // Current field has no value but another field has value\n          nextPickerValue = calendarValue[mergedActiveIndex ^ 1];\n        }\n\n        // Only sync when has value, this will sync in the `min-max` logic\n        if (nextPickerValue) {\n          // nextPickerValue < minDate\n          if (minDate && generateConfig.isAfter(minDate, nextPickerValue)) {\n            nextPickerValue = minDate;\n          }\n\n          // maxDate < nextPickerValue\n          var offsetPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, nextPickerValue, 1) : nextPickerValue;\n          if (maxDate && generateConfig.isAfter(offsetPickerValue, maxDate)) {\n            nextPickerValue = multiplePanel ? offsetPanelDate(generateConfig, pickerMode, maxDate, -1) : maxDate;\n          }\n          setCurrentPickerValue(nextPickerValue, 'reset');\n        }\n      }\n    }\n  }, [open, mergedActiveIndex, calendarValue[mergedActiveIndex]]);\n\n  // >>> Reset prevActiveIndex when panel closed\n  React.useEffect(function () {\n    if (open) {\n      prevActiveIndexRef.current = mergedActiveIndex;\n    } else {\n      prevActiveIndexRef.current = null;\n    }\n  }, [open, mergedActiveIndex]);\n\n  // >>> defaultPickerValue: Resync to `defaultPickerValue` for each panel focused\n  useLayoutEffect(function () {\n    if (open && defaultPickerValue) {\n      if (defaultPickerValue[mergedActiveIndex]) {\n        setCurrentPickerValue(defaultPickerValue[mergedActiveIndex], 'reset');\n      }\n    }\n  }, [open, mergedActiveIndex]);\n  return [currentPickerValue, setCurrentPickerValue];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}