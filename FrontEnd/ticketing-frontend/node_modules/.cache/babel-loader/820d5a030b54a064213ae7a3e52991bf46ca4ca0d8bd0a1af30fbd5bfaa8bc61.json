{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import{conductCheck}from\"rc-tree/es/utils/conductUtil\";import{toPathKey,toPathKeys}from\"../utils/commonUtil\";import{formatStrategyValues}from\"../utils/treeUtil\";export default function useSelect(multiple,triggerChange,checkedValues,halfCheckedValues,missingCheckedValues,getPathKeyEntities,getValueByKeyPath,showCheckedStrategy){return function(valuePath){if(!multiple){triggerChange(valuePath);}else{// Prepare conduct required info\nvar pathKey=toPathKey(valuePath);var checkedPathKeys=toPathKeys(checkedValues);var halfCheckedPathKeys=toPathKeys(halfCheckedValues);var existInChecked=checkedPathKeys.includes(pathKey);var existInMissing=missingCheckedValues.some(function(valueCells){return toPathKey(valueCells)===pathKey;});// Do update\nvar nextCheckedValues=checkedValues;var nextMissingValues=missingCheckedValues;if(existInMissing&&!existInChecked){// Missing value only do filter\nnextMissingValues=missingCheckedValues.filter(function(valueCells){return toPathKey(valueCells)!==pathKey;});}else{// Update checked key first\nvar nextRawCheckedKeys=existInChecked?checkedPathKeys.filter(function(key){return key!==pathKey;}):[].concat(_toConsumableArray(checkedPathKeys),[pathKey]);var pathKeyEntities=getPathKeyEntities();// Conduction by selected or not\nvar checkedKeys;if(existInChecked){var _conductCheck=conductCheck(nextRawCheckedKeys,{checked:false,halfCheckedKeys:halfCheckedPathKeys},pathKeyEntities);checkedKeys=_conductCheck.checkedKeys;}else{var _conductCheck2=conductCheck(nextRawCheckedKeys,true,pathKeyEntities);checkedKeys=_conductCheck2.checkedKeys;}// Roll up to parent level keys\nvar deDuplicatedKeys=formatStrategyValues(checkedKeys,getPathKeyEntities,showCheckedStrategy);nextCheckedValues=getValueByKeyPath(deDuplicatedKeys);}triggerChange([].concat(_toConsumableArray(nextMissingValues),_toConsumableArray(nextCheckedValues)));}};}","map":{"version":3,"names":["_toConsumableArray","conductCheck","toPathKey","toPathKeys","formatStrategyValues","useSelect","multiple","triggerChange","checkedValues","halfCheckedValues","missingCheckedValues","getPathKeyEntities","getValueByKeyPath","showCheckedStrategy","valuePath","pathKey","checkedPathKeys","halfCheckedPathKeys","existInChecked","includes","existInMissing","some","valueCells","nextCheckedValues","nextMissingValues","filter","nextRawCheckedKeys","key","concat","pathKeyEntities","checkedKeys","_conductCheck","checked","halfCheckedKeys","_conductCheck2","deDuplicatedKeys"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-cascader/es/hooks/useSelect.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { toPathKey, toPathKeys } from \"../utils/commonUtil\";\nimport { formatStrategyValues } from \"../utils/treeUtil\";\nexport default function useSelect(multiple, triggerChange, checkedValues, halfCheckedValues, missingCheckedValues, getPathKeyEntities, getValueByKeyPath, showCheckedStrategy) {\n  return function (valuePath) {\n    if (!multiple) {\n      triggerChange(valuePath);\n    } else {\n      // Prepare conduct required info\n      var pathKey = toPathKey(valuePath);\n      var checkedPathKeys = toPathKeys(checkedValues);\n      var halfCheckedPathKeys = toPathKeys(halfCheckedValues);\n      var existInChecked = checkedPathKeys.includes(pathKey);\n      var existInMissing = missingCheckedValues.some(function (valueCells) {\n        return toPathKey(valueCells) === pathKey;\n      });\n\n      // Do update\n      var nextCheckedValues = checkedValues;\n      var nextMissingValues = missingCheckedValues;\n      if (existInMissing && !existInChecked) {\n        // Missing value only do filter\n        nextMissingValues = missingCheckedValues.filter(function (valueCells) {\n          return toPathKey(valueCells) !== pathKey;\n        });\n      } else {\n        // Update checked key first\n        var nextRawCheckedKeys = existInChecked ? checkedPathKeys.filter(function (key) {\n          return key !== pathKey;\n        }) : [].concat(_toConsumableArray(checkedPathKeys), [pathKey]);\n        var pathKeyEntities = getPathKeyEntities();\n\n        // Conduction by selected or not\n        var checkedKeys;\n        if (existInChecked) {\n          var _conductCheck = conductCheck(nextRawCheckedKeys, {\n            checked: false,\n            halfCheckedKeys: halfCheckedPathKeys\n          }, pathKeyEntities);\n          checkedKeys = _conductCheck.checkedKeys;\n        } else {\n          var _conductCheck2 = conductCheck(nextRawCheckedKeys, true, pathKeyEntities);\n          checkedKeys = _conductCheck2.checkedKeys;\n        }\n\n        // Roll up to parent level keys\n        var deDuplicatedKeys = formatStrategyValues(checkedKeys, getPathKeyEntities, showCheckedStrategy);\n        nextCheckedValues = getValueByKeyPath(deDuplicatedKeys);\n      }\n      triggerChange([].concat(_toConsumableArray(nextMissingValues), _toConsumableArray(nextCheckedValues)));\n    }\n  };\n}"],"mappings":"AAAA,MAAO,CAAAA,kBAAkB,KAAM,8CAA8C,CAC7E,OAASC,YAAY,KAAQ,8BAA8B,CAC3D,OAASC,SAAS,CAAEC,UAAU,KAAQ,qBAAqB,CAC3D,OAASC,oBAAoB,KAAQ,mBAAmB,CACxD,cAAe,SAAS,CAAAC,SAASA,CAACC,QAAQ,CAAEC,aAAa,CAAEC,aAAa,CAAEC,iBAAiB,CAAEC,oBAAoB,CAAEC,kBAAkB,CAAEC,iBAAiB,CAAEC,mBAAmB,CAAE,CAC7K,MAAO,UAAUC,SAAS,CAAE,CAC1B,GAAI,CAACR,QAAQ,CAAE,CACbC,aAAa,CAACO,SAAS,CAAC,CAC1B,CAAC,IAAM,CACL;AACA,GAAI,CAAAC,OAAO,CAAGb,SAAS,CAACY,SAAS,CAAC,CAClC,GAAI,CAAAE,eAAe,CAAGb,UAAU,CAACK,aAAa,CAAC,CAC/C,GAAI,CAAAS,mBAAmB,CAAGd,UAAU,CAACM,iBAAiB,CAAC,CACvD,GAAI,CAAAS,cAAc,CAAGF,eAAe,CAACG,QAAQ,CAACJ,OAAO,CAAC,CACtD,GAAI,CAAAK,cAAc,CAAGV,oBAAoB,CAACW,IAAI,CAAC,SAAUC,UAAU,CAAE,CACnE,MAAO,CAAApB,SAAS,CAACoB,UAAU,CAAC,GAAKP,OAAO,CAC1C,CAAC,CAAC,CAEF;AACA,GAAI,CAAAQ,iBAAiB,CAAGf,aAAa,CACrC,GAAI,CAAAgB,iBAAiB,CAAGd,oBAAoB,CAC5C,GAAIU,cAAc,EAAI,CAACF,cAAc,CAAE,CACrC;AACAM,iBAAiB,CAAGd,oBAAoB,CAACe,MAAM,CAAC,SAAUH,UAAU,CAAE,CACpE,MAAO,CAAApB,SAAS,CAACoB,UAAU,CAAC,GAAKP,OAAO,CAC1C,CAAC,CAAC,CACJ,CAAC,IAAM,CACL;AACA,GAAI,CAAAW,kBAAkB,CAAGR,cAAc,CAAGF,eAAe,CAACS,MAAM,CAAC,SAAUE,GAAG,CAAE,CAC9E,MAAO,CAAAA,GAAG,GAAKZ,OAAO,CACxB,CAAC,CAAC,CAAG,EAAE,CAACa,MAAM,CAAC5B,kBAAkB,CAACgB,eAAe,CAAC,CAAE,CAACD,OAAO,CAAC,CAAC,CAC9D,GAAI,CAAAc,eAAe,CAAGlB,kBAAkB,CAAC,CAAC,CAE1C;AACA,GAAI,CAAAmB,WAAW,CACf,GAAIZ,cAAc,CAAE,CAClB,GAAI,CAAAa,aAAa,CAAG9B,YAAY,CAACyB,kBAAkB,CAAE,CACnDM,OAAO,CAAE,KAAK,CACdC,eAAe,CAAEhB,mBACnB,CAAC,CAAEY,eAAe,CAAC,CACnBC,WAAW,CAAGC,aAAa,CAACD,WAAW,CACzC,CAAC,IAAM,CACL,GAAI,CAAAI,cAAc,CAAGjC,YAAY,CAACyB,kBAAkB,CAAE,IAAI,CAAEG,eAAe,CAAC,CAC5EC,WAAW,CAAGI,cAAc,CAACJ,WAAW,CAC1C,CAEA;AACA,GAAI,CAAAK,gBAAgB,CAAG/B,oBAAoB,CAAC0B,WAAW,CAAEnB,kBAAkB,CAAEE,mBAAmB,CAAC,CACjGU,iBAAiB,CAAGX,iBAAiB,CAACuB,gBAAgB,CAAC,CACzD,CACA5B,aAAa,CAAC,EAAE,CAACqB,MAAM,CAAC5B,kBAAkB,CAACwB,iBAAiB,CAAC,CAAExB,kBAAkB,CAACuB,iBAAiB,CAAC,CAAC,CAAC,CACxG,CACF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}