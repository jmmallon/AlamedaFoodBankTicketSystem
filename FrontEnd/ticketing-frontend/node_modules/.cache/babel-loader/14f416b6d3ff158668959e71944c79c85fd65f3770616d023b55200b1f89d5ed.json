{"ast":null,"code":"\"use client\";import confirm,{modalGlobalConfig,withConfirm,withError,withInfo,withSuccess,withWarn}from'./confirm';import destroyFns from'./destroyFns';import OriginModal from'./Modal';import PurePanel from'./PurePanel';import useModal from'./useModal';function modalWarn(props){return confirm(withWarn(props));}const Modal=OriginModal;Modal.useModal=useModal;Modal.info=function infoFn(props){return confirm(withInfo(props));};Modal.success=function successFn(props){return confirm(withSuccess(props));};Modal.error=function errorFn(props){return confirm(withError(props));};Modal.warning=modalWarn;Modal.warn=modalWarn;Modal.confirm=function confirmFn(props){return confirm(withConfirm(props));};Modal.destroyAll=function destroyAllFn(){while(destroyFns.length){const close=destroyFns.pop();if(close){close();}}};Modal.config=modalGlobalConfig;Modal._InternalPanelDoNotUseOrYouWillBeFired=PurePanel;if(process.env.NODE_ENV!=='production'){Modal.displayName='Modal';}export default Modal;","map":{"version":3,"names":["confirm","modalGlobalConfig","withConfirm","withError","withInfo","withSuccess","withWarn","destroyFns","OriginModal","PurePanel","useModal","modalWarn","props","Modal","info","infoFn","success","successFn","error","errorFn","warning","warn","confirmFn","destroyAll","destroyAllFn","length","close","pop","config","_InternalPanelDoNotUseOrYouWillBeFired","process","env","NODE_ENV","displayName"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/modal/index.js"],"sourcesContent":["\"use client\";\n\nimport confirm, { modalGlobalConfig, withConfirm, withError, withInfo, withSuccess, withWarn } from './confirm';\nimport destroyFns from './destroyFns';\nimport OriginModal from './Modal';\nimport PurePanel from './PurePanel';\nimport useModal from './useModal';\nfunction modalWarn(props) {\n  return confirm(withWarn(props));\n}\nconst Modal = OriginModal;\nModal.useModal = useModal;\nModal.info = function infoFn(props) {\n  return confirm(withInfo(props));\n};\nModal.success = function successFn(props) {\n  return confirm(withSuccess(props));\n};\nModal.error = function errorFn(props) {\n  return confirm(withError(props));\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n  return confirm(withConfirm(props));\n};\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    const close = destroyFns.pop();\n    if (close) {\n      close();\n    }\n  }\n};\nModal.config = modalGlobalConfig;\nModal._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Modal.displayName = 'Modal';\n}\nexport default Modal;"],"mappings":"AAAA,YAAY,CAEZ,MAAO,CAAAA,OAAO,EAAIC,iBAAiB,CAAEC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,QAAQ,KAAQ,WAAW,CAC/G,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,WAAW,KAAM,SAAS,CACjC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,QAAS,CAAAC,SAASA,CAACC,KAAK,CAAE,CACxB,MAAO,CAAAZ,OAAO,CAACM,QAAQ,CAACM,KAAK,CAAC,CAAC,CACjC,CACA,KAAM,CAAAC,KAAK,CAAGL,WAAW,CACzBK,KAAK,CAACH,QAAQ,CAAGA,QAAQ,CACzBG,KAAK,CAACC,IAAI,CAAG,QAAS,CAAAC,MAAMA,CAACH,KAAK,CAAE,CAClC,MAAO,CAAAZ,OAAO,CAACI,QAAQ,CAACQ,KAAK,CAAC,CAAC,CACjC,CAAC,CACDC,KAAK,CAACG,OAAO,CAAG,QAAS,CAAAC,SAASA,CAACL,KAAK,CAAE,CACxC,MAAO,CAAAZ,OAAO,CAACK,WAAW,CAACO,KAAK,CAAC,CAAC,CACpC,CAAC,CACDC,KAAK,CAACK,KAAK,CAAG,QAAS,CAAAC,OAAOA,CAACP,KAAK,CAAE,CACpC,MAAO,CAAAZ,OAAO,CAACG,SAAS,CAACS,KAAK,CAAC,CAAC,CAClC,CAAC,CACDC,KAAK,CAACO,OAAO,CAAGT,SAAS,CACzBE,KAAK,CAACQ,IAAI,CAAGV,SAAS,CACtBE,KAAK,CAACb,OAAO,CAAG,QAAS,CAAAsB,SAASA,CAACV,KAAK,CAAE,CACxC,MAAO,CAAAZ,OAAO,CAACE,WAAW,CAACU,KAAK,CAAC,CAAC,CACpC,CAAC,CACDC,KAAK,CAACU,UAAU,CAAG,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACzC,MAAOjB,UAAU,CAACkB,MAAM,CAAE,CACxB,KAAM,CAAAC,KAAK,CAAGnB,UAAU,CAACoB,GAAG,CAAC,CAAC,CAC9B,GAAID,KAAK,CAAE,CACTA,KAAK,CAAC,CAAC,CACT,CACF,CACF,CAAC,CACDb,KAAK,CAACe,MAAM,CAAG3B,iBAAiB,CAChCY,KAAK,CAACgB,sCAAsC,CAAGpB,SAAS,CACxD,GAAIqB,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzCnB,KAAK,CAACoB,WAAW,CAAG,OAAO,CAC7B,CACA,cAAe,CAAApB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}