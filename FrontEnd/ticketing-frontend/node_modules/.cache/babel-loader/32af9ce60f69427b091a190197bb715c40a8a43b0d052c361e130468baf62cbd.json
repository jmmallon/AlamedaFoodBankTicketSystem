{"ast":null,"code":"import{getArrowOffsetToken}from'../style/placementArrow';export function getOverflowOptions(placement,arrowOffset,arrowWidth,autoAdjustOverflow){if(autoAdjustOverflow===false){return{adjustX:false,adjustY:false};}const overflow=autoAdjustOverflow&&typeof autoAdjustOverflow==='object'?autoAdjustOverflow:{};const baseOverflow={};switch(placement){case'top':case'bottom':baseOverflow.shiftX=arrowOffset.arrowOffsetHorizontal*2+arrowWidth;baseOverflow.shiftY=true;baseOverflow.adjustY=true;break;case'left':case'right':baseOverflow.shiftY=arrowOffset.arrowOffsetVertical*2+arrowWidth;baseOverflow.shiftX=true;baseOverflow.adjustX=true;break;}const mergedOverflow=Object.assign(Object.assign({},baseOverflow),overflow);// Support auto shift\nif(!mergedOverflow.shiftX){mergedOverflow.adjustX=true;}if(!mergedOverflow.shiftY){mergedOverflow.adjustY=true;}return mergedOverflow;}const PlacementAlignMap={left:{points:['cr','cl']},right:{points:['cl','cr']},top:{points:['bc','tc']},bottom:{points:['tc','bc']},topLeft:{points:['bl','tl']},leftTop:{points:['tr','tl']},topRight:{points:['br','tr']},rightTop:{points:['tl','tr']},bottomRight:{points:['tr','br']},rightBottom:{points:['bl','br']},bottomLeft:{points:['tl','bl']},leftBottom:{points:['br','bl']}};const ArrowCenterPlacementAlignMap={topLeft:{points:['bl','tc']},leftTop:{points:['tr','cl']},topRight:{points:['br','tc']},rightTop:{points:['tl','cr']},bottomRight:{points:['tr','bc']},rightBottom:{points:['bl','cr']},bottomLeft:{points:['tl','bc']},leftBottom:{points:['br','cl']}};const DisableAutoArrowList=new Set(['topLeft','topRight','bottomLeft','bottomRight','leftTop','leftBottom','rightTop','rightBottom']);export default function getPlacements(config){const{arrowWidth,autoAdjustOverflow,arrowPointAtCenter,offset,borderRadius,visibleFirst}=config;const halfArrowWidth=arrowWidth/2;const placementMap={};Object.keys(PlacementAlignMap).forEach(key=>{const template=arrowPointAtCenter&&ArrowCenterPlacementAlignMap[key]||PlacementAlignMap[key];const placementInfo=Object.assign(Object.assign({},template),{offset:[0,0],dynamicInset:true});placementMap[key]=placementInfo;// Disable autoArrow since design is fixed position\nif(DisableAutoArrowList.has(key)){placementInfo.autoArrow=false;}// Static offset\nswitch(key){case'top':case'topLeft':case'topRight':placementInfo.offset[1]=-halfArrowWidth-offset;break;case'bottom':case'bottomLeft':case'bottomRight':placementInfo.offset[1]=halfArrowWidth+offset;break;case'left':case'leftTop':case'leftBottom':placementInfo.offset[0]=-halfArrowWidth-offset;break;case'right':case'rightTop':case'rightBottom':placementInfo.offset[0]=halfArrowWidth+offset;break;}// Dynamic offset\nconst arrowOffset=getArrowOffsetToken({contentRadius:borderRadius,limitVerticalRadius:true});if(arrowPointAtCenter){switch(key){case'topLeft':case'bottomLeft':placementInfo.offset[0]=-arrowOffset.arrowOffsetHorizontal-halfArrowWidth;break;case'topRight':case'bottomRight':placementInfo.offset[0]=arrowOffset.arrowOffsetHorizontal+halfArrowWidth;break;case'leftTop':case'rightTop':placementInfo.offset[1]=-arrowOffset.arrowOffsetHorizontal-halfArrowWidth;break;case'leftBottom':case'rightBottom':placementInfo.offset[1]=arrowOffset.arrowOffsetHorizontal+halfArrowWidth;break;}}// Overflow\nplacementInfo.overflow=getOverflowOptions(key,arrowOffset,arrowWidth,autoAdjustOverflow);// VisibleFirst\nif(visibleFirst){placementInfo.htmlRegion='visibleFirst';}});return placementMap;}","map":{"version":3,"names":["getArrowOffsetToken","getOverflowOptions","placement","arrowOffset","arrowWidth","autoAdjustOverflow","adjustX","adjustY","overflow","baseOverflow","shiftX","arrowOffsetHorizontal","shiftY","arrowOffsetVertical","mergedOverflow","Object","assign","PlacementAlignMap","left","points","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","ArrowCenterPlacementAlignMap","DisableAutoArrowList","Set","getPlacements","config","arrowPointAtCenter","offset","borderRadius","visibleFirst","halfArrowWidth","placementMap","keys","forEach","key","template","placementInfo","dynamicInset","has","autoArrow","contentRadius","limitVerticalRadius","htmlRegion"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/_util/placements.js"],"sourcesContent":["import { getArrowOffsetToken } from '../style/placementArrow';\nexport function getOverflowOptions(placement, arrowOffset, arrowWidth, autoAdjustOverflow) {\n  if (autoAdjustOverflow === false) {\n    return {\n      adjustX: false,\n      adjustY: false\n    };\n  }\n  const overflow = autoAdjustOverflow && typeof autoAdjustOverflow === 'object' ? autoAdjustOverflow : {};\n  const baseOverflow = {};\n  switch (placement) {\n    case 'top':\n    case 'bottom':\n      baseOverflow.shiftX = arrowOffset.arrowOffsetHorizontal * 2 + arrowWidth;\n      baseOverflow.shiftY = true;\n      baseOverflow.adjustY = true;\n      break;\n    case 'left':\n    case 'right':\n      baseOverflow.shiftY = arrowOffset.arrowOffsetVertical * 2 + arrowWidth;\n      baseOverflow.shiftX = true;\n      baseOverflow.adjustX = true;\n      break;\n  }\n  const mergedOverflow = Object.assign(Object.assign({}, baseOverflow), overflow);\n  // Support auto shift\n  if (!mergedOverflow.shiftX) {\n    mergedOverflow.adjustX = true;\n  }\n  if (!mergedOverflow.shiftY) {\n    mergedOverflow.adjustY = true;\n  }\n  return mergedOverflow;\n}\nconst PlacementAlignMap = {\n  left: {\n    points: ['cr', 'cl']\n  },\n  right: {\n    points: ['cl', 'cr']\n  },\n  top: {\n    points: ['bc', 'tc']\n  },\n  bottom: {\n    points: ['tc', 'bc']\n  },\n  topLeft: {\n    points: ['bl', 'tl']\n  },\n  leftTop: {\n    points: ['tr', 'tl']\n  },\n  topRight: {\n    points: ['br', 'tr']\n  },\n  rightTop: {\n    points: ['tl', 'tr']\n  },\n  bottomRight: {\n    points: ['tr', 'br']\n  },\n  rightBottom: {\n    points: ['bl', 'br']\n  },\n  bottomLeft: {\n    points: ['tl', 'bl']\n  },\n  leftBottom: {\n    points: ['br', 'bl']\n  }\n};\nconst ArrowCenterPlacementAlignMap = {\n  topLeft: {\n    points: ['bl', 'tc']\n  },\n  leftTop: {\n    points: ['tr', 'cl']\n  },\n  topRight: {\n    points: ['br', 'tc']\n  },\n  rightTop: {\n    points: ['tl', 'cr']\n  },\n  bottomRight: {\n    points: ['tr', 'bc']\n  },\n  rightBottom: {\n    points: ['bl', 'cr']\n  },\n  bottomLeft: {\n    points: ['tl', 'bc']\n  },\n  leftBottom: {\n    points: ['br', 'cl']\n  }\n};\nconst DisableAutoArrowList = new Set(['topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'leftTop', 'leftBottom', 'rightTop', 'rightBottom']);\nexport default function getPlacements(config) {\n  const {\n    arrowWidth,\n    autoAdjustOverflow,\n    arrowPointAtCenter,\n    offset,\n    borderRadius,\n    visibleFirst\n  } = config;\n  const halfArrowWidth = arrowWidth / 2;\n  const placementMap = {};\n  Object.keys(PlacementAlignMap).forEach(key => {\n    const template = arrowPointAtCenter && ArrowCenterPlacementAlignMap[key] || PlacementAlignMap[key];\n    const placementInfo = Object.assign(Object.assign({}, template), {\n      offset: [0, 0],\n      dynamicInset: true\n    });\n    placementMap[key] = placementInfo;\n    // Disable autoArrow since design is fixed position\n    if (DisableAutoArrowList.has(key)) {\n      placementInfo.autoArrow = false;\n    }\n    // Static offset\n    switch (key) {\n      case 'top':\n      case 'topLeft':\n      case 'topRight':\n        placementInfo.offset[1] = -halfArrowWidth - offset;\n        break;\n      case 'bottom':\n      case 'bottomLeft':\n      case 'bottomRight':\n        placementInfo.offset[1] = halfArrowWidth + offset;\n        break;\n      case 'left':\n      case 'leftTop':\n      case 'leftBottom':\n        placementInfo.offset[0] = -halfArrowWidth - offset;\n        break;\n      case 'right':\n      case 'rightTop':\n      case 'rightBottom':\n        placementInfo.offset[0] = halfArrowWidth + offset;\n        break;\n    }\n    // Dynamic offset\n    const arrowOffset = getArrowOffsetToken({\n      contentRadius: borderRadius,\n      limitVerticalRadius: true\n    });\n    if (arrowPointAtCenter) {\n      switch (key) {\n        case 'topLeft':\n        case 'bottomLeft':\n          placementInfo.offset[0] = -arrowOffset.arrowOffsetHorizontal - halfArrowWidth;\n          break;\n        case 'topRight':\n        case 'bottomRight':\n          placementInfo.offset[0] = arrowOffset.arrowOffsetHorizontal + halfArrowWidth;\n          break;\n        case 'leftTop':\n        case 'rightTop':\n          placementInfo.offset[1] = -arrowOffset.arrowOffsetHorizontal - halfArrowWidth;\n          break;\n        case 'leftBottom':\n        case 'rightBottom':\n          placementInfo.offset[1] = arrowOffset.arrowOffsetHorizontal + halfArrowWidth;\n          break;\n      }\n    }\n    // Overflow\n    placementInfo.overflow = getOverflowOptions(key, arrowOffset, arrowWidth, autoAdjustOverflow);\n    // VisibleFirst\n    if (visibleFirst) {\n      placementInfo.htmlRegion = 'visibleFirst';\n    }\n  });\n  return placementMap;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}