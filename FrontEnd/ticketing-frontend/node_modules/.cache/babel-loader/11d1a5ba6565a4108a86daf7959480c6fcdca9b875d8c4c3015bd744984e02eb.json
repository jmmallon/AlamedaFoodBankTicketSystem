{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import useTimeInfo from\"../../hooks/useTimeInfo\";import{fillTime}from\"../../utils/dateUtil\";import DatePanel from\"../DatePanel\";import TimePanel from\"../TimePanel\";export default function DateTimePanel(props){var prefixCls=props.prefixCls,generateConfig=props.generateConfig,showTime=props.showTime,onSelect=props.onSelect,value=props.value,pickerValue=props.pickerValue,onHover=props.onHover;var panelPrefixCls=\"\".concat(prefixCls,\"-datetime-panel\");// =============================== Time ===============================\nvar _useTimeInfo=useTimeInfo(generateConfig,showTime),_useTimeInfo2=_slicedToArray(_useTimeInfo,1),getValidTime=_useTimeInfo2[0];// Merge the time info from `value` or `pickerValue`\nvar mergeTime=function mergeTime(date){if(value){return fillTime(generateConfig,date,value);}return fillTime(generateConfig,date,pickerValue);};// ============================== Hover ===============================\nvar onDateHover=function onDateHover(date){onHover(date?mergeTime(date):date);};// ============================== Select ==============================\nvar onDateSelect=function onDateSelect(date){// Merge with current time\nvar cloneDate=mergeTime(date);onSelect(getValidTime(cloneDate,cloneDate));};// ============================== Render ==============================\nreturn/*#__PURE__*/React.createElement(\"div\",{className:panelPrefixCls},/*#__PURE__*/React.createElement(DatePanel,_extends({},props,{onSelect:onDateSelect,onHover:onDateHover})),/*#__PURE__*/React.createElement(TimePanel,props));}","map":{"version":3,"names":["_extends","_slicedToArray","React","useTimeInfo","fillTime","DatePanel","TimePanel","DateTimePanel","props","prefixCls","generateConfig","showTime","onSelect","value","pickerValue","onHover","panelPrefixCls","concat","_useTimeInfo","_useTimeInfo2","getValidTime","mergeTime","date","onDateHover","onDateSelect","cloneDate","createElement","className"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-picker/es/PickerPanel/DateTimePanel/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useTimeInfo from \"../../hooks/useTimeInfo\";\nimport { fillTime } from \"../../utils/dateUtil\";\nimport DatePanel from \"../DatePanel\";\nimport TimePanel from \"../TimePanel\";\nexport default function DateTimePanel(props) {\n  var prefixCls = props.prefixCls,\n    generateConfig = props.generateConfig,\n    showTime = props.showTime,\n    onSelect = props.onSelect,\n    value = props.value,\n    pickerValue = props.pickerValue,\n    onHover = props.onHover;\n  var panelPrefixCls = \"\".concat(prefixCls, \"-datetime-panel\");\n\n  // =============================== Time ===============================\n  var _useTimeInfo = useTimeInfo(generateConfig, showTime),\n    _useTimeInfo2 = _slicedToArray(_useTimeInfo, 1),\n    getValidTime = _useTimeInfo2[0];\n\n  // Merge the time info from `value` or `pickerValue`\n  var mergeTime = function mergeTime(date) {\n    if (value) {\n      return fillTime(generateConfig, date, value);\n    }\n    return fillTime(generateConfig, date, pickerValue);\n  };\n\n  // ============================== Hover ===============================\n  var onDateHover = function onDateHover(date) {\n    onHover(date ? mergeTime(date) : date);\n  };\n\n  // ============================== Select ==============================\n  var onDateSelect = function onDateSelect(date) {\n    // Merge with current time\n    var cloneDate = mergeTime(date);\n    onSelect(getValidTime(cloneDate, cloneDate));\n  };\n\n  // ============================== Render ==============================\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: panelPrefixCls\n  }, /*#__PURE__*/React.createElement(DatePanel, _extends({}, props, {\n    onSelect: onDateSelect,\n    onHover: onDateHover\n  })), /*#__PURE__*/React.createElement(TimePanel, props));\n}"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,oCAAoC,CACzD,MAAO,CAAAC,cAAc,KAAM,0CAA0C,CACrE,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,WAAW,KAAM,yBAAyB,CACjD,OAASC,QAAQ,KAAQ,sBAAsB,CAC/C,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,cAAe,SAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAC3C,GAAI,CAAAC,SAAS,CAAGD,KAAK,CAACC,SAAS,CAC7BC,cAAc,CAAGF,KAAK,CAACE,cAAc,CACrCC,QAAQ,CAAGH,KAAK,CAACG,QAAQ,CACzBC,QAAQ,CAAGJ,KAAK,CAACI,QAAQ,CACzBC,KAAK,CAAGL,KAAK,CAACK,KAAK,CACnBC,WAAW,CAAGN,KAAK,CAACM,WAAW,CAC/BC,OAAO,CAAGP,KAAK,CAACO,OAAO,CACzB,GAAI,CAAAC,cAAc,CAAG,EAAE,CAACC,MAAM,CAACR,SAAS,CAAE,iBAAiB,CAAC,CAE5D;AACA,GAAI,CAAAS,YAAY,CAAGf,WAAW,CAACO,cAAc,CAAEC,QAAQ,CAAC,CACtDQ,aAAa,CAAGlB,cAAc,CAACiB,YAAY,CAAE,CAAC,CAAC,CAC/CE,YAAY,CAAGD,aAAa,CAAC,CAAC,CAAC,CAEjC;AACA,GAAI,CAAAE,SAAS,CAAG,QAAS,CAAAA,SAASA,CAACC,IAAI,CAAE,CACvC,GAAIT,KAAK,CAAE,CACT,MAAO,CAAAT,QAAQ,CAACM,cAAc,CAAEY,IAAI,CAAET,KAAK,CAAC,CAC9C,CACA,MAAO,CAAAT,QAAQ,CAACM,cAAc,CAAEY,IAAI,CAAER,WAAW,CAAC,CACpD,CAAC,CAED;AACA,GAAI,CAAAS,WAAW,CAAG,QAAS,CAAAA,WAAWA,CAACD,IAAI,CAAE,CAC3CP,OAAO,CAACO,IAAI,CAAGD,SAAS,CAACC,IAAI,CAAC,CAAGA,IAAI,CAAC,CACxC,CAAC,CAED;AACA,GAAI,CAAAE,YAAY,CAAG,QAAS,CAAAA,YAAYA,CAACF,IAAI,CAAE,CAC7C;AACA,GAAI,CAAAG,SAAS,CAAGJ,SAAS,CAACC,IAAI,CAAC,CAC/BV,QAAQ,CAACQ,YAAY,CAACK,SAAS,CAAEA,SAAS,CAAC,CAAC,CAC9C,CAAC,CAED;AACA,MAAO,aAAavB,KAAK,CAACwB,aAAa,CAAC,KAAK,CAAE,CAC7CC,SAAS,CAAEX,cACb,CAAC,CAAE,aAAad,KAAK,CAACwB,aAAa,CAACrB,SAAS,CAAEL,QAAQ,CAAC,CAAC,CAAC,CAAEQ,KAAK,CAAE,CACjEI,QAAQ,CAAEY,YAAY,CACtBT,OAAO,CAAEQ,WACX,CAAC,CAAC,CAAC,CAAE,aAAarB,KAAK,CAACwB,aAAa,CAACpB,SAAS,CAAEE,KAAK,CAAC,CAAC,CAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}