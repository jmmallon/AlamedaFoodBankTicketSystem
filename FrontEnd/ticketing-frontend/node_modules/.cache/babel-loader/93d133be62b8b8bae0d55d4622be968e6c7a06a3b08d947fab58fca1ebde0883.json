{"ast":null,"code":"\"use client\";\n\n/* eslint-disable import/prefer-default-export */\nvar _s = $RefreshSig$();\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  _s();\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\n_s(useToken, \"udB8SBO83eCiJnb009Vpzr44aXU=\", false, function () {\n  return [useInternalToken];\n});\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken\n};","map":{"version":3,"names":["_s","$RefreshSig$","getDesignToken","defaultConfig","useToken","useInternalToken","compactAlgorithm","darkAlgorithm","defaultAlgorithm","theme","token","hashId","defaultSeed"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/theme/index.js"],"sourcesContent":["\"use client\";\n\n/* eslint-disable import/prefer-default-export */\nimport getDesignToken from './getDesignToken';\nimport { defaultConfig, useToken as useInternalToken } from './internal';\nimport compactAlgorithm from './themes/compact';\nimport darkAlgorithm from './themes/dark';\nimport defaultAlgorithm from './themes/default';\n// ZombieJ: We export as object to user but array in internal.\n// This is used to minimize the bundle size for antd package but safe to refactor as object also.\n// Please do not export internal `useToken` directly to avoid something export unexpected.\n/** Get current context Design Token. Will be different if you are using nest theme config. */\nfunction useToken() {\n  const [theme, token, hashId] = useInternalToken();\n  return {\n    theme,\n    token,\n    hashId\n  };\n}\nexport default {\n  /** @private Test Usage. Do not use in production. */\n  defaultConfig,\n  /** Default seedToken */\n  defaultSeed: defaultConfig.token,\n  useToken,\n  defaultAlgorithm,\n  darkAlgorithm,\n  compactAlgorithm,\n  getDesignToken\n};"],"mappings":"AAAA,YAAY;;AAEZ;AAAA,IAAAA,EAAA,GAAAC,YAAA;AACA,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,aAAa,EAAEC,QAAQ,IAAIC,gBAAgB,QAAQ,YAAY;AACxE,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,SAASJ,QAAQA,CAAA,EAAG;EAAAJ,EAAA;EAClB,MAAM,CAACS,KAAK,EAAEC,KAAK,EAAEC,MAAM,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EACjD,OAAO;IACLI,KAAK;IACLC,KAAK;IACLC;EACF,CAAC;AACH;AAACX,EAAA,CAPQI,QAAQ;EAAA,QACgBC,gBAAgB;AAAA;AAOjD,eAAe;EACb;EACAF,aAAa;EACb;EACAS,WAAW,EAAET,aAAa,CAACO,KAAK;EAChCN,QAAQ;EACRI,gBAAgB;EAChBD,aAAa;EACbD,gBAAgB;EAChBJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}