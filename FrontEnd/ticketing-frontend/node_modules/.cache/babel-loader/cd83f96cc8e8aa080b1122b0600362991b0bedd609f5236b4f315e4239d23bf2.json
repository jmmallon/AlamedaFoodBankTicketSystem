{"ast":null,"code":"export function hasAddon(props){return!!(props.addonBefore||props.addonAfter);}export function hasPrefixSuffix(props){return!!(props.prefix||props.suffix||props.allowClear);}// TODO: It's better to use `Proxy` replace the `element.value`. But we still need support IE11.\nfunction cloneEvent(event,target,value){// A bug report filed on WebKit's Bugzilla tracker, dating back to 2009, specifically addresses the issue of cloneNode() not copying files of <input type=\"file\"> elements.\n// As of the last update, this bug was still marked as \"NEW,\" indicating that it might not have been resolved yet​​.\n// https://bugs.webkit.org/show_bug.cgi?id=28123\nvar currentTarget=target.cloneNode(true);// click clear icon\nvar newEvent=Object.create(event,{target:{value:currentTarget},currentTarget:{value:currentTarget}});// Fill data\ncurrentTarget.value=value;// Fill selection. Some type like `email` not support selection\n// https://github.com/ant-design/ant-design/issues/47833\nif(typeof target.selectionStart==='number'&&typeof target.selectionEnd==='number'){currentTarget.selectionStart=target.selectionStart;currentTarget.selectionEnd=target.selectionEnd;}return newEvent;}export function resolveOnChange(target,e,onChange,targetValue){if(!onChange){return;}var event=e;if(e.type==='click'){// Clone a new target for event.\n// Avoid the following usage, the setQuery method gets the original value.\n//\n// const [query, setQuery] = React.useState('');\n// <Input\n//   allowClear\n//   value={query}\n//   onChange={(e)=> {\n//     setQuery((prevStatus) => e.target.value);\n//   }}\n// />\nevent=cloneEvent(e,target,'');onChange(event);return;}// Trigger by composition event, this means we need force change the input value\n// https://github.com/ant-design/ant-design/issues/45737\n// https://github.com/ant-design/ant-design/issues/46598\nif(target.type!=='file'&&targetValue!==undefined){event=cloneEvent(e,target,targetValue);onChange(event);return;}onChange(event);}export function triggerFocus(element,option){if(!element)return;element.focus(option);// Selection content\nvar _ref=option||{},cursor=_ref.cursor;if(cursor){var len=element.value.length;switch(cursor){case'start':element.setSelectionRange(0,0);break;case'end':element.setSelectionRange(len,len);break;default:element.setSelectionRange(0,len);}}}","map":{"version":3,"names":["hasAddon","props","addonBefore","addonAfter","hasPrefixSuffix","prefix","suffix","allowClear","cloneEvent","event","target","value","currentTarget","cloneNode","newEvent","Object","create","selectionStart","selectionEnd","resolveOnChange","e","onChange","targetValue","type","undefined","triggerFocus","element","option","focus","_ref","cursor","len","length","setSelectionRange"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-input/es/utils/commonUtils.js"],"sourcesContent":["export function hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nexport function hasPrefixSuffix(props) {\n  return !!(props.prefix || props.suffix || props.allowClear);\n}\n\n// TODO: It's better to use `Proxy` replace the `element.value`. But we still need support IE11.\nfunction cloneEvent(event, target, value) {\n  // A bug report filed on WebKit's Bugzilla tracker, dating back to 2009, specifically addresses the issue of cloneNode() not copying files of <input type=\"file\"> elements.\n  // As of the last update, this bug was still marked as \"NEW,\" indicating that it might not have been resolved yet​​.\n  // https://bugs.webkit.org/show_bug.cgi?id=28123\n  var currentTarget = target.cloneNode(true);\n\n  // click clear icon\n  var newEvent = Object.create(event, {\n    target: {\n      value: currentTarget\n    },\n    currentTarget: {\n      value: currentTarget\n    }\n  });\n\n  // Fill data\n  currentTarget.value = value;\n\n  // Fill selection. Some type like `email` not support selection\n  // https://github.com/ant-design/ant-design/issues/47833\n  if (typeof target.selectionStart === 'number' && typeof target.selectionEnd === 'number') {\n    currentTarget.selectionStart = target.selectionStart;\n    currentTarget.selectionEnd = target.selectionEnd;\n  }\n  return newEvent;\n}\nexport function resolveOnChange(target, e, onChange, targetValue) {\n  if (!onChange) {\n    return;\n  }\n  var event = e;\n  if (e.type === 'click') {\n    // Clone a new target for event.\n    // Avoid the following usage, the setQuery method gets the original value.\n    //\n    // const [query, setQuery] = React.useState('');\n    // <Input\n    //   allowClear\n    //   value={query}\n    //   onChange={(e)=> {\n    //     setQuery((prevStatus) => e.target.value);\n    //   }}\n    // />\n\n    event = cloneEvent(e, target, '');\n    onChange(event);\n    return;\n  }\n\n  // Trigger by composition event, this means we need force change the input value\n  // https://github.com/ant-design/ant-design/issues/45737\n  // https://github.com/ant-design/ant-design/issues/46598\n  if (target.type !== 'file' && targetValue !== undefined) {\n    event = cloneEvent(e, target, targetValue);\n    onChange(event);\n    return;\n  }\n  onChange(event);\n}\nexport function triggerFocus(element, option) {\n  if (!element) return;\n  element.focus(option);\n\n  // Selection content\n  var _ref = option || {},\n    cursor = _ref.cursor;\n  if (cursor) {\n    var len = element.value.length;\n    switch (cursor) {\n      case 'start':\n        element.setSelectionRange(0, 0);\n        break;\n      case 'end':\n        element.setSelectionRange(len, len);\n        break;\n      default:\n        element.setSelectionRange(0, len);\n    }\n  }\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,QAAQA,CAACC,KAAK,CAAE,CAC9B,MAAO,CAAC,EAAEA,KAAK,CAACC,WAAW,EAAID,KAAK,CAACE,UAAU,CAAC,CAClD,CACA,MAAO,SAAS,CAAAC,eAAeA,CAACH,KAAK,CAAE,CACrC,MAAO,CAAC,EAAEA,KAAK,CAACI,MAAM,EAAIJ,KAAK,CAACK,MAAM,EAAIL,KAAK,CAACM,UAAU,CAAC,CAC7D,CAEA;AACA,QAAS,CAAAC,UAAUA,CAACC,KAAK,CAAEC,MAAM,CAAEC,KAAK,CAAE,CACxC;AACA;AACA;AACA,GAAI,CAAAC,aAAa,CAAGF,MAAM,CAACG,SAAS,CAAC,IAAI,CAAC,CAE1C;AACA,GAAI,CAAAC,QAAQ,CAAGC,MAAM,CAACC,MAAM,CAACP,KAAK,CAAE,CAClCC,MAAM,CAAE,CACNC,KAAK,CAAEC,aACT,CAAC,CACDA,aAAa,CAAE,CACbD,KAAK,CAAEC,aACT,CACF,CAAC,CAAC,CAEF;AACAA,aAAa,CAACD,KAAK,CAAGA,KAAK,CAE3B;AACA;AACA,GAAI,MAAO,CAAAD,MAAM,CAACO,cAAc,GAAK,QAAQ,EAAI,MAAO,CAAAP,MAAM,CAACQ,YAAY,GAAK,QAAQ,CAAE,CACxFN,aAAa,CAACK,cAAc,CAAGP,MAAM,CAACO,cAAc,CACpDL,aAAa,CAACM,YAAY,CAAGR,MAAM,CAACQ,YAAY,CAClD,CACA,MAAO,CAAAJ,QAAQ,CACjB,CACA,MAAO,SAAS,CAAAK,eAAeA,CAACT,MAAM,CAAEU,CAAC,CAAEC,QAAQ,CAAEC,WAAW,CAAE,CAChE,GAAI,CAACD,QAAQ,CAAE,CACb,OACF,CACA,GAAI,CAAAZ,KAAK,CAAGW,CAAC,CACb,GAAIA,CAAC,CAACG,IAAI,GAAK,OAAO,CAAE,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAd,KAAK,CAAGD,UAAU,CAACY,CAAC,CAAEV,MAAM,CAAE,EAAE,CAAC,CACjCW,QAAQ,CAACZ,KAAK,CAAC,CACf,OACF,CAEA;AACA;AACA;AACA,GAAIC,MAAM,CAACa,IAAI,GAAK,MAAM,EAAID,WAAW,GAAKE,SAAS,CAAE,CACvDf,KAAK,CAAGD,UAAU,CAACY,CAAC,CAAEV,MAAM,CAAEY,WAAW,CAAC,CAC1CD,QAAQ,CAACZ,KAAK,CAAC,CACf,OACF,CACAY,QAAQ,CAACZ,KAAK,CAAC,CACjB,CACA,MAAO,SAAS,CAAAgB,YAAYA,CAACC,OAAO,CAAEC,MAAM,CAAE,CAC5C,GAAI,CAACD,OAAO,CAAE,OACdA,OAAO,CAACE,KAAK,CAACD,MAAM,CAAC,CAErB;AACA,GAAI,CAAAE,IAAI,CAAGF,MAAM,EAAI,CAAC,CAAC,CACrBG,MAAM,CAAGD,IAAI,CAACC,MAAM,CACtB,GAAIA,MAAM,CAAE,CACV,GAAI,CAAAC,GAAG,CAAGL,OAAO,CAACf,KAAK,CAACqB,MAAM,CAC9B,OAAQF,MAAM,EACZ,IAAK,OAAO,CACVJ,OAAO,CAACO,iBAAiB,CAAC,CAAC,CAAE,CAAC,CAAC,CAC/B,MACF,IAAK,KAAK,CACRP,OAAO,CAACO,iBAAiB,CAACF,GAAG,CAAEA,GAAG,CAAC,CACnC,MACF,QACEL,OAAO,CAACO,iBAAiB,CAAC,CAAC,CAAEF,GAAG,CAAC,CACrC,CACF,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}