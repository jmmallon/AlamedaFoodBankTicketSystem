{"ast":null,"code":"// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */var HIDDEN_TEXTAREA_STYLE=\"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important;\\n  pointer-events: none !important;\\n\";var SIZING_STYLE=['letter-spacing','line-height','padding-top','padding-bottom','font-family','font-weight','font-size','font-variant','text-rendering','text-transform','width','text-indent','padding-left','padding-right','border-width','box-sizing','word-break','white-space'];var computedStyleCache={};var hiddenTextarea;export function calculateNodeStyling(node){var useCache=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var nodeRef=node.getAttribute('id')||node.getAttribute('data-reactid')||node.getAttribute('name');if(useCache&&computedStyleCache[nodeRef]){return computedStyleCache[nodeRef];}var style=window.getComputedStyle(node);var boxSizing=style.getPropertyValue('box-sizing')||style.getPropertyValue('-moz-box-sizing')||style.getPropertyValue('-webkit-box-sizing');var paddingSize=parseFloat(style.getPropertyValue('padding-bottom'))+parseFloat(style.getPropertyValue('padding-top'));var borderSize=parseFloat(style.getPropertyValue('border-bottom-width'))+parseFloat(style.getPropertyValue('border-top-width'));var sizingStyle=SIZING_STYLE.map(function(name){return\"\".concat(name,\":\").concat(style.getPropertyValue(name));}).join(';');var nodeInfo={sizingStyle:sizingStyle,paddingSize:paddingSize,borderSize:borderSize,boxSizing:boxSizing};if(useCache&&nodeRef){computedStyleCache[nodeRef]=nodeInfo;}return nodeInfo;}export default function calculateAutoSizeStyle(uiTextNode){var useCache=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var minRows=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var maxRows=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;if(!hiddenTextarea){hiddenTextarea=document.createElement('textarea');hiddenTextarea.setAttribute('tab-index','-1');hiddenTextarea.setAttribute('aria-hidden','true');document.body.appendChild(hiddenTextarea);}// Fix wrap=\"off\" issue\n// https://github.com/ant-design/ant-design/issues/6577\nif(uiTextNode.getAttribute('wrap')){hiddenTextarea.setAttribute('wrap',uiTextNode.getAttribute('wrap'));}else{hiddenTextarea.removeAttribute('wrap');}// Copy all CSS properties that have an impact on the height of the content in\n// the textbox\nvar _calculateNodeStyling=calculateNodeStyling(uiTextNode,useCache),paddingSize=_calculateNodeStyling.paddingSize,borderSize=_calculateNodeStyling.borderSize,boxSizing=_calculateNodeStyling.boxSizing,sizingStyle=_calculateNodeStyling.sizingStyle;// Need to have the overflow attribute to hide the scrollbar otherwise\n// text-lines will not calculated properly as the shadow will technically be\n// narrower for content\nhiddenTextarea.setAttribute('style',\"\".concat(sizingStyle,\";\").concat(HIDDEN_TEXTAREA_STYLE));hiddenTextarea.value=uiTextNode.value||uiTextNode.placeholder||'';var minHeight=undefined;var maxHeight=undefined;var overflowY;var height=hiddenTextarea.scrollHeight;if(boxSizing==='border-box'){// border-box: add border, since height = content + padding + border\nheight+=borderSize;}else if(boxSizing==='content-box'){// remove padding, since height = content\nheight-=paddingSize;}if(minRows!==null||maxRows!==null){// measure height of a textarea with a single row\nhiddenTextarea.value=' ';var singleRowHeight=hiddenTextarea.scrollHeight-paddingSize;if(minRows!==null){minHeight=singleRowHeight*minRows;if(boxSizing==='border-box'){minHeight=minHeight+paddingSize+borderSize;}height=Math.max(minHeight,height);}if(maxRows!==null){maxHeight=singleRowHeight*maxRows;if(boxSizing==='border-box'){maxHeight=maxHeight+paddingSize+borderSize;}overflowY=height>maxHeight?'':'hidden';height=Math.min(maxHeight,height);}}var style={height:height,overflowY:overflowY,resize:'none'};if(minHeight){style.minHeight=minHeight;}if(maxHeight){style.maxHeight=maxHeight;}return style;}","map":{"version":3,"names":["HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","hiddenTextarea","calculateNodeStyling","node","useCache","arguments","length","undefined","nodeRef","getAttribute","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","sizingStyle","map","name","concat","join","nodeInfo","calculateAutoSizeStyle","uiTextNode","minRows","maxRows","document","createElement","setAttribute","body","appendChild","removeAttribute","_calculateNodeStyling","value","placeholder","minHeight","maxHeight","overflowY","height","scrollHeight","singleRowHeight","Math","max","min","resize"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-textarea/es/calculateNodeHeight.js"],"sourcesContent":["// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\n\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important;\\n  pointer-events: none !important;\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break', 'white-space'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nexport default function calculateAutoSizeStyle(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n    paddingSize = _calculateNodeStyling.paddingSize,\n    borderSize = _calculateNodeStyling.borderSize,\n    boxSizing = _calculateNodeStyling.boxSizing,\n    sizingStyle = _calculateNodeStyling.sizingStyle;\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = undefined;\n  var maxHeight = undefined;\n  var overflowY;\n  var height = hiddenTextarea.scrollHeight;\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n  var style = {\n    height: height,\n    overflowY: overflowY,\n    resize: 'none'\n  };\n  if (minHeight) {\n    style.minHeight = minHeight;\n  }\n  if (maxHeight) {\n    style.maxHeight = maxHeight;\n  }\n  return style;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}