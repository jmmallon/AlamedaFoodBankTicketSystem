{"ast":null,"code":"\"use client\";import React,{useContext}from'react';import{render}from\"rc-util/es/React/render\";import{AppConfigContext}from'../app/context';import ConfigProvider,{ConfigContext,globalConfig,warnContext}from'../config-provider';import PurePanel from'./PurePanel';import useNotification,{useInternalNotification}from'./useNotification';let notification=null;let act=callback=>callback();let taskQueue=[];let defaultGlobalConfig={};function getGlobalContext(){const{getContainer,rtl,maxCount,top,bottom}=defaultGlobalConfig;const mergedContainer=(getContainer===null||getContainer===void 0?void 0:getContainer())||document.body;return{getContainer:()=>mergedContainer,rtl,maxCount,top,bottom};}const GlobalHolder=/*#__PURE__*/React.forwardRef((props,ref)=>{const{notificationConfig,sync}=props;const{getPrefixCls}=useContext(ConfigContext);const prefixCls=defaultGlobalConfig.prefixCls||getPrefixCls('notification');const appConfig=useContext(AppConfigContext);const[api,holder]=useInternalNotification(Object.assign(Object.assign(Object.assign({},notificationConfig),{prefixCls}),appConfig.notification));React.useEffect(sync,[]);React.useImperativeHandle(ref,()=>{const instance=Object.assign({},api);Object.keys(instance).forEach(method=>{instance[method]=function(){sync();return api[method].apply(api,arguments);};});return{instance,sync};});return holder;});const GlobalHolderWrapper=/*#__PURE__*/React.forwardRef((_,ref)=>{const[notificationConfig,setNotificationConfig]=React.useState(getGlobalContext);const sync=()=>{setNotificationConfig(getGlobalContext);};React.useEffect(sync,[]);const global=globalConfig();const rootPrefixCls=global.getRootPrefixCls();const rootIconPrefixCls=global.getIconPrefixCls();const theme=global.getTheme();const dom=/*#__PURE__*/React.createElement(GlobalHolder,{ref:ref,sync:sync,notificationConfig:notificationConfig});return/*#__PURE__*/React.createElement(ConfigProvider,{prefixCls:rootPrefixCls,iconPrefixCls:rootIconPrefixCls,theme:theme},global.holderRender?global.holderRender(dom):dom);});function flushNotice(){if(!notification){const holderFragment=document.createDocumentFragment();const newNotification={fragment:holderFragment};notification=newNotification;// Delay render to avoid sync issue\nact(()=>{render(/*#__PURE__*/React.createElement(GlobalHolderWrapper,{ref:node=>{const{instance,sync}=node||{};Promise.resolve().then(()=>{if(!newNotification.instance&&instance){newNotification.instance=instance;newNotification.sync=sync;flushNotice();}});}}),holderFragment);});return;}// Notification not ready\nif(!notification.instance){return;}// >>> Execute task\ntaskQueue.forEach(task=>{// eslint-disable-next-line default-case\nswitch(task.type){case'open':{act(()=>{notification.instance.open(Object.assign(Object.assign({},defaultGlobalConfig),task.config));});break;}case'destroy':act(()=>{notification===null||notification===void 0?void 0:notification.instance.destroy(task.key);});break;}});// Clean up\ntaskQueue=[];}// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config){defaultGlobalConfig=Object.assign(Object.assign({},defaultGlobalConfig),config);// Trigger sync for it\nact(()=>{var _a;(_a=notification===null||notification===void 0?void 0:notification.sync)===null||_a===void 0?void 0:_a.call(notification);});}function open(config){const global=globalConfig();if(process.env.NODE_ENV!=='production'&&!global.holderRender){warnContext('notification');}taskQueue.push({type:'open',config});flushNotice();}function destroy(key){taskQueue.push({type:'destroy',key});flushNotice();}const methods=['success','info','warning','error'];const baseStaticMethods={open,destroy,config:setNotificationGlobalConfig,useNotification,_InternalPanelDoNotUseOrYouWillBeFired:PurePanel};const staticMethods=baseStaticMethods;methods.forEach(type=>{staticMethods[type]=config=>open(Object.assign(Object.assign({},config),{type}));});// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nconst noop=()=>{};/** @internal Only Work in test env */ // eslint-disable-next-line import/no-mutable-exports\nexport let actWrapper=noop;if(process.env.NODE_ENV==='test'){actWrapper=wrapper=>{act=wrapper;};}/** @internal Only Work in test env */ // eslint-disable-next-line import/no-mutable-exports\nexport let actDestroy=noop;if(process.env.NODE_ENV==='test'){actDestroy=()=>{notification=null;};}export default staticMethods;","map":{"version":3,"names":["React","useContext","render","AppConfigContext","ConfigProvider","ConfigContext","globalConfig","warnContext","PurePanel","useNotification","useInternalNotification","notification","act","callback","taskQueue","defaultGlobalConfig","getGlobalContext","getContainer","rtl","maxCount","top","bottom","mergedContainer","document","body","GlobalHolder","forwardRef","props","ref","notificationConfig","sync","getPrefixCls","prefixCls","appConfig","api","holder","Object","assign","useEffect","useImperativeHandle","instance","keys","forEach","method","apply","arguments","GlobalHolderWrapper","_","setNotificationConfig","useState","global","rootPrefixCls","getRootPrefixCls","rootIconPrefixCls","getIconPrefixCls","theme","getTheme","dom","createElement","iconPrefixCls","holderRender","flushNotice","holderFragment","createDocumentFragment","newNotification","fragment","node","Promise","resolve","then","task","type","open","config","destroy","key","setNotificationGlobalConfig","_a","call","process","env","NODE_ENV","push","methods","baseStaticMethods","_InternalPanelDoNotUseOrYouWillBeFired","staticMethods","noop","actWrapper","wrapper","actDestroy"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/notification/index.js"],"sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport { render } from \"rc-util/es/React/render\";\nimport { AppConfigContext } from '../app/context';\nimport ConfigProvider, { ConfigContext, globalConfig, warnContext } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nlet notification = null;\nlet act = callback => callback();\nlet taskQueue = [];\nlet defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  const {\n    getContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  } = defaultGlobalConfig;\n  const mergedContainer = (getContainer === null || getContainer === void 0 ? void 0 : getContainer()) || document.body;\n  return {\n    getContainer: () => mergedContainer,\n    rtl,\n    maxCount,\n    top,\n    bottom\n  };\n}\nconst GlobalHolder = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    notificationConfig,\n    sync\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = defaultGlobalConfig.prefixCls || getPrefixCls('notification');\n  const appConfig = useContext(AppConfigContext);\n  const [api, holder] = useInternalNotification(Object.assign(Object.assign(Object.assign({}, notificationConfig), {\n    prefixCls\n  }), appConfig.notification));\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, () => {\n    const instance = Object.assign({}, api);\n    Object.keys(instance).forEach(method => {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance,\n      sync\n    };\n  });\n  return holder;\n});\nconst GlobalHolderWrapper = /*#__PURE__*/React.forwardRef((_, ref) => {\n  const [notificationConfig, setNotificationConfig] = React.useState(getGlobalContext);\n  const sync = () => {\n    setNotificationConfig(getGlobalContext);\n  };\n  React.useEffect(sync, []);\n  const global = globalConfig();\n  const rootPrefixCls = global.getRootPrefixCls();\n  const rootIconPrefixCls = global.getIconPrefixCls();\n  const theme = global.getTheme();\n  const dom = /*#__PURE__*/React.createElement(GlobalHolder, {\n    ref: ref,\n    sync: sync,\n    notificationConfig: notificationConfig\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls,\n    theme: theme\n  }, global.holderRender ? global.holderRender(dom) : dom);\n});\nfunction flushNotice() {\n  if (!notification) {\n    const holderFragment = document.createDocumentFragment();\n    const newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(() => {\n      render( /*#__PURE__*/React.createElement(GlobalHolderWrapper, {\n        ref: node => {\n          const {\n            instance,\n            sync\n          } = node || {};\n          Promise.resolve().then(() => {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (!notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(task => {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(() => {\n            notification.instance.open(Object.assign(Object.assign({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(() => {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = Object.assign(Object.assign({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(() => {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  const global = globalConfig();\n  if (process.env.NODE_ENV !== 'production' && !global.holderRender) {\n    warnContext('notification');\n  }\n  taskQueue.push({\n    type: 'open',\n    config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key\n  });\n  flushNotice();\n}\nconst methods = ['success', 'info', 'warning', 'error'];\nconst baseStaticMethods = {\n  open,\n  destroy,\n  config: setNotificationGlobalConfig,\n  useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nconst staticMethods = baseStaticMethods;\nmethods.forEach(type => {\n  staticMethods[type] = config => open(Object.assign(Object.assign({}, config), {\n    type\n  }));\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nconst noop = () => {};\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = wrapper => {\n    act = wrapper;\n  };\n}\n/** @internal Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport let actDestroy = noop;\nif (process.env.NODE_ENV === 'test') {\n  actDestroy = () => {\n    notification = null;\n  };\n}\nexport default staticMethods;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}