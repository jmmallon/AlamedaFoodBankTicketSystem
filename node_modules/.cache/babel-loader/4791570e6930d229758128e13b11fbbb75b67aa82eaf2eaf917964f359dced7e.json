{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import React from'react';export function fillTimeFormat(showHour,showMinute,showSecond,showMillisecond,showMeridiem){var timeFormat='';// Base HH:mm:ss\nvar cells=[];if(showHour){cells.push(showMeridiem?'hh':'HH');}if(showMinute){cells.push('mm');}if(showSecond){cells.push('ss');}timeFormat=cells.join(':');// Millisecond\nif(showMillisecond){timeFormat+='.SSS';}// Meridiem\nif(showMeridiem){timeFormat+=' A';}return timeFormat;}/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */function fillLocale(locale,showHour,showMinute,showSecond,showMillisecond,use12Hours){// Not fill `monthFormat` since `locale.shortMonths` handle this\n// Not fill `cellMeridiemFormat` since AM & PM by default\nvar fieldDateTimeFormat=locale.fieldDateTimeFormat,fieldDateFormat=locale.fieldDateFormat,fieldTimeFormat=locale.fieldTimeFormat,fieldMonthFormat=locale.fieldMonthFormat,fieldYearFormat=locale.fieldYearFormat,fieldWeekFormat=locale.fieldWeekFormat,fieldQuarterFormat=locale.fieldQuarterFormat,yearFormat=locale.yearFormat,cellYearFormat=locale.cellYearFormat,cellQuarterFormat=locale.cellQuarterFormat,dayFormat=locale.dayFormat,cellDateFormat=locale.cellDateFormat;var timeFormat=fillTimeFormat(showHour,showMinute,showSecond,showMillisecond,use12Hours);return _objectSpread(_objectSpread({},locale),{},{fieldDateTimeFormat:fieldDateTimeFormat||\"YYYY-MM-DD \".concat(timeFormat),fieldDateFormat:fieldDateFormat||'YYYY-MM-DD',fieldTimeFormat:fieldTimeFormat||timeFormat,fieldMonthFormat:fieldMonthFormat||'YYYY-MM',fieldYearFormat:fieldYearFormat||'YYYY',fieldWeekFormat:fieldWeekFormat||'gggg-wo',fieldQuarterFormat:fieldQuarterFormat||'YYYY-[Q]Q',yearFormat:yearFormat||'YYYY',cellYearFormat:cellYearFormat||'YYYY',cellQuarterFormat:cellQuarterFormat||'[Q]Q',cellDateFormat:cellDateFormat||dayFormat||'D'});}/**\n * Fill locale format as start up\n */export default function useLocale(locale,showProps){var showHour=showProps.showHour,showMinute=showProps.showMinute,showSecond=showProps.showSecond,showMillisecond=showProps.showMillisecond,use12Hours=showProps.use12Hours;return React.useMemo(function(){return fillLocale(locale,showHour,showMinute,showSecond,showMillisecond,use12Hours);},[locale,showHour,showMinute,showSecond,showMillisecond,use12Hours]);}","map":{"version":3,"names":["_objectSpread","React","fillTimeFormat","showHour","showMinute","showSecond","showMillisecond","showMeridiem","timeFormat","cells","push","join","fillLocale","locale","use12Hours","fieldDateTimeFormat","fieldDateFormat","fieldTimeFormat","fieldMonthFormat","fieldYearFormat","fieldWeekFormat","fieldQuarterFormat","yearFormat","cellYearFormat","cellQuarterFormat","dayFormat","cellDateFormat","concat","useLocale","showProps","useMemo"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-picker/es/hooks/useLocale.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nexport function fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, showMeridiem) {\n  var timeFormat = '';\n\n  // Base HH:mm:ss\n  var cells = [];\n  if (showHour) {\n    cells.push(showMeridiem ? 'hh' : 'HH');\n  }\n  if (showMinute) {\n    cells.push('mm');\n  }\n  if (showSecond) {\n    cells.push('ss');\n  }\n  timeFormat = cells.join(':');\n\n  // Millisecond\n  if (showMillisecond) {\n    timeFormat += '.SSS';\n  }\n\n  // Meridiem\n  if (showMeridiem) {\n    timeFormat += ' A';\n  }\n  return timeFormat;\n}\n\n/**\n * Used for `useFilledProps` since it already in the React.useMemo\n */\nfunction fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours) {\n  // Not fill `monthFormat` since `locale.shortMonths` handle this\n  // Not fill `cellMeridiemFormat` since AM & PM by default\n  var fieldDateTimeFormat = locale.fieldDateTimeFormat,\n    fieldDateFormat = locale.fieldDateFormat,\n    fieldTimeFormat = locale.fieldTimeFormat,\n    fieldMonthFormat = locale.fieldMonthFormat,\n    fieldYearFormat = locale.fieldYearFormat,\n    fieldWeekFormat = locale.fieldWeekFormat,\n    fieldQuarterFormat = locale.fieldQuarterFormat,\n    yearFormat = locale.yearFormat,\n    cellYearFormat = locale.cellYearFormat,\n    cellQuarterFormat = locale.cellQuarterFormat,\n    dayFormat = locale.dayFormat,\n    cellDateFormat = locale.cellDateFormat;\n  var timeFormat = fillTimeFormat(showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  return _objectSpread(_objectSpread({}, locale), {}, {\n    fieldDateTimeFormat: fieldDateTimeFormat || \"YYYY-MM-DD \".concat(timeFormat),\n    fieldDateFormat: fieldDateFormat || 'YYYY-MM-DD',\n    fieldTimeFormat: fieldTimeFormat || timeFormat,\n    fieldMonthFormat: fieldMonthFormat || 'YYYY-MM',\n    fieldYearFormat: fieldYearFormat || 'YYYY',\n    fieldWeekFormat: fieldWeekFormat || 'gggg-wo',\n    fieldQuarterFormat: fieldQuarterFormat || 'YYYY-[Q]Q',\n    yearFormat: yearFormat || 'YYYY',\n    cellYearFormat: cellYearFormat || 'YYYY',\n    cellQuarterFormat: cellQuarterFormat || '[Q]Q',\n    cellDateFormat: cellDateFormat || dayFormat || 'D'\n  });\n}\n\n/**\n * Fill locale format as start up\n */\nexport default function useLocale(locale, showProps) {\n  var showHour = showProps.showHour,\n    showMinute = showProps.showMinute,\n    showSecond = showProps.showSecond,\n    showMillisecond = showProps.showMillisecond,\n    use12Hours = showProps.use12Hours;\n  return React.useMemo(function () {\n    return fillLocale(locale, showHour, showMinute, showSecond, showMillisecond, use12Hours);\n  }, [locale, showHour, showMinute, showSecond, showMillisecond, use12Hours]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}