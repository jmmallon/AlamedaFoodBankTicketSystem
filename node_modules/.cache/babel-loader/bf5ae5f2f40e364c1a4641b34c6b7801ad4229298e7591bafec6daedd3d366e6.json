{"ast":null,"code":"import*as React from'react';import LocaleContext from'./context';import defaultLocaleData from'./en_US';const useLocale=(componentName,defaultLocale)=>{const fullLocale=React.useContext(LocaleContext);const getLocale=React.useMemo(()=>{var _a;const locale=defaultLocale||defaultLocaleData[componentName];const localeFromContext=(_a=fullLocale===null||fullLocale===void 0?void 0:fullLocale[componentName])!==null&&_a!==void 0?_a:{};return Object.assign(Object.assign({},typeof locale==='function'?locale():locale),localeFromContext||{});},[componentName,defaultLocale,fullLocale]);const getLocaleCode=React.useMemo(()=>{const localeCode=fullLocale===null||fullLocale===void 0?void 0:fullLocale.locale;// Had use LocaleProvide but didn't set locale\nif((fullLocale===null||fullLocale===void 0?void 0:fullLocale.exist)&&!localeCode){return defaultLocaleData.locale;}return localeCode;},[fullLocale]);return[getLocale,getLocaleCode];};export default useLocale;","map":{"version":3,"names":["React","LocaleContext","defaultLocaleData","useLocale","componentName","defaultLocale","fullLocale","useContext","getLocale","useMemo","_a","locale","localeFromContext","Object","assign","getLocaleCode","localeCode","exist"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/locale/useLocale.js"],"sourcesContent":["import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,aAAa,KAAM,WAAW,CACrC,MAAO,CAAAC,iBAAiB,KAAM,SAAS,CACvC,KAAM,CAAAC,SAAS,CAAGA,CAACC,aAAa,CAAEC,aAAa,GAAK,CAClD,KAAM,CAAAC,UAAU,CAAGN,KAAK,CAACO,UAAU,CAACN,aAAa,CAAC,CAClD,KAAM,CAAAO,SAAS,CAAGR,KAAK,CAACS,OAAO,CAAC,IAAM,CACpC,GAAI,CAAAC,EAAE,CACN,KAAM,CAAAC,MAAM,CAAGN,aAAa,EAAIH,iBAAiB,CAACE,aAAa,CAAC,CAChE,KAAM,CAAAQ,iBAAiB,CAAG,CAACF,EAAE,CAAGJ,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,UAAU,CAACF,aAAa,CAAC,IAAM,IAAI,EAAIM,EAAE,GAAK,IAAK,EAAC,CAAGA,EAAE,CAAG,CAAC,CAAC,CACtJ,MAAO,CAAAG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAE,MAAO,CAAAH,MAAM,GAAK,UAAU,CAAGA,MAAM,CAAC,CAAC,CAAGA,MAAM,CAAC,CAAEC,iBAAiB,EAAI,CAAC,CAAC,CAAC,CACpH,CAAC,CAAE,CAACR,aAAa,CAAEC,aAAa,CAAEC,UAAU,CAAC,CAAC,CAC9C,KAAM,CAAAS,aAAa,CAAGf,KAAK,CAACS,OAAO,CAAC,IAAM,CACxC,KAAM,CAAAO,UAAU,CAAGV,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,UAAU,CAACK,MAAM,CAC5F;AACA,GAAI,CAACL,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,IAAK,EAAC,CAAG,IAAK,EAAC,CAAGA,UAAU,CAACW,KAAK,GAAK,CAACD,UAAU,CAAE,CAC7F,MAAO,CAAAd,iBAAiB,CAACS,MAAM,CACjC,CACA,MAAO,CAAAK,UAAU,CACnB,CAAC,CAAE,CAACV,UAAU,CAAC,CAAC,CAChB,MAAO,CAACE,SAAS,CAAEO,aAAa,CAAC,CACnC,CAAC,CACD,cAAe,CAAAZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}