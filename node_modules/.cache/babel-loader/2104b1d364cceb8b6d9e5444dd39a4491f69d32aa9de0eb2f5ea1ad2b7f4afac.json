{"ast":null,"code":"/** converting camel-cased strings to be lowercase and link it with Separato */export function toLowercaseSeparator(key){return key.replace(/([A-Z])/g,'-$1').toLowerCase();}export function getStyleStr(style){return Object.keys(style).map(key=>\"\".concat(toLowercaseSeparator(key),\": \").concat(style[key],\";\")).join(' ');}/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */export function getPixelRatio(){return window.devicePixelRatio||1;}/** Whether to re-render the watermark */export const reRendering=(mutation,isWatermarkEle)=>{let flag=false;// Whether to delete the watermark node\nif(mutation.removedNodes.length){flag=Array.from(mutation.removedNodes).some(node=>isWatermarkEle(node));}// Whether the watermark dom property value has been modified\nif(mutation.type==='attributes'&&isWatermarkEle(mutation.target)){flag=true;}return flag;};","map":{"version":3,"names":["toLowercaseSeparator","key","replace","toLowerCase","getStyleStr","style","Object","keys","map","concat","join","getPixelRatio","window","devicePixelRatio","reRendering","mutation","isWatermarkEle","flag","removedNodes","length","Array","from","some","node","type","target"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/watermark/utils.js"],"sourcesContent":["/** converting camel-cased strings to be lowercase and link it with Separato */\nexport function toLowercaseSeparator(key) {\n  return key.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nexport function getStyleStr(style) {\n  return Object.keys(style).map(key => `${toLowercaseSeparator(key)}: ${style[key]};`).join(' ');\n}\n/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */\nexport function getPixelRatio() {\n  return window.devicePixelRatio || 1;\n}\n/** Whether to re-render the watermark */\nexport const reRendering = (mutation, isWatermarkEle) => {\n  let flag = false;\n  // Whether to delete the watermark node\n  if (mutation.removedNodes.length) {\n    flag = Array.from(mutation.removedNodes).some(node => isWatermarkEle(node));\n  }\n  // Whether the watermark dom property value has been modified\n  if (mutation.type === 'attributes' && isWatermarkEle(mutation.target)) {\n    flag = true;\n  }\n  return flag;\n};"],"mappings":"AAAA,+EACA,MAAO,SAAS,CAAAA,oBAAoBA,CAACC,GAAG,CAAE,CACxC,MAAO,CAAAA,GAAG,CAACC,OAAO,CAAC,UAAU,CAAE,KAAK,CAAC,CAACC,WAAW,CAAC,CAAC,CACrD,CACA,MAAO,SAAS,CAAAC,WAAWA,CAACC,KAAK,CAAE,CACjC,MAAO,CAAAC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,GAAG,CAACP,GAAG,KAAAQ,MAAA,CAAOT,oBAAoB,CAACC,GAAG,CAAC,OAAAQ,MAAA,CAAKJ,KAAK,CAACJ,GAAG,CAAC,KAAG,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC,CAChG,CACA,8FACA,MAAO,SAAS,CAAAC,aAAaA,CAAA,CAAG,CAC9B,MAAO,CAAAC,MAAM,CAACC,gBAAgB,EAAI,CAAC,CACrC,CACA,yCACA,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,QAAQ,CAAEC,cAAc,GAAK,CACvD,GAAI,CAAAC,IAAI,CAAG,KAAK,CAChB;AACA,GAAIF,QAAQ,CAACG,YAAY,CAACC,MAAM,CAAE,CAChCF,IAAI,CAAGG,KAAK,CAACC,IAAI,CAACN,QAAQ,CAACG,YAAY,CAAC,CAACI,IAAI,CAACC,IAAI,EAAIP,cAAc,CAACO,IAAI,CAAC,CAAC,CAC7E,CACA;AACA,GAAIR,QAAQ,CAACS,IAAI,GAAK,YAAY,EAAIR,cAAc,CAACD,QAAQ,CAACU,MAAM,CAAC,CAAE,CACrER,IAAI,CAAG,IAAI,CACb,CACA,MAAO,CAAAA,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}