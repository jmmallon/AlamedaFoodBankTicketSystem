{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";export var STATUS_ADD='add';export var STATUS_KEEP='keep';export var STATUS_REMOVE='remove';export var STATUS_REMOVED='removed';export function wrapKeyToObject(key){var keyObj;if(key&&_typeof(key)==='object'&&'key'in key){keyObj=key;}else{keyObj={key:key};}return _objectSpread(_objectSpread({},keyObj),{},{key:String(keyObj.key)});}export function parseKeys(){var keys=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return keys.map(wrapKeyToObject);}export function diffKeys(){var prevKeys=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var currentKeys=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var list=[];var currentIndex=0;var currentLen=currentKeys.length;var prevKeyObjects=parseKeys(prevKeys);var currentKeyObjects=parseKeys(currentKeys);// Check prev keys to insert or keep\nprevKeyObjects.forEach(function(keyObj){var hit=false;for(var i=currentIndex;i<currentLen;i+=1){var currentKeyObj=currentKeyObjects[i];if(currentKeyObj.key===keyObj.key){// New added keys should add before current key\nif(currentIndex<i){list=list.concat(currentKeyObjects.slice(currentIndex,i).map(function(obj){return _objectSpread(_objectSpread({},obj),{},{status:STATUS_ADD});}));currentIndex=i;}list.push(_objectSpread(_objectSpread({},currentKeyObj),{},{status:STATUS_KEEP}));currentIndex+=1;hit=true;break;}}// If not hit, it means key is removed\nif(!hit){list.push(_objectSpread(_objectSpread({},keyObj),{},{status:STATUS_REMOVE}));}});// Add rest to the list\nif(currentIndex<currentLen){list=list.concat(currentKeyObjects.slice(currentIndex).map(function(obj){return _objectSpread(_objectSpread({},obj),{},{status:STATUS_ADD});}));}/**\n   * Merge same key when it remove and add again:\n   *    [1 - add, 2 - keep, 1 - remove] -> [1 - keep, 2 - keep]\n   */var keys={};list.forEach(function(_ref){var key=_ref.key;keys[key]=(keys[key]||0)+1;});var duplicatedKeys=Object.keys(keys).filter(function(key){return keys[key]>1;});duplicatedKeys.forEach(function(matchKey){// Remove `STATUS_REMOVE` node.\nlist=list.filter(function(_ref2){var key=_ref2.key,status=_ref2.status;return key!==matchKey||status!==STATUS_REMOVE;});// Update `STATUS_ADD` to `STATUS_KEEP`\nlist.forEach(function(node){if(node.key===matchKey){// eslint-disable-next-line no-param-reassign\nnode.status=STATUS_KEEP;}});});return list;}","map":{"version":3,"names":["_objectSpread","_typeof","STATUS_ADD","STATUS_KEEP","STATUS_REMOVE","STATUS_REMOVED","wrapKeyToObject","key","keyObj","String","parseKeys","keys","arguments","length","undefined","map","diffKeys","prevKeys","currentKeys","list","currentIndex","currentLen","prevKeyObjects","currentKeyObjects","forEach","hit","i","currentKeyObj","concat","slice","obj","status","push","_ref","duplicatedKeys","Object","filter","matchKey","_ref2","node"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-motion/es/util/diff.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport var STATUS_ADD = 'add';\nexport var STATUS_KEEP = 'keep';\nexport var STATUS_REMOVE = 'remove';\nexport var STATUS_REMOVED = 'removed';\nexport function wrapKeyToObject(key) {\n  var keyObj;\n  if (key && _typeof(key) === 'object' && 'key' in key) {\n    keyObj = key;\n  } else {\n    keyObj = {\n      key: key\n    };\n  }\n  return _objectSpread(_objectSpread({}, keyObj), {}, {\n    key: String(keyObj.key)\n  });\n}\nexport function parseKeys() {\n  var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return keys.map(wrapKeyToObject);\n}\nexport function diffKeys() {\n  var prevKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var currentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var list = [];\n  var currentIndex = 0;\n  var currentLen = currentKeys.length;\n  var prevKeyObjects = parseKeys(prevKeys);\n  var currentKeyObjects = parseKeys(currentKeys);\n\n  // Check prev keys to insert or keep\n  prevKeyObjects.forEach(function (keyObj) {\n    var hit = false;\n    for (var i = currentIndex; i < currentLen; i += 1) {\n      var currentKeyObj = currentKeyObjects[i];\n      if (currentKeyObj.key === keyObj.key) {\n        // New added keys should add before current key\n        if (currentIndex < i) {\n          list = list.concat(currentKeyObjects.slice(currentIndex, i).map(function (obj) {\n            return _objectSpread(_objectSpread({}, obj), {}, {\n              status: STATUS_ADD\n            });\n          }));\n          currentIndex = i;\n        }\n        list.push(_objectSpread(_objectSpread({}, currentKeyObj), {}, {\n          status: STATUS_KEEP\n        }));\n        currentIndex += 1;\n        hit = true;\n        break;\n      }\n    }\n\n    // If not hit, it means key is removed\n    if (!hit) {\n      list.push(_objectSpread(_objectSpread({}, keyObj), {}, {\n        status: STATUS_REMOVE\n      }));\n    }\n  });\n\n  // Add rest to the list\n  if (currentIndex < currentLen) {\n    list = list.concat(currentKeyObjects.slice(currentIndex).map(function (obj) {\n      return _objectSpread(_objectSpread({}, obj), {}, {\n        status: STATUS_ADD\n      });\n    }));\n  }\n\n  /**\n   * Merge same key when it remove and add again:\n   *    [1 - add, 2 - keep, 1 - remove] -> [1 - keep, 2 - keep]\n   */\n  var keys = {};\n  list.forEach(function (_ref) {\n    var key = _ref.key;\n    keys[key] = (keys[key] || 0) + 1;\n  });\n  var duplicatedKeys = Object.keys(keys).filter(function (key) {\n    return keys[key] > 1;\n  });\n  duplicatedKeys.forEach(function (matchKey) {\n    // Remove `STATUS_REMOVE` node.\n    list = list.filter(function (_ref2) {\n      var key = _ref2.key,\n        status = _ref2.status;\n      return key !== matchKey || status !== STATUS_REMOVE;\n    });\n\n    // Update `STATUS_ADD` to `STATUS_KEEP`\n    list.forEach(function (node) {\n      if (node.key === matchKey) {\n        // eslint-disable-next-line no-param-reassign\n        node.status = STATUS_KEEP;\n      }\n    });\n  });\n  return list;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}