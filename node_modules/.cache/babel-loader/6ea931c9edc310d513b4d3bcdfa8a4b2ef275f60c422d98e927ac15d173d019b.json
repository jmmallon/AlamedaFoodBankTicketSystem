{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import*as React from'react';import{fillLegacyProps}from\"../utils/legacyUtil\";export default(function(treeData,searchValue,_ref){var treeNodeFilterProp=_ref.treeNodeFilterProp,filterTreeNode=_ref.filterTreeNode,fieldNames=_ref.fieldNames;var fieldChildren=fieldNames.children;return React.useMemo(function(){if(!searchValue||filterTreeNode===false){return treeData;}var filterOptionFunc;if(typeof filterTreeNode==='function'){filterOptionFunc=filterTreeNode;}else{var upperStr=searchValue.toUpperCase();filterOptionFunc=function filterOptionFunc(_,dataNode){var value=dataNode[treeNodeFilterProp];return String(value).toUpperCase().includes(upperStr);};}function dig(list){var keepAll=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return list.reduce(function(total,dataNode){var children=dataNode[fieldChildren];var match=keepAll||filterOptionFunc(searchValue,fillLegacyProps(dataNode));var childList=dig(children||[],match);if(match||childList.length){total.push(_objectSpread(_objectSpread({},dataNode),{},_defineProperty({isLeaf:undefined},fieldChildren,childList)));}return total;},[]);}return dig(treeData);},[treeData,searchValue,fieldChildren,treeNodeFilterProp,filterTreeNode]);});","map":{"version":3,"names":["_defineProperty","_objectSpread","React","fillLegacyProps","treeData","searchValue","_ref","treeNodeFilterProp","filterTreeNode","fieldNames","fieldChildren","children","useMemo","filterOptionFunc","upperStr","toUpperCase","_","dataNode","value","String","includes","dig","list","keepAll","arguments","length","undefined","reduce","total","match","childList","push","isLeaf"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-tree-select/es/hooks/useFilterTreeData.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nimport { fillLegacyProps } from \"../utils/legacyUtil\";\nexport default (function (treeData, searchValue, _ref) {\n  var treeNodeFilterProp = _ref.treeNodeFilterProp,\n    filterTreeNode = _ref.filterTreeNode,\n    fieldNames = _ref.fieldNames;\n  var fieldChildren = fieldNames.children;\n  return React.useMemo(function () {\n    if (!searchValue || filterTreeNode === false) {\n      return treeData;\n    }\n    var filterOptionFunc;\n    if (typeof filterTreeNode === 'function') {\n      filterOptionFunc = filterTreeNode;\n    } else {\n      var upperStr = searchValue.toUpperCase();\n      filterOptionFunc = function filterOptionFunc(_, dataNode) {\n        var value = dataNode[treeNodeFilterProp];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n    function dig(list) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return list.reduce(function (total, dataNode) {\n        var children = dataNode[fieldChildren];\n        var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n        var childList = dig(children || [], match);\n        if (match || childList.length) {\n          total.push(_objectSpread(_objectSpread({}, dataNode), {}, _defineProperty({\n            isLeaf: undefined\n          }, fieldChildren, childList)));\n        }\n        return total;\n      }, []);\n    }\n    return dig(treeData);\n  }, [treeData, searchValue, fieldChildren, treeNodeFilterProp, filterTreeNode]);\n});"],"mappings":"AAAA,MAAO,CAAAA,eAAe,KAAM,2CAA2C,CACvE,MAAO,CAAAC,aAAa,KAAM,0CAA0C,CACpE,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,eAAe,KAAQ,qBAAqB,CACrD,eAAgB,SAAUC,QAAQ,CAAEC,WAAW,CAAEC,IAAI,CAAE,CACrD,GAAI,CAAAC,kBAAkB,CAAGD,IAAI,CAACC,kBAAkB,CAC9CC,cAAc,CAAGF,IAAI,CAACE,cAAc,CACpCC,UAAU,CAAGH,IAAI,CAACG,UAAU,CAC9B,GAAI,CAAAC,aAAa,CAAGD,UAAU,CAACE,QAAQ,CACvC,MAAO,CAAAT,KAAK,CAACU,OAAO,CAAC,UAAY,CAC/B,GAAI,CAACP,WAAW,EAAIG,cAAc,GAAK,KAAK,CAAE,CAC5C,MAAO,CAAAJ,QAAQ,CACjB,CACA,GAAI,CAAAS,gBAAgB,CACpB,GAAI,MAAO,CAAAL,cAAc,GAAK,UAAU,CAAE,CACxCK,gBAAgB,CAAGL,cAAc,CACnC,CAAC,IAAM,CACL,GAAI,CAAAM,QAAQ,CAAGT,WAAW,CAACU,WAAW,CAAC,CAAC,CACxCF,gBAAgB,CAAG,QAAS,CAAAA,gBAAgBA,CAACG,CAAC,CAAEC,QAAQ,CAAE,CACxD,GAAI,CAAAC,KAAK,CAAGD,QAAQ,CAACV,kBAAkB,CAAC,CACxC,MAAO,CAAAY,MAAM,CAACD,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,QAAQ,CAAC,CACvD,CAAC,CACH,CACA,QAAS,CAAAO,GAAGA,CAACC,IAAI,CAAE,CACjB,GAAI,CAAAC,OAAO,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,KAAK,CACvF,MAAO,CAAAF,IAAI,CAACK,MAAM,CAAC,SAAUC,KAAK,CAAEX,QAAQ,CAAE,CAC5C,GAAI,CAAAN,QAAQ,CAAGM,QAAQ,CAACP,aAAa,CAAC,CACtC,GAAI,CAAAmB,KAAK,CAAGN,OAAO,EAAIV,gBAAgB,CAACR,WAAW,CAAEF,eAAe,CAACc,QAAQ,CAAC,CAAC,CAC/E,GAAI,CAAAa,SAAS,CAAGT,GAAG,CAACV,QAAQ,EAAI,EAAE,CAAEkB,KAAK,CAAC,CAC1C,GAAIA,KAAK,EAAIC,SAAS,CAACL,MAAM,CAAE,CAC7BG,KAAK,CAACG,IAAI,CAAC9B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,CAAEgB,QAAQ,CAAC,CAAE,CAAC,CAAC,CAAEjB,eAAe,CAAC,CACxEgC,MAAM,CAAEN,SACV,CAAC,CAAEhB,aAAa,CAAEoB,SAAS,CAAC,CAAC,CAAC,CAChC,CACA,MAAO,CAAAF,KAAK,CACd,CAAC,CAAE,EAAE,CAAC,CACR,CACA,MAAO,CAAAP,GAAG,CAACjB,QAAQ,CAAC,CACtB,CAAC,CAAE,CAACA,QAAQ,CAAEC,WAAW,CAAEK,aAAa,CAAEH,kBAAkB,CAAEC,cAAc,CAAC,CAAC,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}