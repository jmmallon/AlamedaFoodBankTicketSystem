{"ast":null,"code":"\"use client\";import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import*as React from'react';import{useCallback,useMemo}from'react';import DownOutlined from\"@ant-design/icons/es/icons/DownOutlined\";import classNames from'classnames';import{INTERNAL_COL_DEFINE}from'rc-table';import{arrAdd,arrDel}from\"rc-tree/es/util\";import{conductCheck}from\"rc-tree/es/utils/conductUtil\";import{convertDataToEntities}from\"rc-tree/es/utils/treeUtil\";import useMergedState from\"rc-util/es/hooks/useMergedState\";import useMultipleSelect from'../../_util/hooks/useMultipleSelect';import{devUseWarning}from'../../_util/warning';import Checkbox from'../../checkbox';import Dropdown from'../../dropdown';import Radio from'../../radio';// TODO: warning if use ajax!!!\nexport const SELECTION_COLUMN={};export const SELECTION_ALL='SELECT_ALL';export const SELECTION_INVERT='SELECT_INVERT';export const SELECTION_NONE='SELECT_NONE';const EMPTY_LIST=[];const flattenData=(childrenColumnName,data)=>{let list=[];(data||[]).forEach(record=>{list.push(record);if(record&&typeof record==='object'&&childrenColumnName in record){list=[].concat(_toConsumableArray(list),_toConsumableArray(flattenData(childrenColumnName,record[childrenColumnName])));}});return list;};const useSelection=(config,rowSelection)=>{const{preserveSelectedRowKeys,selectedRowKeys,defaultSelectedRowKeys,getCheckboxProps,onChange:onSelectionChange,onSelect,onSelectAll,onSelectInvert,onSelectNone,onSelectMultiple,columnWidth:selectionColWidth,type:selectionType,selections,fixed,renderCell:customizeRenderCell,hideSelectAll,checkStrictly=true}=rowSelection||{};const{prefixCls,data,pageData,getRecordByKey,getRowKey,expandType,childrenColumnName,locale:tableLocale,getPopupContainer}=config;const warning=devUseWarning('Table');// ========================= MultipleSelect =========================\nconst[multipleSelect,updatePrevSelectedIndex]=useMultipleSelect(item=>item);// ========================= Keys =========================\nconst[mergedSelectedKeys,setMergedSelectedKeys]=useMergedState(selectedRowKeys||defaultSelectedRowKeys||EMPTY_LIST,{value:selectedRowKeys});// ======================== Caches ========================\nconst preserveRecordsRef=React.useRef(new Map());const updatePreserveRecordsCache=useCallback(keys=>{if(preserveSelectedRowKeys){const newCache=new Map();// Keep key if mark as preserveSelectedRowKeys\nkeys.forEach(key=>{let record=getRecordByKey(key);if(!record&&preserveRecordsRef.current.has(key)){record=preserveRecordsRef.current.get(key);}newCache.set(key,record);});// Refresh to new cache\npreserveRecordsRef.current=newCache;}},[getRecordByKey,preserveSelectedRowKeys]);// Update cache with selectedKeys\nReact.useEffect(()=>{updatePreserveRecordsCache(mergedSelectedKeys);},[mergedSelectedKeys]);const{keyEntities}=useMemo(()=>{if(checkStrictly){return{keyEntities:null};}let convertData=data;if(preserveSelectedRowKeys){const keysSet=new Set(data.map((record,index)=>getRowKey(record,index)));// remove preserveRecords that duplicate data\nconst preserveRecords=Array.from(preserveRecordsRef.current).reduce((total,_ref)=>{let[key,value]=_ref;return keysSet.has(key)?total:total.concat(value);},[]);convertData=[].concat(_toConsumableArray(convertData),_toConsumableArray(preserveRecords));}return convertDataToEntities(convertData,{externalGetKey:getRowKey,childrenPropName:childrenColumnName});},[data,getRowKey,checkStrictly,childrenColumnName,preserveSelectedRowKeys]);// Get flatten data\nconst flattedData=useMemo(()=>flattenData(childrenColumnName,pageData),[childrenColumnName,pageData]);// Get all checkbox props\nconst checkboxPropsMap=useMemo(()=>{const map=new Map();flattedData.forEach((record,index)=>{const key=getRowKey(record,index);const checkboxProps=(getCheckboxProps?getCheckboxProps(record):null)||{};map.set(key,checkboxProps);process.env.NODE_ENV!==\"production\"?warning(!('checked'in checkboxProps||'defaultChecked'in checkboxProps),'usage','Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.'):void 0;});return map;},[flattedData,getRowKey,getCheckboxProps]);const isCheckboxDisabled=useCallback(r=>{var _a;return!!((_a=checkboxPropsMap.get(getRowKey(r)))===null||_a===void 0?void 0:_a.disabled);},[checkboxPropsMap,getRowKey]);const[derivedSelectedKeys,derivedHalfSelectedKeys]=useMemo(()=>{if(checkStrictly){return[mergedSelectedKeys||[],[]];}const{checkedKeys,halfCheckedKeys}=conductCheck(mergedSelectedKeys,true,keyEntities,isCheckboxDisabled);return[checkedKeys||[],halfCheckedKeys];},[mergedSelectedKeys,checkStrictly,keyEntities,isCheckboxDisabled]);const derivedSelectedKeySet=useMemo(()=>{const keys=selectionType==='radio'?derivedSelectedKeys.slice(0,1):derivedSelectedKeys;return new Set(keys);},[derivedSelectedKeys,selectionType]);const derivedHalfSelectedKeySet=useMemo(()=>selectionType==='radio'?new Set():new Set(derivedHalfSelectedKeys),[derivedHalfSelectedKeys,selectionType]);// Reset if rowSelection reset\nReact.useEffect(()=>{if(!rowSelection){setMergedSelectedKeys(EMPTY_LIST);}},[!!rowSelection]);const setSelectedKeys=useCallback((keys,method)=>{let availableKeys;let records;updatePreserveRecordsCache(keys);if(preserveSelectedRowKeys){availableKeys=keys;records=keys.map(key=>preserveRecordsRef.current.get(key));}else{// Filter key which not exist in the `dataSource`\navailableKeys=[];records=[];keys.forEach(key=>{const record=getRecordByKey(key);if(record!==undefined){availableKeys.push(key);records.push(record);}});}setMergedSelectedKeys(availableKeys);onSelectionChange===null||onSelectionChange===void 0?void 0:onSelectionChange(availableKeys,records,{type:method});},[setMergedSelectedKeys,getRecordByKey,onSelectionChange,preserveSelectedRowKeys]);// ====================== Selections ======================\n// Trigger single `onSelect` event\nconst triggerSingleSelection=useCallback((key,selected,keys,event)=>{if(onSelect){const rows=keys.map(k=>getRecordByKey(k));onSelect(getRecordByKey(key),selected,rows,event);}setSelectedKeys(keys,'single');},[onSelect,getRecordByKey,setSelectedKeys]);const mergedSelections=useMemo(()=>{if(!selections||hideSelectAll){return null;}const selectionList=selections===true?[SELECTION_ALL,SELECTION_INVERT,SELECTION_NONE]:selections;return selectionList.map(selection=>{if(selection===SELECTION_ALL){return{key:'all',text:tableLocale.selectionAll,onSelect(){setSelectedKeys(data.map((record,index)=>getRowKey(record,index)).filter(key=>{const checkProps=checkboxPropsMap.get(key);return!(checkProps===null||checkProps===void 0?void 0:checkProps.disabled)||derivedSelectedKeySet.has(key);}),'all');}};}if(selection===SELECTION_INVERT){return{key:'invert',text:tableLocale.selectInvert,onSelect(){const keySet=new Set(derivedSelectedKeySet);pageData.forEach((record,index)=>{const key=getRowKey(record,index);const checkProps=checkboxPropsMap.get(key);if(!(checkProps===null||checkProps===void 0?void 0:checkProps.disabled)){if(keySet.has(key)){keySet.delete(key);}else{keySet.add(key);}}});const keys=Array.from(keySet);if(onSelectInvert){warning.deprecated(false,'onSelectInvert','onChange');onSelectInvert(keys);}setSelectedKeys(keys,'invert');}};}if(selection===SELECTION_NONE){return{key:'none',text:tableLocale.selectNone,onSelect(){onSelectNone===null||onSelectNone===void 0?void 0:onSelectNone();setSelectedKeys(Array.from(derivedSelectedKeySet).filter(key=>{const checkProps=checkboxPropsMap.get(key);return checkProps===null||checkProps===void 0?void 0:checkProps.disabled;}),'none');}};}return selection;}).map(selection=>Object.assign(Object.assign({},selection),{onSelect:function(){var _a2;var _a;for(var _len=arguments.length,rest=new Array(_len),_key=0;_key<_len;_key++){rest[_key]=arguments[_key];}(_a=selection.onSelect)===null||_a===void 0?void 0:(_a2=_a).call.apply(_a2,[selection].concat(rest));updatePrevSelectedIndex(null);}}));},[selections,derivedSelectedKeySet,pageData,getRowKey,onSelectInvert,setSelectedKeys]);// ======================= Columns ========================\nconst transformColumns=useCallback(columns=>{var _a;// >>>>>>>>>>> Skip if not exists `rowSelection`\nif(!rowSelection){process.env.NODE_ENV!==\"production\"?warning(!columns.includes(SELECTION_COLUMN),'usage','`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.'):void 0;return columns.filter(col=>col!==SELECTION_COLUMN);}// >>>>>>>>>>> Support selection\nlet cloneColumns=_toConsumableArray(columns);const keySet=new Set(derivedSelectedKeySet);// Record key only need check with enabled\nconst recordKeys=flattedData.map(getRowKey).filter(key=>!checkboxPropsMap.get(key).disabled);const checkedCurrentAll=recordKeys.every(key=>keySet.has(key));const checkedCurrentSome=recordKeys.some(key=>keySet.has(key));const onSelectAllChange=()=>{const changeKeys=[];if(checkedCurrentAll){recordKeys.forEach(key=>{keySet.delete(key);changeKeys.push(key);});}else{recordKeys.forEach(key=>{if(!keySet.has(key)){keySet.add(key);changeKeys.push(key);}});}const keys=Array.from(keySet);onSelectAll===null||onSelectAll===void 0?void 0:onSelectAll(!checkedCurrentAll,keys.map(k=>getRecordByKey(k)),changeKeys.map(k=>getRecordByKey(k)));setSelectedKeys(keys,'all');updatePrevSelectedIndex(null);};// ===================== Render =====================\n// Title Cell\nlet title;let columnTitleCheckbox;if(selectionType!=='radio'){let customizeSelections;if(mergedSelections){const menu={getPopupContainer,items:mergedSelections.map((selection,index)=>{const{key,text,onSelect:onSelectionClick}=selection;return{key:key!==null&&key!==void 0?key:index,onClick:()=>{onSelectionClick===null||onSelectionClick===void 0?void 0:onSelectionClick(recordKeys);},label:text};})};customizeSelections=/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-selection-extra\")},/*#__PURE__*/React.createElement(Dropdown,{menu:menu,getPopupContainer:getPopupContainer},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(DownOutlined,null))));}const allDisabledData=flattedData.map((record,index)=>{const key=getRowKey(record,index);const checkboxProps=checkboxPropsMap.get(key)||{};return Object.assign({checked:keySet.has(key)},checkboxProps);}).filter(_ref2=>{let{disabled}=_ref2;return disabled;});const allDisabled=!!allDisabledData.length&&allDisabledData.length===flattedData.length;const allDisabledAndChecked=allDisabled&&allDisabledData.every(_ref3=>{let{checked}=_ref3;return checked;});const allDisabledSomeChecked=allDisabled&&allDisabledData.some(_ref4=>{let{checked}=_ref4;return checked;});columnTitleCheckbox=/*#__PURE__*/React.createElement(Checkbox,{checked:!allDisabled?!!flattedData.length&&checkedCurrentAll:allDisabledAndChecked,indeterminate:!allDisabled?!checkedCurrentAll&&checkedCurrentSome:!allDisabledAndChecked&&allDisabledSomeChecked,onChange:onSelectAllChange,disabled:flattedData.length===0||allDisabled,\"aria-label\":customizeSelections?'Custom selection':'Select all',skipGroup:true});title=!hideSelectAll&&(/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-selection\")},columnTitleCheckbox,customizeSelections));}// Body Cell\nlet renderCell;if(selectionType==='radio'){renderCell=(_,record,index)=>{const key=getRowKey(record,index);const checked=keySet.has(key);return{node:(/*#__PURE__*/React.createElement(Radio,Object.assign({},checkboxPropsMap.get(key),{checked:checked,onClick:e=>e.stopPropagation(),onChange:event=>{if(!keySet.has(key)){triggerSingleSelection(key,true,[key],event.nativeEvent);}}}))),checked};};}else{renderCell=(_,record,index)=>{var _a;const key=getRowKey(record,index);const checked=keySet.has(key);const indeterminate=derivedHalfSelectedKeySet.has(key);const checkboxProps=checkboxPropsMap.get(key);let mergedIndeterminate;if(expandType==='nest'){mergedIndeterminate=indeterminate;process.env.NODE_ENV!==\"production\"?warning(typeof(checkboxProps===null||checkboxProps===void 0?void 0:checkboxProps.indeterminate)!=='boolean','usage','set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.'):void 0;}else{mergedIndeterminate=(_a=checkboxProps===null||checkboxProps===void 0?void 0:checkboxProps.indeterminate)!==null&&_a!==void 0?_a:indeterminate;}// Record checked\nreturn{node:(/*#__PURE__*/React.createElement(Checkbox,Object.assign({},checkboxProps,{indeterminate:mergedIndeterminate,checked:checked,skipGroup:true,onClick:e=>e.stopPropagation(),onChange:_ref5=>{let{nativeEvent}=_ref5;const{shiftKey}=nativeEvent;const currentSelectedIndex=recordKeys.findIndex(item=>item===key);const isMultiple=derivedSelectedKeys.some(item=>recordKeys.includes(item));if(shiftKey&&checkStrictly&&isMultiple){const changedKeys=multipleSelect(currentSelectedIndex,recordKeys,keySet);const keys=Array.from(keySet);onSelectMultiple===null||onSelectMultiple===void 0?void 0:onSelectMultiple(!checked,keys.map(recordKey=>getRecordByKey(recordKey)),changedKeys.map(recordKey=>getRecordByKey(recordKey)));setSelectedKeys(keys,'multiple');}else{// Single record selected\nconst originCheckedKeys=derivedSelectedKeys;if(checkStrictly){const checkedKeys=checked?arrDel(originCheckedKeys,key):arrAdd(originCheckedKeys,key);triggerSingleSelection(key,!checked,checkedKeys,nativeEvent);}else{// Always fill first\nconst result=conductCheck([].concat(_toConsumableArray(originCheckedKeys),[key]),true,keyEntities,isCheckboxDisabled);const{checkedKeys,halfCheckedKeys}=result;let nextCheckedKeys=checkedKeys;// If remove, we do it again to correction\nif(checked){const tempKeySet=new Set(checkedKeys);tempKeySet.delete(key);nextCheckedKeys=conductCheck(Array.from(tempKeySet),{checked:false,halfCheckedKeys},keyEntities,isCheckboxDisabled).checkedKeys;}triggerSingleSelection(key,!checked,nextCheckedKeys,nativeEvent);}}if(checked){updatePrevSelectedIndex(null);}else{updatePrevSelectedIndex(currentSelectedIndex);}}}))),checked};};}const renderSelectionCell=(_,record,index)=>{const{node,checked}=renderCell(_,record,index);if(customizeRenderCell){return customizeRenderCell(checked,record,index,node);}return node;};// Insert selection column if not exist\nif(!cloneColumns.includes(SELECTION_COLUMN)){// Always after expand icon\nif(cloneColumns.findIndex(col=>{var _a;return((_a=col[INTERNAL_COL_DEFINE])===null||_a===void 0?void 0:_a.columnType)==='EXPAND_COLUMN';})===0){const[expandColumn,...restColumns]=cloneColumns;cloneColumns=[expandColumn,SELECTION_COLUMN].concat(_toConsumableArray(restColumns));}else{// Normal insert at first column\ncloneColumns=[SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));}}// Deduplicate selection column\nconst selectionColumnIndex=cloneColumns.indexOf(SELECTION_COLUMN);process.env.NODE_ENV!==\"production\"?warning(cloneColumns.filter(col=>col===SELECTION_COLUMN).length<=1,'usage','Multiple `SELECTION_COLUMN` exist in `columns`.'):void 0;cloneColumns=cloneColumns.filter((column,index)=>column!==SELECTION_COLUMN||index===selectionColumnIndex);// Fixed column logic\nconst prevCol=cloneColumns[selectionColumnIndex-1];const nextCol=cloneColumns[selectionColumnIndex+1];let mergedFixed=fixed;if(mergedFixed===undefined){if((nextCol===null||nextCol===void 0?void 0:nextCol.fixed)!==undefined){mergedFixed=nextCol.fixed;}else if((prevCol===null||prevCol===void 0?void 0:prevCol.fixed)!==undefined){mergedFixed=prevCol.fixed;}}if(mergedFixed&&prevCol&&((_a=prevCol[INTERNAL_COL_DEFINE])===null||_a===void 0?void 0:_a.columnType)==='EXPAND_COLUMN'&&prevCol.fixed===undefined){prevCol.fixed=mergedFixed;}const columnCls=classNames(\"\".concat(prefixCls,\"-selection-col\"),{[\"\".concat(prefixCls,\"-selection-col-with-dropdown\")]:selections&&selectionType==='checkbox'});const renderColumnTitle=()=>{if(!(rowSelection===null||rowSelection===void 0?void 0:rowSelection.columnTitle)){return title;}if(typeof rowSelection.columnTitle==='function'){return rowSelection.columnTitle(columnTitleCheckbox);}return rowSelection.columnTitle;};// Replace with real selection column\nconst selectionColumn={fixed:mergedFixed,width:selectionColWidth,className:\"\".concat(prefixCls,\"-selection-column\"),title:renderColumnTitle(),render:renderSelectionCell,onCell:rowSelection.onCell,[INTERNAL_COL_DEFINE]:{className:columnCls}};return cloneColumns.map(col=>col===SELECTION_COLUMN?selectionColumn:col);},[getRowKey,flattedData,rowSelection,derivedSelectedKeys,derivedSelectedKeySet,derivedHalfSelectedKeySet,selectionColWidth,mergedSelections,expandType,checkboxPropsMap,onSelectMultiple,triggerSingleSelection,isCheckboxDisabled]);return[transformColumns,derivedSelectedKeySet];};export default useSelection;","map":{"version":3,"names":["_toConsumableArray","React","useCallback","useMemo","DownOutlined","classNames","INTERNAL_COL_DEFINE","arrAdd","arrDel","conductCheck","convertDataToEntities","useMergedState","useMultipleSelect","devUseWarning","Checkbox","Dropdown","Radio","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","EMPTY_LIST","flattenData","childrenColumnName","data","list","forEach","record","push","concat","useSelection","config","rowSelection","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onChange","onSelectionChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","columnWidth","selectionColWidth","type","selectionType","selections","fixed","renderCell","customizeRenderCell","hideSelectAll","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","locale","tableLocale","getPopupContainer","warning","multipleSelect","updatePrevSelectedIndex","item","mergedSelectedKeys","setMergedSelectedKeys","value","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","keys","newCache","key","current","has","get","set","useEffect","keyEntities","convertData","keysSet","Set","map","index","preserveRecords","Array","from","reduce","total","_ref","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","derivedSelectedKeys","derivedHalfSelectedKeys","checkedKeys","halfCheckedKeys","derivedSelectedKeySet","slice","derivedHalfSelectedKeySet","setSelectedKeys","method","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","delete","add","deprecated","selectNone","Object","assign","_a2","_len","arguments","length","rest","_key","call","apply","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","columnTitleCheckbox","customizeSelections","menu","items","onSelectionClick","onClick","label","createElement","className","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","currentSelectedIndex","findIndex","isMultiple","changedKeys","recordKey","originCheckedKeys","result","nextCheckedKeys","tempKeySet","renderSelectionCell","columnType","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","columnCls","renderColumnTitle","columnTitle","selectionColumn","width","render","onCell"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/table/hooks/useSelection.js"],"sourcesContent":["\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport classNames from 'classnames';\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport useMultipleSelect from '../../_util/hooks/useMultipleSelect';\nimport { devUseWarning } from '../../_util/warning';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Radio from '../../radio';\n// TODO: warning if use ajax!!!\nexport const SELECTION_COLUMN = {};\nexport const SELECTION_ALL = 'SELECT_ALL';\nexport const SELECTION_INVERT = 'SELECT_INVERT';\nexport const SELECTION_NONE = 'SELECT_NONE';\nconst EMPTY_LIST = [];\nconst flattenData = (childrenColumnName, data) => {\n  let list = [];\n  (data || []).forEach(record => {\n    list.push(record);\n    if (record && typeof record === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(childrenColumnName, record[childrenColumnName])));\n    }\n  });\n  return list;\n};\nconst useSelection = (config, rowSelection) => {\n  const {\n    preserveSelectedRowKeys,\n    selectedRowKeys,\n    defaultSelectedRowKeys,\n    getCheckboxProps,\n    onChange: onSelectionChange,\n    onSelect,\n    onSelectAll,\n    onSelectInvert,\n    onSelectNone,\n    onSelectMultiple,\n    columnWidth: selectionColWidth,\n    type: selectionType,\n    selections,\n    fixed,\n    renderCell: customizeRenderCell,\n    hideSelectAll,\n    checkStrictly = true\n  } = rowSelection || {};\n  const {\n    prefixCls,\n    data,\n    pageData,\n    getRecordByKey,\n    getRowKey,\n    expandType,\n    childrenColumnName,\n    locale: tableLocale,\n    getPopupContainer\n  } = config;\n  const warning = devUseWarning('Table');\n  // ========================= MultipleSelect =========================\n  const [multipleSelect, updatePrevSelectedIndex] = useMultipleSelect(item => item);\n  // ========================= Keys =========================\n  const [mergedSelectedKeys, setMergedSelectedKeys] = useMergedState(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n    value: selectedRowKeys\n  });\n  // ======================== Caches ========================\n  const preserveRecordsRef = React.useRef(new Map());\n  const updatePreserveRecordsCache = useCallback(keys => {\n    if (preserveSelectedRowKeys) {\n      const newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(key => {\n        let record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]);\n  // Update cache with selectedKeys\n  React.useEffect(() => {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  const {\n    keyEntities\n  } = useMemo(() => {\n    if (checkStrictly) {\n      return {\n        keyEntities: null\n      };\n    }\n    let convertData = data;\n    if (preserveSelectedRowKeys) {\n      const keysSet = new Set(data.map((record, index) => getRowKey(record, index)));\n      // remove preserveRecords that duplicate data\n      const preserveRecords = Array.from(preserveRecordsRef.current).reduce((total, _ref) => {\n        let [key, value] = _ref;\n        return keysSet.has(key) ? total : total.concat(value);\n      }, []);\n      convertData = [].concat(_toConsumableArray(convertData), _toConsumableArray(preserveRecords));\n    }\n    return convertDataToEntities(convertData, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName, preserveSelectedRowKeys]);\n  // Get flatten data\n  const flattedData = useMemo(() => flattenData(childrenColumnName, pageData), [childrenColumnName, pageData]);\n  // Get all checkbox props\n  const checkboxPropsMap = useMemo(() => {\n    const map = new Map();\n    flattedData.forEach((record, index) => {\n      const key = getRowKey(record, index);\n      const checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? warning(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'usage', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  const isCheckboxDisabled = useCallback(r => {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  const [derivedSelectedKeys, derivedHalfSelectedKeys] = useMemo(() => {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n    const {\n      checkedKeys,\n      halfCheckedKeys\n    } = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled);\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]);\n  const derivedSelectedKeySet = useMemo(() => {\n    const keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  const derivedHalfSelectedKeySet = useMemo(() => selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys), [derivedHalfSelectedKeys, selectionType]);\n  // Reset if rowSelection reset\n  React.useEffect(() => {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  const setSelectedKeys = useCallback((keys, method) => {\n    let availableKeys;\n    let records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(key => preserveRecordsRef.current.get(key));\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(key => {\n        const record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]);\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  const triggerSingleSelection = useCallback((key, selected, keys, event) => {\n    if (onSelect) {\n      const rows = keys.map(k => getRecordByKey(k));\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  const mergedSelections = useMemo(() => {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    const selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(selection => {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect() {\n            setSelectedKeys(data.map((record, index) => getRowKey(record, index)).filter(key => {\n              const checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect() {\n            const keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach((record, index) => {\n              const key = getRowKey(record, index);\n              const checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet.delete(key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            const keys = Array.from(keySet);\n            if (onSelectInvert) {\n              warning.deprecated(false, 'onSelectInvert', 'onChange');\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(key => {\n              const checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n      return selection;\n    }).map(selection => Object.assign(Object.assign({}, selection), {\n      onSelect: function () {\n        var _a2;\n        var _a;\n        for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        }\n        (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n        updatePrevSelectedIndex(null);\n      }\n    }));\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]);\n  // ======================= Columns ========================\n  const transformColumns = useCallback(columns => {\n    var _a;\n    // >>>>>>>>>>> Skip if not exists `rowSelection`\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? warning(!columns.includes(SELECTION_COLUMN), 'usage', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(col => col !== SELECTION_COLUMN);\n    }\n    // >>>>>>>>>>> Support selection\n    let cloneColumns = _toConsumableArray(columns);\n    const keySet = new Set(derivedSelectedKeySet);\n    // Record key only need check with enabled\n    const recordKeys = flattedData.map(getRowKey).filter(key => !checkboxPropsMap.get(key).disabled);\n    const checkedCurrentAll = recordKeys.every(key => keySet.has(key));\n    const checkedCurrentSome = recordKeys.some(key => keySet.has(key));\n    const onSelectAllChange = () => {\n      const changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(key => {\n          keySet.delete(key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(key => {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      const keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(k => getRecordByKey(k)), changeKeys.map(k => getRecordByKey(k)));\n      setSelectedKeys(keys, 'all');\n      updatePrevSelectedIndex(null);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    let title;\n    let columnTitleCheckbox;\n    if (selectionType !== 'radio') {\n      let customizeSelections;\n      if (mergedSelections) {\n        const menu = {\n          getPopupContainer,\n          items: mergedSelections.map((selection, index) => {\n            const {\n              key,\n              text,\n              onSelect: onSelectionClick\n            } = selection;\n            return {\n              key: key !== null && key !== void 0 ? key : index,\n              onClick: () => {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: `${prefixCls}-selection-extra`\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n      const allDisabledData = flattedData.map((record, index) => {\n        const key = getRowKey(record, index);\n        const checkboxProps = checkboxPropsMap.get(key) || {};\n        return Object.assign({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(_ref2 => {\n        let {\n          disabled\n        } = _ref2;\n        return disabled;\n      });\n      const allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      const allDisabledAndChecked = allDisabled && allDisabledData.every(_ref3 => {\n        let {\n          checked\n        } = _ref3;\n        return checked;\n      });\n      const allDisabledSomeChecked = allDisabled && allDisabledData.some(_ref4 => {\n        let {\n          checked\n        } = _ref4;\n        return checked;\n      });\n      columnTitleCheckbox = /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      });\n      title = !hideSelectAll && ( /*#__PURE__*/React.createElement(\"div\", {\n        className: `${prefixCls}-selection`\n      }, columnTitleCheckbox, customizeSelections));\n    }\n    // Body Cell\n    let renderCell;\n    if (selectionType === 'radio') {\n      renderCell = (_, record, index) => {\n        const key = getRowKey(record, index);\n        const checked = keySet.has(key);\n        return {\n          node: ( /*#__PURE__*/React.createElement(Radio, Object.assign({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: e => e.stopPropagation(),\n            onChange: event => {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }))),\n          checked\n        };\n      };\n    } else {\n      renderCell = (_, record, index) => {\n        var _a;\n        const key = getRowKey(record, index);\n        const checked = keySet.has(key);\n        const indeterminate = derivedHalfSelectedKeySet.has(key);\n        const checkboxProps = checkboxPropsMap.get(key);\n        let mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? warning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'usage', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        }\n        // Record checked\n        return {\n          node: ( /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: e => e.stopPropagation(),\n            onChange: _ref5 => {\n              let {\n                nativeEvent\n              } = _ref5;\n              const {\n                shiftKey\n              } = nativeEvent;\n              const currentSelectedIndex = recordKeys.findIndex(item => item === key);\n              const isMultiple = derivedSelectedKeys.some(item => recordKeys.includes(item));\n              if (shiftKey && checkStrictly && isMultiple) {\n                const changedKeys = multipleSelect(currentSelectedIndex, recordKeys, keySet);\n                const keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(recordKey => getRecordByKey(recordKey)), changedKeys.map(recordKey => getRecordByKey(recordKey)));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                const originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  const checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  const result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  const {\n                    checkedKeys,\n                    halfCheckedKeys\n                  } = result;\n                  let nextCheckedKeys = checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    const tempKeySet = new Set(checkedKeys);\n                    tempKeySet.delete(key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              if (checked) {\n                updatePrevSelectedIndex(null);\n              } else {\n                updatePrevSelectedIndex(currentSelectedIndex);\n              }\n            }\n          }))),\n          checked\n        };\n      };\n    }\n    const renderSelectionCell = (_, record, index) => {\n      const {\n        node,\n        checked\n      } = renderCell(_, record, index);\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(col => {\n        var _a;\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        const [expandColumn, ...restColumns] = cloneColumns;\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    const selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? warning(cloneColumns.filter(col => col === SELECTION_COLUMN).length <= 1, 'usage', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter((column, index) => column !== SELECTION_COLUMN || index === selectionColumnIndex);\n    // Fixed column logic\n    const prevCol = cloneColumns[selectionColumnIndex - 1];\n    const nextCol = cloneColumns[selectionColumnIndex + 1];\n    let mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    const columnCls = classNames(`${prefixCls}-selection-col`, {\n      [`${prefixCls}-selection-col-with-dropdown`]: selections && selectionType === 'checkbox'\n    });\n    const renderColumnTitle = () => {\n      if (!(rowSelection === null || rowSelection === void 0 ? void 0 : rowSelection.columnTitle)) {\n        return title;\n      }\n      if (typeof rowSelection.columnTitle === 'function') {\n        return rowSelection.columnTitle(columnTitleCheckbox);\n      }\n      return rowSelection.columnTitle;\n    };\n    // Replace with real selection column\n    const selectionColumn = {\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: `${prefixCls}-selection-column`,\n      title: renderColumnTitle(),\n      render: renderSelectionCell,\n      onCell: rowSelection.onCell,\n      [INTERNAL_COL_DEFINE]: {\n        className: columnCls\n      }\n    };\n    return cloneColumns.map(col => col === SELECTION_COLUMN ? selectionColumn : col);\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n};\nexport default useSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}