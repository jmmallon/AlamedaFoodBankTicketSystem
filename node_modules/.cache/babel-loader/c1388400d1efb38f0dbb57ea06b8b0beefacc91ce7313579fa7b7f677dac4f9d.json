{"ast":null,"code":"var __defProp=Object.defineProperty;var __getOwnPropSymbols=Object.getOwnPropertySymbols;var __hasOwnProp=Object.prototype.hasOwnProperty;var __propIsEnum=Object.prototype.propertyIsEnumerable;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __spreadValues=(a,b)=>{for(var prop in b||(b={}))if(__hasOwnProp.call(b,prop))__defNormalProp(a,prop,b[prop]);if(__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(b)){if(__propIsEnum.call(b,prop))__defNormalProp(a,prop,b[prop]);}return a;};var __objRest=(source,exclude)=>{var target={};for(var prop in source)if(__hasOwnProp.call(source,prop)&&exclude.indexOf(prop)<0)target[prop]=source[prop];if(source!=null&&__getOwnPropSymbols)for(var prop of __getOwnPropSymbols(source)){if(exclude.indexOf(prop)<0&&__propIsEnum.call(source,prop))target[prop]=source[prop];}return target;};// src/index.tsx\nimport React,{useRef,useEffect,useState}from\"react\";// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */var qrcodegen;(qrcodegen2=>{const _QrCode=class{constructor(version,errorCorrectionLevel,dataCodewords,msk){this.version=version;this.errorCorrectionLevel=errorCorrectionLevel;this.modules=[];this.isFunction=[];if(version<_QrCode.MIN_VERSION||version>_QrCode.MAX_VERSION)throw new RangeError(\"Version value out of range\");if(msk<-1||msk>7)throw new RangeError(\"Mask value out of range\");this.size=version*4+17;let row=[];for(let i=0;i<this.size;i++)row.push(false);for(let i=0;i<this.size;i++){this.modules.push(row.slice());this.isFunction.push(row.slice());}this.drawFunctionPatterns();const allCodewords=this.addEccAndInterleave(dataCodewords);this.drawCodewords(allCodewords);if(msk==-1){let minPenalty=1e9;for(let i=0;i<8;i++){this.applyMask(i);this.drawFormatBits(i);const penalty=this.getPenaltyScore();if(penalty<minPenalty){msk=i;minPenalty=penalty;}this.applyMask(i);}}assert(0<=msk&&msk<=7);this.mask=msk;this.applyMask(msk);this.drawFormatBits(msk);this.isFunction=[];}static encodeText(text,ecl){const segs=qrcodegen2.QrSegment.makeSegments(text);return _QrCode.encodeSegments(segs,ecl);}static encodeBinary(data,ecl){const seg=qrcodegen2.QrSegment.makeBytes(data);return _QrCode.encodeSegments([seg],ecl);}static encodeSegments(segs,ecl){let minVersion=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let maxVersion=arguments.length>3&&arguments[3]!==undefined?arguments[3]:40;let mask=arguments.length>4&&arguments[4]!==undefined?arguments[4]:-1;let boostEcl=arguments.length>5&&arguments[5]!==undefined?arguments[5]:true;if(!(_QrCode.MIN_VERSION<=minVersion&&minVersion<=maxVersion&&maxVersion<=_QrCode.MAX_VERSION)||mask<-1||mask>7)throw new RangeError(\"Invalid value\");let version;let dataUsedBits;for(version=minVersion;;version++){const dataCapacityBits2=_QrCode.getNumDataCodewords(version,ecl)*8;const usedBits=QrSegment.getTotalBits(segs,version);if(usedBits<=dataCapacityBits2){dataUsedBits=usedBits;break;}if(version>=maxVersion)throw new RangeError(\"Data too long\");}for(const newEcl of[_QrCode.Ecc.MEDIUM,_QrCode.Ecc.QUARTILE,_QrCode.Ecc.HIGH]){if(boostEcl&&dataUsedBits<=_QrCode.getNumDataCodewords(version,newEcl)*8)ecl=newEcl;}let bb=[];for(const seg of segs){appendBits(seg.mode.modeBits,4,bb);appendBits(seg.numChars,seg.mode.numCharCountBits(version),bb);for(const b of seg.getData())bb.push(b);}assert(bb.length==dataUsedBits);const dataCapacityBits=_QrCode.getNumDataCodewords(version,ecl)*8;assert(bb.length<=dataCapacityBits);appendBits(0,Math.min(4,dataCapacityBits-bb.length),bb);appendBits(0,(8-bb.length%8)%8,bb);assert(bb.length%8==0);for(let padByte=236;bb.length<dataCapacityBits;padByte^=236^17)appendBits(padByte,8,bb);let dataCodewords=[];while(dataCodewords.length*8<bb.length)dataCodewords.push(0);bb.forEach((b,i)=>dataCodewords[i>>>3]|=b<<7-(i&7));return new _QrCode(version,ecl,dataCodewords,mask);}getModule(x,y){return 0<=x&&x<this.size&&0<=y&&y<this.size&&this.modules[y][x];}getModules(){return this.modules;}drawFunctionPatterns(){for(let i=0;i<this.size;i++){this.setFunctionModule(6,i,i%2==0);this.setFunctionModule(i,6,i%2==0);}this.drawFinderPattern(3,3);this.drawFinderPattern(this.size-4,3);this.drawFinderPattern(3,this.size-4);const alignPatPos=this.getAlignmentPatternPositions();const numAlign=alignPatPos.length;for(let i=0;i<numAlign;i++){for(let j=0;j<numAlign;j++){if(!(i==0&&j==0||i==0&&j==numAlign-1||i==numAlign-1&&j==0))this.drawAlignmentPattern(alignPatPos[i],alignPatPos[j]);}}this.drawFormatBits(0);this.drawVersion();}drawFormatBits(mask){const data=this.errorCorrectionLevel.formatBits<<3|mask;let rem=data;for(let i=0;i<10;i++)rem=rem<<1^(rem>>>9)*1335;const bits=(data<<10|rem)^21522;assert(bits>>>15==0);for(let i=0;i<=5;i++)this.setFunctionModule(8,i,getBit(bits,i));this.setFunctionModule(8,7,getBit(bits,6));this.setFunctionModule(8,8,getBit(bits,7));this.setFunctionModule(7,8,getBit(bits,8));for(let i=9;i<15;i++)this.setFunctionModule(14-i,8,getBit(bits,i));for(let i=0;i<8;i++)this.setFunctionModule(this.size-1-i,8,getBit(bits,i));for(let i=8;i<15;i++)this.setFunctionModule(8,this.size-15+i,getBit(bits,i));this.setFunctionModule(8,this.size-8,true);}drawVersion(){if(this.version<7)return;let rem=this.version;for(let i=0;i<12;i++)rem=rem<<1^(rem>>>11)*7973;const bits=this.version<<12|rem;assert(bits>>>18==0);for(let i=0;i<18;i++){const color=getBit(bits,i);const a=this.size-11+i%3;const b=Math.floor(i/3);this.setFunctionModule(a,b,color);this.setFunctionModule(b,a,color);}}drawFinderPattern(x,y){for(let dy=-4;dy<=4;dy++){for(let dx=-4;dx<=4;dx++){const dist=Math.max(Math.abs(dx),Math.abs(dy));const xx=x+dx;const yy=y+dy;if(0<=xx&&xx<this.size&&0<=yy&&yy<this.size)this.setFunctionModule(xx,yy,dist!=2&&dist!=4);}}}drawAlignmentPattern(x,y){for(let dy=-2;dy<=2;dy++){for(let dx=-2;dx<=2;dx++)this.setFunctionModule(x+dx,y+dy,Math.max(Math.abs(dx),Math.abs(dy))!=1);}}setFunctionModule(x,y,isDark){this.modules[y][x]=isDark;this.isFunction[y][x]=true;}addEccAndInterleave(data){const ver=this.version;const ecl=this.errorCorrectionLevel;if(data.length!=_QrCode.getNumDataCodewords(ver,ecl))throw new RangeError(\"Invalid argument\");const numBlocks=_QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];const blockEccLen=_QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];const rawCodewords=Math.floor(_QrCode.getNumRawDataModules(ver)/8);const numShortBlocks=numBlocks-rawCodewords%numBlocks;const shortBlockLen=Math.floor(rawCodewords/numBlocks);let blocks=[];const rsDiv=_QrCode.reedSolomonComputeDivisor(blockEccLen);for(let i=0,k=0;i<numBlocks;i++){let dat=data.slice(k,k+shortBlockLen-blockEccLen+(i<numShortBlocks?0:1));k+=dat.length;const ecc=_QrCode.reedSolomonComputeRemainder(dat,rsDiv);if(i<numShortBlocks)dat.push(0);blocks.push(dat.concat(ecc));}let result=[];for(let i=0;i<blocks[0].length;i++){blocks.forEach((block,j)=>{if(i!=shortBlockLen-blockEccLen||j>=numShortBlocks)result.push(block[i]);});}assert(result.length==rawCodewords);return result;}drawCodewords(data){if(data.length!=Math.floor(_QrCode.getNumRawDataModules(this.version)/8))throw new RangeError(\"Invalid argument\");let i=0;for(let right=this.size-1;right>=1;right-=2){if(right==6)right=5;for(let vert=0;vert<this.size;vert++){for(let j=0;j<2;j++){const x=right-j;const upward=(right+1&2)==0;const y=upward?this.size-1-vert:vert;if(!this.isFunction[y][x]&&i<data.length*8){this.modules[y][x]=getBit(data[i>>>3],7-(i&7));i++;}}}}assert(i==data.length*8);}applyMask(mask){if(mask<0||mask>7)throw new RangeError(\"Mask value out of range\");for(let y=0;y<this.size;y++){for(let x=0;x<this.size;x++){let invert;switch(mask){case 0:invert=(x+y)%2==0;break;case 1:invert=y%2==0;break;case 2:invert=x%3==0;break;case 3:invert=(x+y)%3==0;break;case 4:invert=(Math.floor(x/3)+Math.floor(y/2))%2==0;break;case 5:invert=x*y%2+x*y%3==0;break;case 6:invert=(x*y%2+x*y%3)%2==0;break;case 7:invert=((x+y)%2+x*y%3)%2==0;break;default:throw new Error(\"Unreachable\");}if(!this.isFunction[y][x]&&invert)this.modules[y][x]=!this.modules[y][x];}}}getPenaltyScore(){let result=0;for(let y=0;y<this.size;y++){let runColor=false;let runX=0;let runHistory=[0,0,0,0,0,0,0];for(let x=0;x<this.size;x++){if(this.modules[y][x]==runColor){runX++;if(runX==5)result+=_QrCode.PENALTY_N1;else if(runX>5)result++;}else{this.finderPenaltyAddHistory(runX,runHistory);if(!runColor)result+=this.finderPenaltyCountPatterns(runHistory)*_QrCode.PENALTY_N3;runColor=this.modules[y][x];runX=1;}}result+=this.finderPenaltyTerminateAndCount(runColor,runX,runHistory)*_QrCode.PENALTY_N3;}for(let x=0;x<this.size;x++){let runColor=false;let runY=0;let runHistory=[0,0,0,0,0,0,0];for(let y=0;y<this.size;y++){if(this.modules[y][x]==runColor){runY++;if(runY==5)result+=_QrCode.PENALTY_N1;else if(runY>5)result++;}else{this.finderPenaltyAddHistory(runY,runHistory);if(!runColor)result+=this.finderPenaltyCountPatterns(runHistory)*_QrCode.PENALTY_N3;runColor=this.modules[y][x];runY=1;}}result+=this.finderPenaltyTerminateAndCount(runColor,runY,runHistory)*_QrCode.PENALTY_N3;}for(let y=0;y<this.size-1;y++){for(let x=0;x<this.size-1;x++){const color=this.modules[y][x];if(color==this.modules[y][x+1]&&color==this.modules[y+1][x]&&color==this.modules[y+1][x+1])result+=_QrCode.PENALTY_N2;}}let dark=0;for(const row of this.modules)dark=row.reduce((sum,color)=>sum+(color?1:0),dark);const total=this.size*this.size;const k=Math.ceil(Math.abs(dark*20-total*10)/total)-1;assert(0<=k&&k<=9);result+=k*_QrCode.PENALTY_N4;assert(0<=result&&result<=2568888);return result;}getAlignmentPatternPositions(){if(this.version==1)return[];else{const numAlign=Math.floor(this.version/7)+2;const step=this.version==32?26:Math.ceil((this.version*4+4)/(numAlign*2-2))*2;let result=[6];for(let pos=this.size-7;result.length<numAlign;pos-=step)result.splice(1,0,pos);return result;}}static getNumRawDataModules(ver){if(ver<_QrCode.MIN_VERSION||ver>_QrCode.MAX_VERSION)throw new RangeError(\"Version number out of range\");let result=(16*ver+128)*ver+64;if(ver>=2){const numAlign=Math.floor(ver/7)+2;result-=(25*numAlign-10)*numAlign-55;if(ver>=7)result-=36;}assert(208<=result&&result<=29648);return result;}static getNumDataCodewords(ver,ecl){return Math.floor(_QrCode.getNumRawDataModules(ver)/8)-_QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver]*_QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];}static reedSolomonComputeDivisor(degree){if(degree<1||degree>255)throw new RangeError(\"Degree out of range\");let result=[];for(let i=0;i<degree-1;i++)result.push(0);result.push(1);let root=1;for(let i=0;i<degree;i++){for(let j=0;j<result.length;j++){result[j]=_QrCode.reedSolomonMultiply(result[j],root);if(j+1<result.length)result[j]^=result[j+1];}root=_QrCode.reedSolomonMultiply(root,2);}return result;}static reedSolomonComputeRemainder(data,divisor){let result=divisor.map(_=>0);for(const b of data){const factor=b^result.shift();result.push(0);divisor.forEach((coef,i)=>result[i]^=_QrCode.reedSolomonMultiply(coef,factor));}return result;}static reedSolomonMultiply(x,y){if(x>>>8!=0||y>>>8!=0)throw new RangeError(\"Byte out of range\");let z=0;for(let i=7;i>=0;i--){z=z<<1^(z>>>7)*285;z^=(y>>>i&1)*x;}assert(z>>>8==0);return z;}finderPenaltyCountPatterns(runHistory){const n=runHistory[1];assert(n<=this.size*3);const core=n>0&&runHistory[2]==n&&runHistory[3]==n*3&&runHistory[4]==n&&runHistory[5]==n;return(core&&runHistory[0]>=n*4&&runHistory[6]>=n?1:0)+(core&&runHistory[6]>=n*4&&runHistory[0]>=n?1:0);}finderPenaltyTerminateAndCount(currentRunColor,currentRunLength,runHistory){if(currentRunColor){this.finderPenaltyAddHistory(currentRunLength,runHistory);currentRunLength=0;}currentRunLength+=this.size;this.finderPenaltyAddHistory(currentRunLength,runHistory);return this.finderPenaltyCountPatterns(runHistory);}finderPenaltyAddHistory(currentRunLength,runHistory){if(runHistory[0]==0)currentRunLength+=this.size;runHistory.pop();runHistory.unshift(currentRunLength);}};let QrCode=_QrCode;QrCode.MIN_VERSION=1;QrCode.MAX_VERSION=40;QrCode.PENALTY_N1=3;QrCode.PENALTY_N2=3;QrCode.PENALTY_N3=40;QrCode.PENALTY_N4=10;QrCode.ECC_CODEWORDS_PER_BLOCK=[[-1,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],[-1,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[-1,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30]];QrCode.NUM_ERROR_CORRECTION_BLOCKS=[[-1,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],[-1,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],[-1,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68],[-1,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81]];qrcodegen2.QrCode=QrCode;function appendBits(val,len,bb){if(len<0||len>31||val>>>len!=0)throw new RangeError(\"Value out of range\");for(let i=len-1;i>=0;i--)bb.push(val>>>i&1);}function getBit(x,i){return(x>>>i&1)!=0;}function assert(cond){if(!cond)throw new Error(\"Assertion error\");}const _QrSegment=class{constructor(mode,numChars,bitData){this.mode=mode;this.numChars=numChars;this.bitData=bitData;if(numChars<0)throw new RangeError(\"Invalid argument\");this.bitData=bitData.slice();}static makeBytes(data){let bb=[];for(const b of data)appendBits(b,8,bb);return new _QrSegment(_QrSegment.Mode.BYTE,data.length,bb);}static makeNumeric(digits){if(!_QrSegment.isNumeric(digits))throw new RangeError(\"String contains non-numeric characters\");let bb=[];for(let i=0;i<digits.length;){const n=Math.min(digits.length-i,3);appendBits(parseInt(digits.substr(i,n),10),n*3+1,bb);i+=n;}return new _QrSegment(_QrSegment.Mode.NUMERIC,digits.length,bb);}static makeAlphanumeric(text){if(!_QrSegment.isAlphanumeric(text))throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");let bb=[];let i;for(i=0;i+2<=text.length;i+=2){let temp=_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i))*45;temp+=_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i+1));appendBits(temp,11,bb);}if(i<text.length)appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)),6,bb);return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC,text.length,bb);}static makeSegments(text){if(text==\"\")return[];else if(_QrSegment.isNumeric(text))return[_QrSegment.makeNumeric(text)];else if(_QrSegment.isAlphanumeric(text))return[_QrSegment.makeAlphanumeric(text)];else return[_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];}static makeEci(assignVal){let bb=[];if(assignVal<0)throw new RangeError(\"ECI assignment value out of range\");else if(assignVal<1<<7)appendBits(assignVal,8,bb);else if(assignVal<1<<14){appendBits(2,2,bb);appendBits(assignVal,14,bb);}else if(assignVal<1e6){appendBits(6,3,bb);appendBits(assignVal,21,bb);}else throw new RangeError(\"ECI assignment value out of range\");return new _QrSegment(_QrSegment.Mode.ECI,0,bb);}static isNumeric(text){return _QrSegment.NUMERIC_REGEX.test(text);}static isAlphanumeric(text){return _QrSegment.ALPHANUMERIC_REGEX.test(text);}getData(){return this.bitData.slice();}static getTotalBits(segs,version){let result=0;for(const seg of segs){const ccbits=seg.mode.numCharCountBits(version);if(seg.numChars>=1<<ccbits)return Infinity;result+=4+ccbits+seg.bitData.length;}return result;}static toUtf8ByteArray(str){str=encodeURI(str);let result=[];for(let i=0;i<str.length;i++){if(str.charAt(i)!=\"%\")result.push(str.charCodeAt(i));else{result.push(parseInt(str.substr(i+1,2),16));i+=2;}}return result;}};let QrSegment=_QrSegment;QrSegment.NUMERIC_REGEX=/^[0-9]*$/;QrSegment.ALPHANUMERIC_REGEX=/^[A-Z0-9 $%*+.\\/:-]*$/;QrSegment.ALPHANUMERIC_CHARSET=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";qrcodegen2.QrSegment=QrSegment;})(qrcodegen||(qrcodegen={}));(qrcodegen2=>{let QrCode;(QrCode2=>{const _Ecc=class{constructor(ordinal,formatBits){this.ordinal=ordinal;this.formatBits=formatBits;}};let Ecc=_Ecc;Ecc.LOW=new _Ecc(0,1);Ecc.MEDIUM=new _Ecc(1,0);Ecc.QUARTILE=new _Ecc(2,3);Ecc.HIGH=new _Ecc(3,2);QrCode2.Ecc=Ecc;})(QrCode=qrcodegen2.QrCode||(qrcodegen2.QrCode={}));})(qrcodegen||(qrcodegen={}));(qrcodegen2=>{let QrSegment;(QrSegment2=>{const _Mode=class{constructor(modeBits,numBitsCharCount){this.modeBits=modeBits;this.numBitsCharCount=numBitsCharCount;}numCharCountBits(ver){return this.numBitsCharCount[Math.floor((ver+7)/17)];}};let Mode=_Mode;Mode.NUMERIC=new _Mode(1,[10,12,14]);Mode.ALPHANUMERIC=new _Mode(2,[9,11,13]);Mode.BYTE=new _Mode(4,[8,16,16]);Mode.KANJI=new _Mode(8,[8,10,12]);Mode.ECI=new _Mode(7,[0,0,0]);QrSegment2.Mode=Mode;})(QrSegment=qrcodegen2.QrSegment||(qrcodegen2.QrSegment={}));})(qrcodegen||(qrcodegen={}));var qrcodegen_default=qrcodegen;// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */var ERROR_LEVEL_MAP={L:qrcodegen_default.QrCode.Ecc.LOW,M:qrcodegen_default.QrCode.Ecc.MEDIUM,Q:qrcodegen_default.QrCode.Ecc.QUARTILE,H:qrcodegen_default.QrCode.Ecc.HIGH};var DEFAULT_SIZE=128;var DEFAULT_LEVEL=\"L\";var DEFAULT_BGCOLOR=\"#FFFFFF\";var DEFAULT_FGCOLOR=\"#000000\";var DEFAULT_INCLUDEMARGIN=false;var MARGIN_SIZE=4;var DEFAULT_IMG_SCALE=0.1;function generatePath(modules){let margin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const ops=[];modules.forEach(function(row,y){let start=null;row.forEach(function(cell,x){if(!cell&&start!==null){ops.push(\"M\".concat(start+margin,\" \").concat(y+margin,\"h\").concat(x-start,\"v1H\").concat(start+margin,\"z\"));start=null;return;}if(x===row.length-1){if(!cell){return;}if(start===null){ops.push(\"M\".concat(x+margin,\",\").concat(y+margin,\" h1v1H\").concat(x+margin,\"z\"));}else{ops.push(\"M\".concat(start+margin,\",\").concat(y+margin,\" h\").concat(x+1-start,\"v1H\").concat(start+margin,\"z\"));}return;}if(cell&&start===null){start=x;}});});return ops.join(\"\");}function excavateModules(modules,excavation){return modules.slice().map((row,y)=>{if(y<excavation.y||y>=excavation.y+excavation.h){return row;}return row.map((cell,x)=>{if(x<excavation.x||x>=excavation.x+excavation.w){return cell;}return false;});});}function getImageSettings(cells,size,includeMargin,imageSettings){if(imageSettings==null){return null;}const margin=includeMargin?MARGIN_SIZE:0;const numCells=cells.length+margin*2;const defaultSize=Math.floor(size*DEFAULT_IMG_SCALE);const scale=numCells/size;const w=(imageSettings.width||defaultSize)*scale;const h=(imageSettings.height||defaultSize)*scale;const x=imageSettings.x==null?cells.length/2-w/2:imageSettings.x*scale;const y=imageSettings.y==null?cells.length/2-h/2:imageSettings.y*scale;let excavation=null;if(imageSettings.excavate){let floorX=Math.floor(x);let floorY=Math.floor(y);let ceilW=Math.ceil(w+x-floorX);let ceilH=Math.ceil(h+y-floorY);excavation={x:floorX,y:floorY,w:ceilW,h:ceilH};}return{x,y,h,w,excavation};}var SUPPORTS_PATH2D=function(){try{new Path2D().addPath(new Path2D());}catch(e){return false;}return true;}();function QRCodeCanvas(props){const _a=props,{value,size=DEFAULT_SIZE,level=DEFAULT_LEVEL,bgColor=DEFAULT_BGCOLOR,fgColor=DEFAULT_FGCOLOR,includeMargin=DEFAULT_INCLUDEMARGIN,style,imageSettings}=_a,otherProps=__objRest(_a,[\"value\",\"size\",\"level\",\"bgColor\",\"fgColor\",\"includeMargin\",\"style\",\"imageSettings\"]);const imgSrc=imageSettings==null?void 0:imageSettings.src;const _canvas=useRef(null);const _image=useRef(null);const[isImgLoaded,setIsImageLoaded]=useState(false);useEffect(()=>{if(_canvas.current!=null){const canvas=_canvas.current;const ctx=canvas.getContext(\"2d\");if(!ctx){return;}let cells=qrcodegen_default.QrCode.encodeText(value,ERROR_LEVEL_MAP[level]).getModules();const margin=includeMargin?MARGIN_SIZE:0;const numCells=cells.length+margin*2;const calculatedImageSettings=getImageSettings(cells,size,includeMargin,imageSettings);const image=_image.current;const haveImageToRender=calculatedImageSettings!=null&&image!==null&&image.complete&&image.naturalHeight!==0&&image.naturalWidth!==0;if(haveImageToRender){if(calculatedImageSettings.excavation!=null){cells=excavateModules(cells,calculatedImageSettings.excavation);}}const pixelRatio=window.devicePixelRatio||1;canvas.height=canvas.width=size*pixelRatio;const scale=size/numCells*pixelRatio;ctx.scale(scale,scale);ctx.fillStyle=bgColor;ctx.fillRect(0,0,numCells,numCells);ctx.fillStyle=fgColor;if(SUPPORTS_PATH2D){ctx.fill(new Path2D(generatePath(cells,margin)));}else{cells.forEach(function(row,rdx){row.forEach(function(cell,cdx){if(cell){ctx.fillRect(cdx+margin,rdx+margin,1,1);}});});}if(haveImageToRender){ctx.drawImage(image,calculatedImageSettings.x+margin,calculatedImageSettings.y+margin,calculatedImageSettings.w,calculatedImageSettings.h);}}});useEffect(()=>{setIsImageLoaded(false);},[imgSrc]);const canvasStyle=__spreadValues({height:size,width:size},style);let img=null;if(imgSrc!=null){img=/* @__PURE__ */React.createElement(\"img\",{src:imgSrc,key:imgSrc,style:{display:\"none\"},onLoad:()=>{setIsImageLoaded(true);},ref:_image});}return/* @__PURE__ */React.createElement(React.Fragment,null,/* @__PURE__ */React.createElement(\"canvas\",__spreadValues({style:canvasStyle,height:size,width:size,ref:_canvas},otherProps)),img);}function QRCodeSVG(props){const _a=props,{value,size=DEFAULT_SIZE,level=DEFAULT_LEVEL,bgColor=DEFAULT_BGCOLOR,fgColor=DEFAULT_FGCOLOR,includeMargin=DEFAULT_INCLUDEMARGIN,imageSettings}=_a,otherProps=__objRest(_a,[\"value\",\"size\",\"level\",\"bgColor\",\"fgColor\",\"includeMargin\",\"imageSettings\"]);let cells=qrcodegen_default.QrCode.encodeText(value,ERROR_LEVEL_MAP[level]).getModules();const margin=includeMargin?MARGIN_SIZE:0;const numCells=cells.length+margin*2;const calculatedImageSettings=getImageSettings(cells,size,includeMargin,imageSettings);let image=null;if(imageSettings!=null&&calculatedImageSettings!=null){if(calculatedImageSettings.excavation!=null){cells=excavateModules(cells,calculatedImageSettings.excavation);}image=/* @__PURE__ */React.createElement(\"image\",{xlinkHref:imageSettings.src,height:calculatedImageSettings.h,width:calculatedImageSettings.w,x:calculatedImageSettings.x+margin,y:calculatedImageSettings.y+margin,preserveAspectRatio:\"none\"});}const fgPath=generatePath(cells,margin);return/* @__PURE__ */React.createElement(\"svg\",__spreadValues({height:size,width:size,viewBox:\"0 0 \".concat(numCells,\" \").concat(numCells)},otherProps),/* @__PURE__ */React.createElement(\"path\",{fill:bgColor,d:\"M0,0 h\".concat(numCells,\"v\").concat(numCells,\"H0z\"),shapeRendering:\"crispEdges\"}),/* @__PURE__ */React.createElement(\"path\",{fill:fgColor,d:fgPath,shapeRendering:\"crispEdges\"}),image);}var QRCode=props=>{const _a=props,{renderAs}=_a,otherProps=__objRest(_a,[\"renderAs\"]);if(renderAs===\"svg\"){return/* @__PURE__ */React.createElement(QRCodeSVG,__spreadValues({},otherProps));}return/* @__PURE__ */React.createElement(QRCodeCanvas,__spreadValues({},otherProps));};export{QRCodeCanvas,QRCodeSVG,QRCode as default};","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","React","useRef","useEffect","useState","qrcodegen","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","size","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","encodeText","text","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","data","seg","makeBytes","minVersion","arguments","length","undefined","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","Math","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","upward","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","map","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","makeNumeric","digits","isNumeric","parseInt","substr","NUMERIC","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","ceilW","ceilH","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","props","_a","level","bgColor","fgColor","style","otherProps","imgSrc","src","_canvas","_image","isImgLoaded","setIsImageLoaded","current","canvas","ctx","getContext","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","createElement","display","onLoad","ref","Fragment","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs","default"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/qrcode.react/lib/esm/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}