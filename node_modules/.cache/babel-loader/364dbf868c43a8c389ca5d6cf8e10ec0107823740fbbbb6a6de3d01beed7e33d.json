{"ast":null,"code":"/* eslint-disable no-console */var warned={};var preWarningFns=[];/**\n * Pre warning enable you to parse content before console.error.\n * Modify to null will prevent warning.\n */export var preMessage=function preMessage(fn){preWarningFns.push(fn);};/**\n * Warning if condition not match.\n * @param valid Condition\n * @param message Warning message\n * @example\n * ```js\n * warning(false, 'some error'); // print some error\n * warning(true, 'some error'); // print nothing\n * warning(1 === 2, 'some error'); // print some error\n * ```\n */export function warning(valid,message){if(process.env.NODE_ENV!=='production'&&!valid&&console!==undefined){var finalMessage=preWarningFns.reduce(function(msg,preMessageFn){return preMessageFn(msg!==null&&msg!==void 0?msg:'','warning');},message);if(finalMessage){console.error(\"Warning: \".concat(finalMessage));}}}/** @see Similar to {@link warning} */export function note(valid,message){if(process.env.NODE_ENV!=='production'&&!valid&&console!==undefined){var finalMessage=preWarningFns.reduce(function(msg,preMessageFn){return preMessageFn(msg!==null&&msg!==void 0?msg:'','note');},message);if(finalMessage){console.warn(\"Note: \".concat(finalMessage));}}}export function resetWarned(){warned={};}export function call(method,valid,message){if(!valid&&!warned[message]){method(false,message);warned[message]=true;}}/** @see Same as {@link warning}, but only warn once for the same message */export function warningOnce(valid,message){call(warning,valid,message);}/** @see Same as {@link warning}, but only warn once for the same message */export function noteOnce(valid,message){call(note,valid,message);}warningOnce.preMessage=preMessage;warningOnce.resetWarned=resetWarned;warningOnce.noteOnce=noteOnce;export default warningOnce;","map":{"version":3,"names":["warned","preWarningFns","preMessage","fn","push","warning","valid","message","process","env","NODE_ENV","console","undefined","finalMessage","reduce","msg","preMessageFn","error","concat","note","warn","resetWarned","call","method","warningOnce","noteOnce"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-util/es/warning.js"],"sourcesContent":["/* eslint-disable no-console */\nvar warned = {};\nvar preWarningFns = [];\n\n/**\n * Pre warning enable you to parse content before console.error.\n * Modify to null will prevent warning.\n */\nexport var preMessage = function preMessage(fn) {\n  preWarningFns.push(fn);\n};\n\n/**\n * Warning if condition not match.\n * @param valid Condition\n * @param message Warning message\n * @example\n * ```js\n * warning(false, 'some error'); // print some error\n * warning(true, 'some error'); // print nothing\n * warning(1 === 2, 'some error'); // print some error\n * ```\n */\nexport function warning(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'warning');\n    }, message);\n    if (finalMessage) {\n      console.error(\"Warning: \".concat(finalMessage));\n    }\n  }\n}\n\n/** @see Similar to {@link warning} */\nexport function note(valid, message) {\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    var finalMessage = preWarningFns.reduce(function (msg, preMessageFn) {\n      return preMessageFn(msg !== null && msg !== void 0 ? msg : '', 'note');\n    }, message);\n    if (finalMessage) {\n      console.warn(\"Note: \".concat(finalMessage));\n    }\n  }\n}\nexport function resetWarned() {\n  warned = {};\n}\nexport function call(method, valid, message) {\n  if (!valid && !warned[message]) {\n    method(false, message);\n    warned[message] = true;\n  }\n}\n\n/** @see Same as {@link warning}, but only warn once for the same message */\nexport function warningOnce(valid, message) {\n  call(warning, valid, message);\n}\n\n/** @see Same as {@link warning}, but only warn once for the same message */\nexport function noteOnce(valid, message) {\n  call(note, valid, message);\n}\nwarningOnce.preMessage = preMessage;\nwarningOnce.resetWarned = resetWarned;\nwarningOnce.noteOnce = noteOnce;\nexport default warningOnce;"],"mappings":"AAAA,+BACA,GAAI,CAAAA,MAAM,CAAG,CAAC,CAAC,CACf,GAAI,CAAAC,aAAa,CAAG,EAAE,CAEtB;AACA;AACA;AACA,GACA,MAAO,IAAI,CAAAC,UAAU,CAAG,QAAS,CAAAA,UAAUA,CAACC,EAAE,CAAE,CAC9CF,aAAa,CAACG,IAAI,CAACD,EAAE,CAAC,CACxB,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAE,OAAOA,CAACC,KAAK,CAAEC,OAAO,CAAE,CACtC,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAI,CAACJ,KAAK,EAAIK,OAAO,GAAKC,SAAS,CAAE,CAC5E,GAAI,CAAAC,YAAY,CAAGZ,aAAa,CAACa,MAAM,CAAC,SAAUC,GAAG,CAAEC,YAAY,CAAE,CACnE,MAAO,CAAAA,YAAY,CAACD,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,IAAK,EAAC,CAAGA,GAAG,CAAG,EAAE,CAAE,SAAS,CAAC,CAC3E,CAAC,CAAER,OAAO,CAAC,CACX,GAAIM,YAAY,CAAE,CAChBF,OAAO,CAACM,KAAK,CAAC,WAAW,CAACC,MAAM,CAACL,YAAY,CAAC,CAAC,CACjD,CACF,CACF,CAEA,sCACA,MAAO,SAAS,CAAAM,IAAIA,CAACb,KAAK,CAAEC,OAAO,CAAE,CACnC,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,EAAI,CAACJ,KAAK,EAAIK,OAAO,GAAKC,SAAS,CAAE,CAC5E,GAAI,CAAAC,YAAY,CAAGZ,aAAa,CAACa,MAAM,CAAC,SAAUC,GAAG,CAAEC,YAAY,CAAE,CACnE,MAAO,CAAAA,YAAY,CAACD,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,IAAK,EAAC,CAAGA,GAAG,CAAG,EAAE,CAAE,MAAM,CAAC,CACxE,CAAC,CAAER,OAAO,CAAC,CACX,GAAIM,YAAY,CAAE,CAChBF,OAAO,CAACS,IAAI,CAAC,QAAQ,CAACF,MAAM,CAACL,YAAY,CAAC,CAAC,CAC7C,CACF,CACF,CACA,MAAO,SAAS,CAAAQ,WAAWA,CAAA,CAAG,CAC5BrB,MAAM,CAAG,CAAC,CAAC,CACb,CACA,MAAO,SAAS,CAAAsB,IAAIA,CAACC,MAAM,CAAEjB,KAAK,CAAEC,OAAO,CAAE,CAC3C,GAAI,CAACD,KAAK,EAAI,CAACN,MAAM,CAACO,OAAO,CAAC,CAAE,CAC9BgB,MAAM,CAAC,KAAK,CAAEhB,OAAO,CAAC,CACtBP,MAAM,CAACO,OAAO,CAAC,CAAG,IAAI,CACxB,CACF,CAEA,4EACA,MAAO,SAAS,CAAAiB,WAAWA,CAAClB,KAAK,CAAEC,OAAO,CAAE,CAC1Ce,IAAI,CAACjB,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAC,CAC/B,CAEA,4EACA,MAAO,SAAS,CAAAkB,QAAQA,CAACnB,KAAK,CAAEC,OAAO,CAAE,CACvCe,IAAI,CAACH,IAAI,CAAEb,KAAK,CAAEC,OAAO,CAAC,CAC5B,CACAiB,WAAW,CAACtB,UAAU,CAAGA,UAAU,CACnCsB,WAAW,CAACH,WAAW,CAAGA,WAAW,CACrCG,WAAW,CAACC,QAAQ,CAAGA,QAAQ,CAC/B,cAAe,CAAAD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}