{"ast":null,"code":"import React from'react';import{useToken}from'../theme/internal';export const responsiveArray=['xxl','xl','lg','md','sm','xs'];const getResponsiveMap=token=>({xs:\"(max-width: \".concat(token.screenXSMax,\"px)\"),sm:\"(min-width: \".concat(token.screenSM,\"px)\"),md:\"(min-width: \".concat(token.screenMD,\"px)\"),lg:\"(min-width: \".concat(token.screenLG,\"px)\"),xl:\"(min-width: \".concat(token.screenXL,\"px)\"),xxl:\"(min-width: \".concat(token.screenXXL,\"px)\")});/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */const validateBreakpoints=token=>{const indexableToken=token;const revBreakpoints=[].concat(responsiveArray).reverse();revBreakpoints.forEach((breakpoint,i)=>{const breakpointUpper=breakpoint.toUpperCase();const screenMin=\"screen\".concat(breakpointUpper,\"Min\");const screen=\"screen\".concat(breakpointUpper);if(!(indexableToken[screenMin]<=indexableToken[screen])){throw new Error(\"\".concat(screenMin,\"<=\").concat(screen,\" fails : !(\").concat(indexableToken[screenMin],\"<=\").concat(indexableToken[screen],\")\"));}if(i<revBreakpoints.length-1){const screenMax=\"screen\".concat(breakpointUpper,\"Max\");if(!(indexableToken[screen]<=indexableToken[screenMax])){throw new Error(\"\".concat(screen,\"<=\").concat(screenMax,\" fails : !(\").concat(indexableToken[screen],\"<=\").concat(indexableToken[screenMax],\")\"));}const nextBreakpointUpperMin=revBreakpoints[i+1].toUpperCase();const nextScreenMin=\"screen\".concat(nextBreakpointUpperMin,\"Min\");if(!(indexableToken[screenMax]<=indexableToken[nextScreenMin])){throw new Error(\"\".concat(screenMax,\"<=\").concat(nextScreenMin,\" fails : !(\").concat(indexableToken[screenMax],\"<=\").concat(indexableToken[nextScreenMin],\")\"));}}});return token;};export default function useResponsiveObserver(){const[,token]=useToken();const responsiveMap=getResponsiveMap(validateBreakpoints(token));// To avoid repeat create instance, we add `useMemo` here.\nreturn React.useMemo(()=>{const subscribers=new Map();let subUid=-1;let screens={};return{matchHandlers:{},dispatch(pointMap){screens=pointMap;subscribers.forEach(func=>func(screens));return subscribers.size>=1;},subscribe(func){if(!subscribers.size)this.register();subUid+=1;subscribers.set(subUid,func);func(screens);return subUid;},unsubscribe(paramToken){subscribers.delete(paramToken);if(!subscribers.size)this.unregister();},unregister(){Object.keys(responsiveMap).forEach(screen=>{const matchMediaQuery=responsiveMap[screen];const handler=this.matchHandlers[matchMediaQuery];handler===null||handler===void 0?void 0:handler.mql.removeListener(handler===null||handler===void 0?void 0:handler.listener);});subscribers.clear();},register(){Object.keys(responsiveMap).forEach(screen=>{const matchMediaQuery=responsiveMap[screen];const listener=_ref=>{let{matches}=_ref;this.dispatch(Object.assign(Object.assign({},screens),{[screen]:matches}));};const mql=window.matchMedia(matchMediaQuery);mql.addListener(listener);this.matchHandlers[matchMediaQuery]={mql,listener};listener(mql);});},responsiveMap};},[token]);}export const matchScreen=(screens,screenSizes)=>{if(screenSizes&&typeof screenSizes==='object'){for(let i=0;i<responsiveArray.length;i++){const breakpoint=responsiveArray[i];if(screens[breakpoint]&&screenSizes[breakpoint]!==undefined){return screenSizes[breakpoint];}}}};","map":{"version":3,"names":["React","useToken","responsiveArray","getResponsiveMap","token","xs","concat","screenXSMax","sm","screenSM","md","screenMD","lg","screenLG","xl","screenXL","xxl","screenXXL","validateBreakpoints","indexableToken","revBreakpoints","reverse","forEach","breakpoint","i","breakpointUpper","toUpperCase","screenMin","screen","Error","length","screenMax","nextBreakpointUpperMin","nextScreenMin","useResponsiveObserver","responsiveMap","useMemo","subscribers","Map","subUid","screens","matchHandlers","dispatch","pointMap","func","size","subscribe","register","set","unsubscribe","paramToken","delete","unregister","Object","keys","matchMediaQuery","handler","mql","removeListener","listener","clear","_ref","matches","assign","window","matchMedia","addListener","matchScreen","screenSizes","undefined"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/_util/responsiveObserver.js"],"sourcesContent":["import React from 'react';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}\nexport const matchScreen = (screens, screenSizes) => {\n  if (screenSizes && typeof screenSizes === 'object') {\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      if (screens[breakpoint] && screenSizes[breakpoint] !== undefined) {\n        return screenSizes[breakpoint];\n      }\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}