{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _typeof from\"@babel/runtime/helpers/esm/typeof\";import _slicedToArray from\"@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"prefixCls\",\"className\",\"style\",\"min\",\"max\",\"step\",\"defaultValue\",\"value\",\"disabled\",\"readOnly\",\"upHandler\",\"downHandler\",\"keyboard\",\"changeOnWheel\",\"controls\",\"classNames\",\"stringMode\",\"parser\",\"formatter\",\"precision\",\"decimalSeparator\",\"onChange\",\"onInput\",\"onPressEnter\",\"onStep\",\"changeOnBlur\"],_excluded2=[\"disabled\",\"style\",\"prefixCls\",\"value\",\"prefix\",\"suffix\",\"addonBefore\",\"addonAfter\",\"className\",\"classNames\"];import getMiniDecimal,{getNumberPrecision,num2str,toFixed,validateNumber}from'@rc-component/mini-decimal';import clsx from'classnames';import{BaseInput}from'rc-input';import{useLayoutUpdateEffect}from\"rc-util/es/hooks/useLayoutEffect\";import{composeRef}from\"rc-util/es/ref\";import*as React from'react';import useCursor from\"./hooks/useCursor\";import StepHandler from\"./StepHandler\";import{getDecupleSteps}from\"./utils/numberUtil\";import{triggerFocus}from\"rc-input/es/utils/commonUtils\";import useFrame from\"./hooks/useFrame\";/**\n * We support `stringMode` which need handle correct type when user call in onChange\n * format max or min value\n * 1. if isInvalid return null\n * 2. if precision is undefined, return decimal\n * 3. format with precision\n *    I. if max > 0, round down with precision. Example: max= 3.5, precision=0  afterFormat: 3\n *    II. if max < 0, round up with precision. Example: max= -3.5, precision=0  afterFormat: -4\n *    III. if min > 0, round up with precision. Example: min= 3.5, precision=0  afterFormat: 4\n *    IV. if min < 0, round down with precision. Example: max= -3.5, precision=0  afterFormat: -3\n */var getDecimalValue=function getDecimalValue(stringMode,decimalValue){if(stringMode||decimalValue.isEmpty()){return decimalValue.toString();}return decimalValue.toNumber();};var getDecimalIfValidate=function getDecimalIfValidate(value){var decimal=getMiniDecimal(value);return decimal.isInvalidate()?null:decimal;};var InternalInputNumber=/*#__PURE__*/React.forwardRef(function(props,ref){var _clsx;var _props$prefixCls=props.prefixCls,prefixCls=_props$prefixCls===void 0?'rc-input-number':_props$prefixCls,className=props.className,style=props.style,min=props.min,max=props.max,_props$step=props.step,step=_props$step===void 0?1:_props$step,defaultValue=props.defaultValue,value=props.value,disabled=props.disabled,readOnly=props.readOnly,upHandler=props.upHandler,downHandler=props.downHandler,keyboard=props.keyboard,_props$changeOnWheel=props.changeOnWheel,changeOnWheel=_props$changeOnWheel===void 0?false:_props$changeOnWheel,_props$controls=props.controls,controls=_props$controls===void 0?true:_props$controls,classNames=props.classNames,stringMode=props.stringMode,parser=props.parser,formatter=props.formatter,precision=props.precision,decimalSeparator=props.decimalSeparator,onChange=props.onChange,onInput=props.onInput,onPressEnter=props.onPressEnter,onStep=props.onStep,_props$changeOnBlur=props.changeOnBlur,changeOnBlur=_props$changeOnBlur===void 0?true:_props$changeOnBlur,inputProps=_objectWithoutProperties(props,_excluded);var inputClassName=\"\".concat(prefixCls,\"-input\");var inputRef=React.useRef(null);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),focus=_React$useState2[0],setFocus=_React$useState2[1];var userTypingRef=React.useRef(false);var compositionRef=React.useRef(false);var shiftKeyRef=React.useRef(false);// ============================ Value =============================\n// Real value control\nvar _React$useState3=React.useState(function(){return getMiniDecimal(value!==null&&value!==void 0?value:defaultValue);}),_React$useState4=_slicedToArray(_React$useState3,2),decimalValue=_React$useState4[0],setDecimalValue=_React$useState4[1];function setUncontrolledDecimalValue(newDecimal){if(value===undefined){setDecimalValue(newDecimal);}}// ====================== Parser & Formatter ======================\n/**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */var getPrecision=React.useCallback(function(numStr,userTyping){if(userTyping){return undefined;}if(precision>=0){return precision;}return Math.max(getNumberPrecision(numStr),getNumberPrecision(step));},[precision,step]);// >>> Parser\nvar mergedParser=React.useCallback(function(num){var numStr=String(num);if(parser){return parser(numStr);}var parsedStr=numStr;if(decimalSeparator){parsedStr=parsedStr.replace(decimalSeparator,'.');}// [Legacy] We still support auto convert `$ 123,456` to `123456`\nreturn parsedStr.replace(/[^\\w.-]+/g,'');},[parser,decimalSeparator]);// >>> Formatter\nvar inputValueRef=React.useRef('');var mergedFormatter=React.useCallback(function(number,userTyping){if(formatter){return formatter(number,{userTyping:userTyping,input:String(inputValueRef.current)});}var str=typeof number==='number'?num2str(number):number;// User typing will not auto format with precision directly\nif(!userTyping){var mergedPrecision=getPrecision(str,userTyping);if(validateNumber(str)&&(decimalSeparator||mergedPrecision>=0)){// Separator\nvar separatorStr=decimalSeparator||'.';str=toFixed(str,separatorStr,mergedPrecision);}}return str;},[formatter,getPrecision,decimalSeparator]);// ========================== InputValue ==========================\n/**\n   * Input text value control\n   *\n   * User can not update input content directly. It updates with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */var _React$useState5=React.useState(function(){var initValue=defaultValue!==null&&defaultValue!==void 0?defaultValue:value;if(decimalValue.isInvalidate()&&['string','number'].includes(_typeof(initValue))){return Number.isNaN(initValue)?'':initValue;}return mergedFormatter(decimalValue.toString(),false);}),_React$useState6=_slicedToArray(_React$useState5,2),inputValue=_React$useState6[0],setInternalInputValue=_React$useState6[1];inputValueRef.current=inputValue;// Should always be string\nfunction setInputValue(newValue,userTyping){setInternalInputValue(mergedFormatter(// Invalidate number is sometime passed by external control, we should let it go\n// Otherwise is controlled by internal interactive logic which check by userTyping\n// You can ref 'show limited value when input is not focused' test for more info.\nnewValue.isInvalidate()?newValue.toString(false):newValue.toString(!userTyping),userTyping));}// >>> Max & Min limit\nvar maxDecimal=React.useMemo(function(){return getDecimalIfValidate(max);},[max,precision]);var minDecimal=React.useMemo(function(){return getDecimalIfValidate(min);},[min,precision]);var upDisabled=React.useMemo(function(){if(!maxDecimal||!decimalValue||decimalValue.isInvalidate()){return false;}return maxDecimal.lessEquals(decimalValue);},[maxDecimal,decimalValue]);var downDisabled=React.useMemo(function(){if(!minDecimal||!decimalValue||decimalValue.isInvalidate()){return false;}return decimalValue.lessEquals(minDecimal);},[minDecimal,decimalValue]);// Cursor controller\nvar _useCursor=useCursor(inputRef.current,focus),_useCursor2=_slicedToArray(_useCursor,2),recordCursor=_useCursor2[0],restoreCursor=_useCursor2[1];// ============================= Data =============================\n/**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */var getRangeValue=function getRangeValue(target){// target > max\nif(maxDecimal&&!target.lessEquals(maxDecimal)){return maxDecimal;}// target < min\nif(minDecimal&&!minDecimal.lessEquals(target)){return minDecimal;}return null;};/**\n   * Check value is in [min, max] range\n   */var isInRange=function isInRange(target){return!getRangeValue(target);};/**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */var triggerValueUpdate=function triggerValueUpdate(newValue,userTyping){var updateValue=newValue;var isRangeValidate=isInRange(updateValue)||updateValue.isEmpty();// Skip align value when trigger value is empty.\n// We just trigger onChange(null)\n// This should not block user typing\nif(!updateValue.isEmpty()&&!userTyping){// Revert value in range if needed\nupdateValue=getRangeValue(updateValue)||updateValue;isRangeValidate=true;}if(!readOnly&&!disabled&&isRangeValidate){var numStr=updateValue.toString();var mergedPrecision=getPrecision(numStr,userTyping);if(mergedPrecision>=0){updateValue=getMiniDecimal(toFixed(numStr,'.',mergedPrecision));// When to fixed. The value may out of min & max range.\n// 4 in [0, 3.8] => 3.8 => 4 (toFixed)\nif(!isInRange(updateValue)){updateValue=getMiniDecimal(toFixed(numStr,'.',mergedPrecision,true));}}// Trigger event\nif(!updateValue.equals(decimalValue)){setUncontrolledDecimalValue(updateValue);onChange===null||onChange===void 0||onChange(updateValue.isEmpty()?null:getDecimalValue(stringMode,updateValue));// Reformat input if value is not controlled\nif(value===undefined){setInputValue(updateValue,userTyping);}}return updateValue;}return decimalValue;};// ========================== User Input ==========================\nvar onNextPromise=useFrame();// >>> Collect input value\nvar collectInputValue=function collectInputValue(inputStr){recordCursor();// Update inputValue in case input can not parse as number\n// Refresh ref value immediately since it may used by formatter\ninputValueRef.current=inputStr;setInternalInputValue(inputStr);// Parse number\nif(!compositionRef.current){var finalValue=mergedParser(inputStr);var finalDecimal=getMiniDecimal(finalValue);if(!finalDecimal.isNaN()){triggerValueUpdate(finalDecimal,true);}}// Trigger onInput later to let user customize value if they want to handle something after onChange\nonInput===null||onInput===void 0||onInput(inputStr);// optimize for chinese input experience\n// https://github.com/ant-design/ant-design/issues/8196\nonNextPromise(function(){var nextInputStr=inputStr;if(!parser){nextInputStr=inputStr.replace(/。/g,'.');}if(nextInputStr!==inputStr){collectInputValue(nextInputStr);}});};// >>> Composition\nvar onCompositionStart=function onCompositionStart(){compositionRef.current=true;};var onCompositionEnd=function onCompositionEnd(){compositionRef.current=false;collectInputValue(inputRef.current.value);};// >>> Input\nvar onInternalInput=function onInternalInput(e){collectInputValue(e.target.value);};// ============================= Step =============================\nvar onInternalStep=function onInternalStep(up){var _inputRef$current;// Ignore step since out of range\nif(up&&upDisabled||!up&&downDisabled){return;}// Clear typing status since it may be caused by up & down key.\n// We should sync with input value.\nuserTypingRef.current=false;var stepDecimal=getMiniDecimal(shiftKeyRef.current?getDecupleSteps(step):step);if(!up){stepDecimal=stepDecimal.negate();}var target=(decimalValue||getMiniDecimal(0)).add(stepDecimal.toString());var updatedValue=triggerValueUpdate(target,false);onStep===null||onStep===void 0||onStep(getDecimalValue(stringMode,updatedValue),{offset:shiftKeyRef.current?getDecupleSteps(step):step,type:up?'up':'down'});(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0||_inputRef$current.focus();};// ============================ Flush =============================\n/**\n   * Flush current input content to trigger value change & re-formatter input if needed.\n   * This will always flush input value for update.\n   * If it's invalidate, will fallback to last validate value.\n   */var flushInputValue=function flushInputValue(userTyping){var parsedValue=getMiniDecimal(mergedParser(inputValue));var formatValue=parsedValue;if(!parsedValue.isNaN()){// Only validate value or empty value can be re-fill to inputValue\n// Reassign the formatValue within ranged of trigger control\nformatValue=triggerValueUpdate(parsedValue,userTyping);}else{formatValue=triggerValueUpdate(decimalValue,userTyping);}if(value!==undefined){// Reset back with controlled value first\nsetInputValue(decimalValue,false);}else if(!formatValue.isNaN()){// Reset input back since no validate value\nsetInputValue(formatValue,false);}};// Solve the issue of the event triggering sequence when entering numbers in chinese input (Safari)\nvar onBeforeInput=function onBeforeInput(){userTypingRef.current=true;};var onKeyDown=function onKeyDown(event){var key=event.key,shiftKey=event.shiftKey;userTypingRef.current=true;shiftKeyRef.current=shiftKey;if(key==='Enter'){if(!compositionRef.current){userTypingRef.current=false;}flushInputValue(false);onPressEnter===null||onPressEnter===void 0||onPressEnter(event);}if(keyboard===false){return;}// Do step\nif(!compositionRef.current&&['Up','ArrowUp','Down','ArrowDown'].includes(key)){onInternalStep(key==='Up'||key==='ArrowUp');event.preventDefault();}};var onKeyUp=function onKeyUp(){userTypingRef.current=false;shiftKeyRef.current=false;};React.useEffect(function(){if(changeOnWheel&&focus){var onWheel=function onWheel(event){// moving mouse wheel rises wheel event with deltaY < 0\n// scroll value grows from top to bottom, as screen Y coordinate\nonInternalStep(event.deltaY<0);event.preventDefault();};var input=inputRef.current;if(input){// React onWheel is passive and we can't preventDefault() in it.\n// That's why we should subscribe with DOM listener\n// https://stackoverflow.com/questions/63663025/react-onwheel-handler-cant-preventdefault-because-its-a-passive-event-listenev\ninput.addEventListener('wheel',onWheel,{passive:false});return function(){return input.removeEventListener('wheel',onWheel);};}}});// >>> Focus & Blur\nvar onBlur=function onBlur(){if(changeOnBlur){flushInputValue(false);}setFocus(false);userTypingRef.current=false;};// ========================== Controlled ==========================\n// Input by precision & formatter\nuseLayoutUpdateEffect(function(){if(!decimalValue.isInvalidate()){setInputValue(decimalValue,false);}},[precision,formatter]);// Input by value\nuseLayoutUpdateEffect(function(){var newValue=getMiniDecimal(value);setDecimalValue(newValue);var currentParsedValue=getMiniDecimal(mergedParser(inputValue));// When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n// But let it go if user set `formatter`\nif(!newValue.equals(currentParsedValue)||!userTypingRef.current||formatter){// Update value as effect\nsetInputValue(newValue,userTypingRef.current);}},[value]);// ============================ Cursor ============================\nuseLayoutUpdateEffect(function(){if(formatter){restoreCursor();}},[inputValue]);// ============================ Render ============================\nreturn/*#__PURE__*/React.createElement(\"div\",{className:clsx(prefixCls,className,(_clsx={},_defineProperty(_clsx,\"\".concat(prefixCls,\"-focused\"),focus),_defineProperty(_clsx,\"\".concat(prefixCls,\"-disabled\"),disabled),_defineProperty(_clsx,\"\".concat(prefixCls,\"-readonly\"),readOnly),_defineProperty(_clsx,\"\".concat(prefixCls,\"-not-a-number\"),decimalValue.isNaN()),_defineProperty(_clsx,\"\".concat(prefixCls,\"-out-of-range\"),!decimalValue.isInvalidate()&&!isInRange(decimalValue)),_clsx)),style:style,onFocus:function onFocus(){setFocus(true);},onBlur:onBlur,onKeyDown:onKeyDown,onKeyUp:onKeyUp,onCompositionStart:onCompositionStart,onCompositionEnd:onCompositionEnd,onBeforeInput:onBeforeInput},controls&&/*#__PURE__*/React.createElement(StepHandler,{prefixCls:prefixCls,upNode:upHandler,downNode:downHandler,upDisabled:upDisabled,downDisabled:downDisabled,onStep:onInternalStep}),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(inputClassName,\"-wrap\")},/*#__PURE__*/React.createElement(\"input\",_extends({autoComplete:\"off\",role:\"spinbutton\",\"aria-valuemin\":min,\"aria-valuemax\":max,\"aria-valuenow\":decimalValue.isInvalidate()?null:decimalValue.toString(),step:step},inputProps,{ref:composeRef(inputRef,ref),className:inputClassName,value:inputValue,onChange:onInternalInput,disabled:disabled,readOnly:readOnly}))));});var InputNumber=/*#__PURE__*/React.forwardRef(function(props,ref){var disabled=props.disabled,style=props.style,prefixCls=props.prefixCls,value=props.value,prefix=props.prefix,suffix=props.suffix,addonBefore=props.addonBefore,addonAfter=props.addonAfter,className=props.className,classNames=props.classNames,rest=_objectWithoutProperties(props,_excluded2);var inputFocusRef=React.useRef(null);var focus=function focus(option){if(inputFocusRef.current){triggerFocus(inputFocusRef.current,option);}};return/*#__PURE__*/React.createElement(BaseInput,{className:className,triggerFocus:focus,prefixCls:prefixCls,value:value,disabled:disabled,style:style,prefix:prefix,suffix:suffix,addonAfter:addonAfter,addonBefore:addonBefore,classNames:classNames,components:{affixWrapper:'div',groupWrapper:'div',wrapper:'div',groupAddon:'div'}},/*#__PURE__*/React.createElement(InternalInputNumber,_extends({prefixCls:prefixCls,disabled:disabled,ref:composeRef(inputFocusRef,ref),className:classNames===null||classNames===void 0?void 0:classNames.input},rest)));});InputNumber.displayName='InputNumber';export default InputNumber;","map":{"version":3,"names":["_extends","_defineProperty","_typeof","_slicedToArray","_objectWithoutProperties","_excluded","_excluded2","getMiniDecimal","getNumberPrecision","num2str","toFixed","validateNumber","clsx","BaseInput","useLayoutUpdateEffect","composeRef","React","useCursor","StepHandler","getDecupleSteps","triggerFocus","useFrame","getDecimalValue","stringMode","decimalValue","isEmpty","toString","toNumber","getDecimalIfValidate","value","decimal","isInvalidate","InternalInputNumber","forwardRef","props","ref","_clsx","_props$prefixCls","prefixCls","className","style","min","max","_props$step","step","defaultValue","disabled","readOnly","upHandler","downHandler","keyboard","_props$changeOnWheel","changeOnWheel","_props$controls","controls","classNames","parser","formatter","precision","decimalSeparator","onChange","onInput","onPressEnter","onStep","_props$changeOnBlur","changeOnBlur","inputProps","inputClassName","concat","inputRef","useRef","_React$useState","useState","_React$useState2","focus","setFocus","userTypingRef","compositionRef","shiftKeyRef","_React$useState3","_React$useState4","setDecimalValue","setUncontrolledDecimalValue","newDecimal","undefined","getPrecision","useCallback","numStr","userTyping","Math","mergedParser","num","String","parsedStr","replace","inputValueRef","mergedFormatter","number","input","current","str","mergedPrecision","separatorStr","_React$useState5","initValue","includes","Number","isNaN","_React$useState6","inputValue","setInternalInputValue","setInputValue","newValue","maxDecimal","useMemo","minDecimal","upDisabled","lessEquals","downDisabled","_useCursor","_useCursor2","recordCursor","restoreCursor","getRangeValue","target","isInRange","triggerValueUpdate","updateValue","isRangeValidate","equals","onNextPromise","collectInputValue","inputStr","finalValue","finalDecimal","nextInputStr","onCompositionStart","onCompositionEnd","onInternalInput","e","onInternalStep","up","_inputRef$current","stepDecimal","negate","add","updatedValue","offset","type","flushInputValue","parsedValue","formatValue","onBeforeInput","onKeyDown","event","key","shiftKey","preventDefault","onKeyUp","useEffect","onWheel","deltaY","addEventListener","passive","removeEventListener","onBlur","currentParsedValue","createElement","onFocus","upNode","downNode","autoComplete","role","InputNumber","prefix","suffix","addonBefore","addonAfter","rest","inputFocusRef","option","components","affixWrapper","groupWrapper","wrapper","groupAddon","displayName"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-input-number/es/InputNumber.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"min\", \"max\", \"step\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"upHandler\", \"downHandler\", \"keyboard\", \"changeOnWheel\", \"controls\", \"classNames\", \"stringMode\", \"parser\", \"formatter\", \"precision\", \"decimalSeparator\", \"onChange\", \"onInput\", \"onPressEnter\", \"onStep\", \"changeOnBlur\"],\n  _excluded2 = [\"disabled\", \"style\", \"prefixCls\", \"value\", \"prefix\", \"suffix\", \"addonBefore\", \"addonAfter\", \"className\", \"classNames\"];\nimport getMiniDecimal, { getNumberPrecision, num2str, toFixed, validateNumber } from '@rc-component/mini-decimal';\nimport clsx from 'classnames';\nimport { BaseInput } from 'rc-input';\nimport { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport useCursor from \"./hooks/useCursor\";\nimport StepHandler from \"./StepHandler\";\nimport { getDecupleSteps } from \"./utils/numberUtil\";\nimport { triggerFocus } from \"rc-input/es/utils/commonUtils\";\nimport useFrame from \"./hooks/useFrame\";\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n * format max or min value\n * 1. if isInvalid return null\n * 2. if precision is undefined, return decimal\n * 3. format with precision\n *    I. if max > 0, round down with precision. Example: max= 3.5, precision=0  afterFormat: 3\n *    II. if max < 0, round up with precision. Example: max= -3.5, precision=0  afterFormat: -4\n *    III. if min > 0, round up with precision. Example: min= 3.5, precision=0  afterFormat: 4\n *    IV. if min < 0, round down with precision. Example: max= -3.5, precision=0  afterFormat: -3\n */\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n  return decimalValue.toNumber();\n};\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\nvar InternalInputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _clsx;\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-input-number' : _props$prefixCls,\n    className = props.className,\n    style = props.style,\n    min = props.min,\n    max = props.max,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    defaultValue = props.defaultValue,\n    value = props.value,\n    disabled = props.disabled,\n    readOnly = props.readOnly,\n    upHandler = props.upHandler,\n    downHandler = props.downHandler,\n    keyboard = props.keyboard,\n    _props$changeOnWheel = props.changeOnWheel,\n    changeOnWheel = _props$changeOnWheel === void 0 ? false : _props$changeOnWheel,\n    _props$controls = props.controls,\n    controls = _props$controls === void 0 ? true : _props$controls,\n    classNames = props.classNames,\n    stringMode = props.stringMode,\n    parser = props.parser,\n    formatter = props.formatter,\n    precision = props.precision,\n    decimalSeparator = props.decimalSeparator,\n    onChange = props.onChange,\n    onInput = props.onInput,\n    onPressEnter = props.onPressEnter,\n    onStep = props.onStep,\n    _props$changeOnBlur = props.changeOnBlur,\n    changeOnBlur = _props$changeOnBlur === void 0 ? true : _props$changeOnBlur,\n    inputProps = _objectWithoutProperties(props, _excluded);\n  var inputClassName = \"\".concat(prefixCls, \"-input\");\n  var inputRef = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focus = _React$useState2[0],\n    setFocus = _React$useState2[1];\n  var userTypingRef = React.useRef(false);\n  var compositionRef = React.useRef(false);\n  var shiftKeyRef = React.useRef(false);\n\n  // ============================ Value =============================\n  // Real value control\n  var _React$useState3 = React.useState(function () {\n      return getMiniDecimal(value !== null && value !== void 0 ? value : defaultValue);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    decimalValue = _React$useState4[0],\n    setDecimalValue = _React$useState4[1];\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  }\n\n  // ====================== Parser & Formatter ======================\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n  var getPrecision = React.useCallback(function (numStr, userTyping) {\n    if (userTyping) {\n      return undefined;\n    }\n    if (precision >= 0) {\n      return precision;\n    }\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]);\n\n  // >>> Parser\n  var mergedParser = React.useCallback(function (num) {\n    var numStr = String(num);\n    if (parser) {\n      return parser(numStr);\n    }\n    var parsedStr = numStr;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, '.');\n    }\n\n    // [Legacy] We still support auto convert `$ 123,456` to `123456`\n    return parsedStr.replace(/[^\\w.-]+/g, '');\n  }, [parser, decimalSeparator]);\n\n  // >>> Formatter\n  var inputValueRef = React.useRef('');\n  var mergedFormatter = React.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number, {\n        userTyping: userTyping,\n        input: String(inputValueRef.current)\n      });\n    }\n    var str = typeof number === 'number' ? num2str(number) : number;\n\n    // User typing will not auto format with precision directly\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || '.';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]);\n\n  // ========================== InputValue ==========================\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It updates with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n  var _React$useState5 = React.useState(function () {\n      var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n      if (decimalValue.isInvalidate() && ['string', 'number'].includes(_typeof(initValue))) {\n        return Number.isNaN(initValue) ? '' : initValue;\n      }\n      return mergedFormatter(decimalValue.toString(), false);\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    inputValue = _React$useState6[0],\n    setInternalInputValue = _React$useState6[1];\n  inputValueRef.current = inputValue;\n\n  // Should always be string\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter(\n    // Invalidate number is sometime passed by external control, we should let it go\n    // Otherwise is controlled by internal interactive logic which check by userTyping\n    // You can ref 'show limited value when input is not focused' test for more info.\n    newValue.isInvalidate() ? newValue.toString(false) : newValue.toString(!userTyping), userTyping));\n  }\n\n  // >>> Max & Min limit\n  var maxDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max, precision]);\n  var minDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min, precision]);\n  var upDisabled = React.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = React.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]);\n\n  // Cursor controller\n  var _useCursor = useCursor(inputRef.current, focus),\n    _useCursor2 = _slicedToArray(_useCursor, 2),\n    recordCursor = _useCursor2[0],\n    restoreCursor = _useCursor2[1];\n\n  // ============================= Data =============================\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    }\n\n    // target < min\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n    return null;\n  };\n\n  /**\n   * Check value is in [min, max] range\n   */\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue;\n    var isRangeValidate = isInRange(updateValue) || updateValue.isEmpty();\n\n    // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n    // This should not block user typing\n    if (!updateValue.isEmpty() && !userTyping) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n      isRangeValidate = true;\n    }\n    if (!readOnly && !disabled && isRangeValidate) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision));\n\n        // When to fixed. The value may out of min & max range.\n        // 4 in [0, 3.8] => 3.8 => 4 (toFixed)\n        if (!isInRange(updateValue)) {\n          updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision, true));\n        }\n      }\n\n      // Trigger event\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 || onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue));\n\n        // Reformat input if value is not controlled\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n      return updateValue;\n    }\n    return decimalValue;\n  };\n\n  // ========================== User Input ==========================\n  var onNextPromise = useFrame();\n\n  // >>> Collect input value\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor();\n\n    // Update inputValue in case input can not parse as number\n    // Refresh ref value immediately since it may used by formatter\n    inputValueRef.current = inputStr;\n    setInternalInputValue(inputStr);\n\n    // Parse number\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    }\n\n    // Trigger onInput later to let user customize value if they want to handle something after onChange\n    onInput === null || onInput === void 0 || onInput(inputStr);\n\n    // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n    onNextPromise(function () {\n      var nextInputStr = inputStr;\n      if (!parser) {\n        nextInputStr = inputStr.replace(/。/g, '.');\n      }\n      if (nextInputStr !== inputStr) {\n        collectInputValue(nextInputStr);\n      }\n    });\n  };\n\n  // >>> Composition\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  };\n\n  // >>> Input\n  var onInternalInput = function onInternalInput(e) {\n    collectInputValue(e.target.value);\n  };\n\n  // ============================= Step =============================\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current;\n    // Ignore step since out of range\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    }\n\n    // Clear typing status since it may be caused by up & down key.\n    // We should sync with input value.\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(shiftKeyRef.current ? getDecupleSteps(step) : step);\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 || onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: shiftKeyRef.current ? getDecupleSteps(step) : step,\n      type: up ? 'up' : 'down'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 || _inputRef$current.focus();\n  };\n\n  // ============================ Flush =============================\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed.\n   * This will always flush input value for update.\n   * If it's invalidate, will fallback to last validate value.\n   */\n  var flushInputValue = function flushInputValue(userTyping) {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue = parsedValue;\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, userTyping);\n    } else {\n      formatValue = triggerValueUpdate(decimalValue, userTyping);\n    }\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  // Solve the issue of the event triggering sequence when entering numbers in chinese input (Safari)\n  var onBeforeInput = function onBeforeInput() {\n    userTypingRef.current = true;\n  };\n  var onKeyDown = function onKeyDown(event) {\n    var key = event.key,\n      shiftKey = event.shiftKey;\n    userTypingRef.current = true;\n    shiftKeyRef.current = shiftKey;\n    if (key === 'Enter') {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n      flushInputValue(false);\n      onPressEnter === null || onPressEnter === void 0 || onPressEnter(event);\n    }\n    if (keyboard === false) {\n      return;\n    }\n\n    // Do step\n    if (!compositionRef.current && ['Up', 'ArrowUp', 'Down', 'ArrowDown'].includes(key)) {\n      onInternalStep(key === 'Up' || key === 'ArrowUp');\n      event.preventDefault();\n    }\n  };\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n    shiftKeyRef.current = false;\n  };\n  React.useEffect(function () {\n    if (changeOnWheel && focus) {\n      var onWheel = function onWheel(event) {\n        // moving mouse wheel rises wheel event with deltaY < 0\n        // scroll value grows from top to bottom, as screen Y coordinate\n        onInternalStep(event.deltaY < 0);\n        event.preventDefault();\n      };\n      var input = inputRef.current;\n      if (input) {\n        // React onWheel is passive and we can't preventDefault() in it.\n        // That's why we should subscribe with DOM listener\n        // https://stackoverflow.com/questions/63663025/react-onwheel-handler-cant-preventdefault-because-its-a-passive-event-listenev\n        input.addEventListener('wheel', onWheel, {\n          passive: false\n        });\n        return function () {\n          return input.removeEventListener('wheel', onWheel);\n        };\n      }\n    }\n  });\n\n  // >>> Focus & Blur\n  var onBlur = function onBlur() {\n    if (changeOnBlur) {\n      flushInputValue(false);\n    }\n    setFocus(false);\n    userTypingRef.current = false;\n  };\n\n  // ========================== Controlled ==========================\n  // Input by precision & formatter\n  useLayoutUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision, formatter]);\n\n  // Input by value\n  useLayoutUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue);\n    var currentParsedValue = getMiniDecimal(mergedParser(inputValue));\n\n    // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n    if (!newValue.equals(currentParsedValue) || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, userTypingRef.current);\n    }\n  }, [value]);\n\n  // ============================ Cursor ============================\n  useLayoutUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]);\n\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(prefixCls, className, (_clsx = {}, _defineProperty(_clsx, \"\".concat(prefixCls, \"-focused\"), focus), _defineProperty(_clsx, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_clsx, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_clsx, \"\".concat(prefixCls, \"-not-a-number\"), decimalValue.isNaN()), _defineProperty(_clsx, \"\".concat(prefixCls, \"-out-of-range\"), !decimalValue.isInvalidate() && !isInRange(decimalValue)), _clsx)),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBeforeInput: onBeforeInput\n  }, controls && /*#__PURE__*/React.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(inputClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoComplete: \"off\",\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: composeRef(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var disabled = props.disabled,\n    style = props.style,\n    prefixCls = props.prefixCls,\n    value = props.value,\n    prefix = props.prefix,\n    suffix = props.suffix,\n    addonBefore = props.addonBefore,\n    addonAfter = props.addonAfter,\n    className = props.className,\n    classNames = props.classNames,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var inputFocusRef = React.useRef(null);\n  var focus = function focus(option) {\n    if (inputFocusRef.current) {\n      triggerFocus(inputFocusRef.current, option);\n    }\n  };\n  return /*#__PURE__*/React.createElement(BaseInput, {\n    className: className,\n    triggerFocus: focus,\n    prefixCls: prefixCls,\n    value: value,\n    disabled: disabled,\n    style: style,\n    prefix: prefix,\n    suffix: suffix,\n    addonAfter: addonAfter,\n    addonBefore: addonBefore,\n    classNames: classNames,\n    components: {\n      affixWrapper: 'div',\n      groupWrapper: 'div',\n      wrapper: 'div',\n      groupAddon: 'div'\n    }\n  }, /*#__PURE__*/React.createElement(InternalInputNumber, _extends({\n    prefixCls: prefixCls,\n    disabled: disabled,\n    ref: composeRef(inputFocusRef, ref),\n    className: classNames === null || classNames === void 0 ? void 0 : classNames.input\n  }, rest)));\n});\nInputNumber.displayName = 'InputNumber';\nexport default InputNumber;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}