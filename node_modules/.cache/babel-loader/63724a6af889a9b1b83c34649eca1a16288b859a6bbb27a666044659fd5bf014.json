{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";// import canUseDom from 'rc-util/lib/Dom/canUseDom';\nimport useLayoutEffect from\"rc-util/es/hooks/useLayoutEffect\";import*as React from'react';// We need fully clone React function here\n// to avoid webpack warning React 17 do not export `useId`\nvar fullClone=_objectSpread({},React);var useInsertionEffect=fullClone.useInsertionEffect;/**\n * Polyfill `useInsertionEffect` for React < 18\n * @param renderEffect will be executed in `useMemo`, and do not have callback\n * @param effect will be executed in `useLayoutEffect`\n * @param deps\n */var useInsertionEffectPolyfill=function useInsertionEffectPolyfill(renderEffect,effect,deps){React.useMemo(renderEffect,deps);useLayoutEffect(function(){return effect(true);},deps);};/**\n * Compatible `useInsertionEffect`\n * will use `useInsertionEffect` if React version >= 18,\n * otherwise use `useInsertionEffectPolyfill`.\n */var useCompatibleInsertionEffect=useInsertionEffect?function(renderEffect,effect,deps){return useInsertionEffect(function(){renderEffect();return effect();},deps);}:useInsertionEffectPolyfill;export default useCompatibleInsertionEffect;","map":{"version":3,"names":["_objectSpread","useLayoutEffect","React","fullClone","useInsertionEffect","useInsertionEffectPolyfill","renderEffect","effect","deps","useMemo","useCompatibleInsertionEffect"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@ant-design/cssinjs/es/hooks/useCompatibleInsertionEffect.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// import canUseDom from 'rc-util/lib/Dom/canUseDom';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\n\n// We need fully clone React function here\n// to avoid webpack warning React 17 do not export `useId`\nvar fullClone = _objectSpread({}, React);\nvar useInsertionEffect = fullClone.useInsertionEffect;\n/**\n * Polyfill `useInsertionEffect` for React < 18\n * @param renderEffect will be executed in `useMemo`, and do not have callback\n * @param effect will be executed in `useLayoutEffect`\n * @param deps\n */\nvar useInsertionEffectPolyfill = function useInsertionEffectPolyfill(renderEffect, effect, deps) {\n  React.useMemo(renderEffect, deps);\n  useLayoutEffect(function () {\n    return effect(true);\n  }, deps);\n};\n\n/**\n * Compatible `useInsertionEffect`\n * will use `useInsertionEffect` if React version >= 18,\n * otherwise use `useInsertionEffectPolyfill`.\n */\nvar useCompatibleInsertionEffect = useInsertionEffect ? function (renderEffect, effect, deps) {\n  return useInsertionEffect(function () {\n    renderEffect();\n    return effect();\n  }, deps);\n} : useInsertionEffectPolyfill;\nexport default useCompatibleInsertionEffect;"],"mappings":"AAAA,MAAO,CAAAA,aAAa,KAAM,0CAA0C,CACpE;AACA,MAAO,CAAAC,eAAe,KAAM,kCAAkC,CAC9D,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAE9B;AACA;AACA,GAAI,CAAAC,SAAS,CAAGH,aAAa,CAAC,CAAC,CAAC,CAAEE,KAAK,CAAC,CACxC,GAAI,CAAAE,kBAAkB,CAAGD,SAAS,CAACC,kBAAkB,CACrD;AACA;AACA;AACA;AACA;AACA,GACA,GAAI,CAAAC,0BAA0B,CAAG,QAAS,CAAAA,0BAA0BA,CAACC,YAAY,CAAEC,MAAM,CAAEC,IAAI,CAAE,CAC/FN,KAAK,CAACO,OAAO,CAACH,YAAY,CAAEE,IAAI,CAAC,CACjCP,eAAe,CAAC,UAAY,CAC1B,MAAO,CAAAM,MAAM,CAAC,IAAI,CAAC,CACrB,CAAC,CAAEC,IAAI,CAAC,CACV,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,GAAI,CAAAE,4BAA4B,CAAGN,kBAAkB,CAAG,SAAUE,YAAY,CAAEC,MAAM,CAAEC,IAAI,CAAE,CAC5F,MAAO,CAAAJ,kBAAkB,CAAC,UAAY,CACpCE,YAAY,CAAC,CAAC,CACd,MAAO,CAAAC,MAAM,CAAC,CAAC,CACjB,CAAC,CAAEC,IAAI,CAAC,CACV,CAAC,CAAGH,0BAA0B,CAC9B,cAAe,CAAAK,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}