{"ast":null,"code":"/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */export function bound01(n,max){if(isOnePointZero(n)){n='100%';}var isPercent=isPercentage(n);n=max===360?n:Math.min(max,Math.max(0,parseFloat(n)));// Automatically convert percentage into number\nif(isPercent){n=parseInt(String(n*max),10)/100;}// Handle floating point rounding errors\nif(Math.abs(n-max)<0.000001){return 1;}// Convert into [0, 1] range if it isn't already\nif(max===360){// If n is a hue given in degrees,\n// wrap around out-of-range values into [0, 360] range\n// then convert into [0, 1].\nn=(n<0?n%max+max:n%max)/parseFloat(String(max));}else{// If n not a hue given in degrees\n// Convert into [0, 1] range if it isn't already.\nn=n%max/parseFloat(String(max));}return n;}/**\n * Force a number between 0 and 1\n * @hidden\n */export function clamp01(val){return Math.min(1,Math.max(0,val));}/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */export function isOnePointZero(n){return typeof n==='string'&&n.indexOf('.')!==-1&&parseFloat(n)===1;}/**\n * Check to see if string passed in is a percentage\n * @hidden\n */export function isPercentage(n){return typeof n==='string'&&n.indexOf('%')!==-1;}/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */export function boundAlpha(a){a=parseFloat(a);if(isNaN(a)||a<0||a>1){a=1;}return a;}/**\n * Replace a decimal with it's percentage value\n * @hidden\n */export function convertToPercentage(n){if(n<=1){return\"\".concat(Number(n)*100,\"%\");}return n;}/**\n * Force a hex value to have 2 characters\n * @hidden\n */export function pad2(c){return c.length===1?'0'+c:String(c);}","map":{"version":3,"names":["bound01","n","max","isOnePointZero","isPercent","isPercentage","Math","min","parseFloat","parseInt","String","abs","clamp01","val","indexOf","boundAlpha","a","isNaN","convertToPercentage","concat","Number","pad2","c","length"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@ctrl/tinycolor/dist/module/util.js"],"sourcesContent":["/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return \"\".concat(Number(n) * 100, \"%\");\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAA,OAAOA,CAACC,CAAC,CAAEC,GAAG,CAAE,CAC5B,GAAIC,cAAc,CAACF,CAAC,CAAC,CAAE,CACnBA,CAAC,CAAG,MAAM,CACd,CACA,GAAI,CAAAG,SAAS,CAAGC,YAAY,CAACJ,CAAC,CAAC,CAC/BA,CAAC,CAAGC,GAAG,GAAK,GAAG,CAAGD,CAAC,CAAGK,IAAI,CAACC,GAAG,CAACL,GAAG,CAAEI,IAAI,CAACJ,GAAG,CAAC,CAAC,CAAEM,UAAU,CAACP,CAAC,CAAC,CAAC,CAAC,CAC/D;AACA,GAAIG,SAAS,CAAE,CACXH,CAAC,CAAGQ,QAAQ,CAACC,MAAM,CAACT,CAAC,CAAGC,GAAG,CAAC,CAAE,EAAE,CAAC,CAAG,GAAG,CAC3C,CACA;AACA,GAAII,IAAI,CAACK,GAAG,CAACV,CAAC,CAAGC,GAAG,CAAC,CAAG,QAAQ,CAAE,CAC9B,MAAO,EAAC,CACZ,CACA;AACA,GAAIA,GAAG,GAAK,GAAG,CAAE,CACb;AACA;AACA;AACAD,CAAC,CAAG,CAACA,CAAC,CAAG,CAAC,CAAIA,CAAC,CAAGC,GAAG,CAAIA,GAAG,CAAGD,CAAC,CAAGC,GAAG,EAAIM,UAAU,CAACE,MAAM,CAACR,GAAG,CAAC,CAAC,CACrE,CAAC,IACI,CACD;AACA;AACAD,CAAC,CAAIA,CAAC,CAAGC,GAAG,CAAIM,UAAU,CAACE,MAAM,CAACR,GAAG,CAAC,CAAC,CAC3C,CACA,MAAO,CAAAD,CAAC,CACZ,CACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAW,OAAOA,CAACC,GAAG,CAAE,CACzB,MAAO,CAAAP,IAAI,CAACC,GAAG,CAAC,CAAC,CAAED,IAAI,CAACJ,GAAG,CAAC,CAAC,CAAEW,GAAG,CAAC,CAAC,CACxC,CACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAV,cAAcA,CAACF,CAAC,CAAE,CAC9B,MAAO,OAAO,CAAAA,CAAC,GAAK,QAAQ,EAAIA,CAAC,CAACa,OAAO,CAAC,GAAG,CAAC,GAAK,CAAC,CAAC,EAAIN,UAAU,CAACP,CAAC,CAAC,GAAK,CAAC,CAChF,CACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAI,YAAYA,CAACJ,CAAC,CAAE,CAC5B,MAAO,OAAO,CAAAA,CAAC,GAAK,QAAQ,EAAIA,CAAC,CAACa,OAAO,CAAC,GAAG,CAAC,GAAK,CAAC,CAAC,CACzD,CACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,UAAUA,CAACC,CAAC,CAAE,CAC1BA,CAAC,CAAGR,UAAU,CAACQ,CAAC,CAAC,CACjB,GAAIC,KAAK,CAACD,CAAC,CAAC,EAAIA,CAAC,CAAG,CAAC,EAAIA,CAAC,CAAG,CAAC,CAAE,CAC5BA,CAAC,CAAG,CAAC,CACT,CACA,MAAO,CAAAA,CAAC,CACZ,CACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAE,mBAAmBA,CAACjB,CAAC,CAAE,CACnC,GAAIA,CAAC,EAAI,CAAC,CAAE,CACR,MAAO,EAAE,CAACkB,MAAM,CAACC,MAAM,CAACnB,CAAC,CAAC,CAAG,GAAG,CAAE,GAAG,CAAC,CAC1C,CACA,MAAO,CAAAA,CAAC,CACZ,CACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAoB,IAAIA,CAACC,CAAC,CAAE,CACpB,MAAO,CAAAA,CAAC,CAACC,MAAM,GAAK,CAAC,CAAG,GAAG,CAAGD,CAAC,CAAGZ,MAAM,CAACY,CAAC,CAAC,CAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}