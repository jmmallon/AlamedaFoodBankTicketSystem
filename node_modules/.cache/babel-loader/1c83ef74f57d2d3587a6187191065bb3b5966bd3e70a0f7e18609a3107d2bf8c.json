{"ast":null,"code":"/* eslint-disable */ // Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str){// 'm' and 'r' are mixing constants generated offline.\n// They're not really 'magic', they just happen to work well.\n// const m = 0x5bd1e995;\n// const r = 24;\n// Initialize the hash\nvar h=0;// Mix 4 bytes at a time into the hash\nvar k,i=0,len=str.length;for(;len>=4;++i,len-=4){k=str.charCodeAt(i)&0xff|(str.charCodeAt(++i)&0xff)<<8|(str.charCodeAt(++i)&0xff)<<16|(str.charCodeAt(++i)&0xff)<<24;k=/* Math.imul(k, m): */(k&0xffff)*0x5bd1e995+((k>>>16)*0xe995<<16);k^=/* k >>> r: */k>>>24;h=/* Math.imul(k, m): */(k&0xffff)*0x5bd1e995+((k>>>16)*0xe995<<16)^/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);}// Handle the last few bytes of the input array\nswitch(len){case 3:h^=(str.charCodeAt(i+2)&0xff)<<16;case 2:h^=(str.charCodeAt(i+1)&0xff)<<8;case 1:h^=str.charCodeAt(i)&0xff;h=/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);}// Do a few final mixes of the hash to ensure the last few\n// bytes are well-incorporated.\nh^=h>>>13;h=/* Math.imul(h, m): */(h&0xffff)*0x5bd1e995+((h>>>16)*0xe995<<16);return((h^h>>>15)>>>0).toString(36);}export default murmur2;","map":{"version":3,"names":["murmur2","str","h","k","i","len","length","charCodeAt","toString"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@emotion/hash/dist/hash.browser.esm.js"],"sourcesContent":["/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n"],"mappings":"AAAA,qBACA;AACA;AACA,QAAS,CAAAA,OAAOA,CAACC,GAAG,CAAE,CACpB;AACA;AACA;AACA;AACA;AACA,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAE;AAEX,GAAI,CAAAC,CAAC,CACDC,CAAC,CAAG,CAAC,CACLC,GAAG,CAAGJ,GAAG,CAACK,MAAM,CAEpB,KAAOD,GAAG,EAAI,CAAC,CAAE,EAAED,CAAC,CAAEC,GAAG,EAAI,CAAC,CAAE,CAC9BF,CAAC,CAAGF,GAAG,CAACM,UAAU,CAACH,CAAC,CAAC,CAAG,IAAI,CAAG,CAACH,GAAG,CAACM,UAAU,CAAC,EAAEH,CAAC,CAAC,CAAG,IAAI,GAAK,CAAC,CAAG,CAACH,GAAG,CAACM,UAAU,CAAC,EAAEH,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAAG,CAACH,GAAG,CAACM,UAAU,CAAC,EAAEH,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAC1ID,CAAC,CACD,sBACA,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAACA,CAAC,GAAK,EAAE,EAAI,MAAM,EAAI,EAAE,CAAC,CACvDA,CAAC,EACD,cACAA,CAAC,GAAK,EAAE,CACRD,CAAC,CACD,sBACA,CAACC,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAACA,CAAC,GAAK,EAAE,EAAI,MAAM,EAAI,EAAE,CAAC,CACvD,sBACA,CAACD,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAACA,CAAC,GAAK,EAAE,EAAI,MAAM,EAAI,EAAE,CAAC,CACzD,CAAE;AAGF,OAAQG,GAAG,EACT,IAAK,EAAC,CACJH,CAAC,EAAI,CAACD,GAAG,CAACM,UAAU,CAACH,CAAC,CAAG,CAAC,CAAC,CAAG,IAAI,GAAK,EAAE,CAE3C,IAAK,EAAC,CACJF,CAAC,EAAI,CAACD,GAAG,CAACM,UAAU,CAACH,CAAC,CAAG,CAAC,CAAC,CAAG,IAAI,GAAK,CAAC,CAE1C,IAAK,EAAC,CACJF,CAAC,EAAID,GAAG,CAACM,UAAU,CAACH,CAAC,CAAC,CAAG,IAAI,CAC7BF,CAAC,CACD,sBACA,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAACA,CAAC,GAAK,EAAE,EAAI,MAAM,EAAI,EAAE,CAAC,CAC3D,CAAE;AACF;AAGAA,CAAC,EAAIA,CAAC,GAAK,EAAE,CACbA,CAAC,CACD,sBACA,CAACA,CAAC,CAAG,MAAM,EAAI,UAAU,EAAI,CAACA,CAAC,GAAK,EAAE,EAAI,MAAM,EAAI,EAAE,CAAC,CACvD,MAAO,CAAC,CAACA,CAAC,CAAGA,CAAC,GAAK,EAAE,IAAM,CAAC,EAAEM,QAAQ,CAAC,EAAE,CAAC,CAC5C,CAEA,cAAe,CAAAR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}