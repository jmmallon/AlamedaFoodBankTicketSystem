{"ast":null,"code":"\"use client\";import*as React from'react';import classNames from'classnames';import{isPresetColor}from'../_util/colors';import{ConfigContext}from'../config-provider';import useStyle from'./style/ribbon';const Ribbon=props=>{const{className,prefixCls:customizePrefixCls,style,color,children,text,placement='end',rootClassName}=props;const{getPrefixCls,direction}=React.useContext(ConfigContext);const prefixCls=getPrefixCls('ribbon',customizePrefixCls);const wrapperCls=\"\".concat(prefixCls,\"-wrapper\");const[wrapCSSVar,hashId,cssVarCls]=useStyle(prefixCls,wrapperCls);const colorInPreset=isPresetColor(color,false);const ribbonCls=classNames(prefixCls,\"\".concat(prefixCls,\"-placement-\").concat(placement),{[\"\".concat(prefixCls,\"-rtl\")]:direction==='rtl',[\"\".concat(prefixCls,\"-color-\").concat(color)]:colorInPreset},className);const colorStyle={};const cornerColorStyle={};if(color&&!colorInPreset){colorStyle.background=color;cornerColorStyle.color=color;}return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\",{className:classNames(wrapperCls,rootClassName,hashId,cssVarCls)},children,/*#__PURE__*/React.createElement(\"div\",{className:classNames(ribbonCls,hashId),style:Object.assign(Object.assign({},colorStyle),style)},/*#__PURE__*/React.createElement(\"span\",{className:\"\".concat(prefixCls,\"-text\")},text),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(prefixCls,\"-corner\"),style:cornerColorStyle}))));};if(process.env.NODE_ENV!=='production'){Ribbon.displayName='Ribbon';}export default Ribbon;","map":{"version":3,"names":["React","classNames","isPresetColor","ConfigContext","useStyle","Ribbon","props","className","prefixCls","customizePrefixCls","style","color","children","text","placement","rootClassName","getPrefixCls","direction","useContext","wrapperCls","concat","wrapCSSVar","hashId","cssVarCls","colorInPreset","ribbonCls","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/badge/Ribbon.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style/ribbon';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end',\n    rootClassName\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const wrapperCls = `${prefixCls}-wrapper`;\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, wrapperCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapCSSVar( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(wrapperCls, rootClassName, hashId, cssVarCls)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"],"mappings":"AAAA,YAAY,CAEZ,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,UAAU,KAAM,YAAY,CACnC,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,OAASC,aAAa,KAAQ,oBAAoB,CAClD,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,KAAM,CAAAC,MAAM,CAAGC,KAAK,EAAI,CACtB,KAAM,CACJC,SAAS,CACTC,SAAS,CAAEC,kBAAkB,CAC7BC,KAAK,CACLC,KAAK,CACLC,QAAQ,CACRC,IAAI,CACJC,SAAS,CAAG,KAAK,CACjBC,aACF,CAAC,CAAGT,KAAK,CACT,KAAM,CACJU,YAAY,CACZC,SACF,CAAC,CAAGjB,KAAK,CAACkB,UAAU,CAACf,aAAa,CAAC,CACnC,KAAM,CAAAK,SAAS,CAAGQ,YAAY,CAAC,QAAQ,CAAEP,kBAAkB,CAAC,CAC5D,KAAM,CAAAU,UAAU,IAAAC,MAAA,CAAMZ,SAAS,YAAU,CACzC,KAAM,CAACa,UAAU,CAAEC,MAAM,CAAEC,SAAS,CAAC,CAAGnB,QAAQ,CAACI,SAAS,CAAEW,UAAU,CAAC,CACvE,KAAM,CAAAK,aAAa,CAAGtB,aAAa,CAACS,KAAK,CAAE,KAAK,CAAC,CACjD,KAAM,CAAAc,SAAS,CAAGxB,UAAU,CAACO,SAAS,IAAAY,MAAA,CAAKZ,SAAS,gBAAAY,MAAA,CAAcN,SAAS,EAAI,CAC7E,IAAAM,MAAA,CAAIZ,SAAS,UAASS,SAAS,GAAK,KAAK,CACzC,IAAAG,MAAA,CAAIZ,SAAS,YAAAY,MAAA,CAAUT,KAAK,GAAKa,aACnC,CAAC,CAAEjB,SAAS,CAAC,CACb,KAAM,CAAAmB,UAAU,CAAG,CAAC,CAAC,CACrB,KAAM,CAAAC,gBAAgB,CAAG,CAAC,CAAC,CAC3B,GAAIhB,KAAK,EAAI,CAACa,aAAa,CAAE,CAC3BE,UAAU,CAACE,UAAU,CAAGjB,KAAK,CAC7BgB,gBAAgB,CAAChB,KAAK,CAAGA,KAAK,CAChC,CACA,MAAO,CAAAU,UAAU,CAAE,aAAarB,KAAK,CAAC6B,aAAa,CAAC,KAAK,CAAE,CACzDtB,SAAS,CAAEN,UAAU,CAACkB,UAAU,CAAEJ,aAAa,CAAEO,MAAM,CAAEC,SAAS,CACpE,CAAC,CAAEX,QAAQ,CAAE,aAAaZ,KAAK,CAAC6B,aAAa,CAAC,KAAK,CAAE,CACnDtB,SAAS,CAAEN,UAAU,CAACwB,SAAS,CAAEH,MAAM,CAAC,CACxCZ,KAAK,CAAEoB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEL,UAAU,CAAC,CAAEhB,KAAK,CAC3D,CAAC,CAAE,aAAaV,KAAK,CAAC6B,aAAa,CAAC,MAAM,CAAE,CAC1CtB,SAAS,IAAAa,MAAA,CAAKZ,SAAS,SACzB,CAAC,CAAEK,IAAI,CAAC,CAAE,aAAab,KAAK,CAAC6B,aAAa,CAAC,KAAK,CAAE,CAChDtB,SAAS,IAAAa,MAAA,CAAKZ,SAAS,WAAS,CAChCE,KAAK,CAAEiB,gBACT,CAAC,CAAC,CAAC,CAAC,CAAC,CACP,CAAC,CACD,GAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC7B,MAAM,CAAC8B,WAAW,CAAG,QAAQ,CAC/B,CACA,cAAe,CAAA9B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}