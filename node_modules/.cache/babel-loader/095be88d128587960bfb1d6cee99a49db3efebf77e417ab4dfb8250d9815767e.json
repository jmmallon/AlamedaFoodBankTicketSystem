{"ast":null,"code":"import{unit}from'@ant-design/cssinjs';import{resetComponent}from'../../style';import{genStyleHooks,mergeToken}from'../../theme/internal';const genBaseStyle=token=>{const{antCls,componentCls,iconCls,avatarBg,avatarColor,containerSize,containerSizeLG,containerSizeSM,textFontSize,textFontSizeLG,textFontSizeSM,borderRadius,borderRadiusLG,borderRadiusSM,lineWidth,lineType}=token;// Avatar size style\nconst avatarSizeStyle=(size,fontSize,radius)=>({width:size,height:size,borderRadius:'50%',[\"&\".concat(componentCls,\"-square\")]:{borderRadius:radius},[\"&\".concat(componentCls,\"-icon\")]:{fontSize,[\"> \".concat(iconCls)]:{margin:0}}});return{[componentCls]:Object.assign(Object.assign(Object.assign(Object.assign({},resetComponent(token)),{position:'relative',display:'inline-flex',justifyContent:'center',alignItems:'center',overflow:'hidden',color:avatarColor,whiteSpace:'nowrap',textAlign:'center',verticalAlign:'middle',background:avatarBg,border:\"\".concat(unit(lineWidth),\" \").concat(lineType,\" transparent\"),[\"&-image\"]:{background:'transparent'},[\"\".concat(antCls,\"-image-img\")]:{display:'block'}}),avatarSizeStyle(containerSize,textFontSize,borderRadius)),{[\"&-lg\"]:Object.assign({},avatarSizeStyle(containerSizeLG,textFontSizeLG,borderRadiusLG)),[\"&-sm\"]:Object.assign({},avatarSizeStyle(containerSizeSM,textFontSizeSM,borderRadiusSM)),'> img':{display:'block',width:'100%',height:'100%',objectFit:'cover'}})};};const genGroupStyle=token=>{const{componentCls,groupBorderColor,groupOverlapping,groupSpace}=token;return{[\"\".concat(componentCls,\"-group\")]:{display:'inline-flex',[\"\".concat(componentCls)]:{borderColor:groupBorderColor},[\"> *:not(:first-child)\"]:{marginInlineStart:groupOverlapping}},[\"\".concat(componentCls,\"-group-popover\")]:{[\"\".concat(componentCls,\" + \").concat(componentCls)]:{marginInlineStart:groupSpace}}};};export const prepareComponentToken=token=>{const{controlHeight,controlHeightLG,controlHeightSM,fontSize,fontSizeLG,fontSizeXL,fontSizeHeading3,marginXS,marginXXS,colorBorderBg}=token;return{containerSize:controlHeight,containerSizeLG:controlHeightLG,containerSizeSM:controlHeightSM,textFontSize:Math.round((fontSizeLG+fontSizeXL)/2),textFontSizeLG:fontSizeHeading3,textFontSizeSM:fontSize,groupSpace:marginXXS,groupOverlapping:-marginXS,groupBorderColor:colorBorderBg};};export default genStyleHooks('Avatar',token=>{const{colorTextLightSolid,colorTextPlaceholder}=token;const avatarToken=mergeToken(token,{avatarBg:colorTextPlaceholder,avatarColor:colorTextLightSolid});return[genBaseStyle(avatarToken),genGroupStyle(avatarToken)];},prepareComponentToken);","map":{"version":3,"names":["unit","resetComponent","genStyleHooks","mergeToken","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","concat","margin","Object","assign","position","display","justifyContent","alignItems","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","prepareComponentToken","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round","colorTextLightSolid","colorTextPlaceholder","avatarToken"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/avatar/style/index.js"],"sourcesContent":["import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${unit(lineWidth)} ${lineType} transparent`,\n      [`&-image`]: {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      [`&-lg`]: Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      [`&-sm`]: Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [`${componentCls}`]: {\n        borderColor: groupBorderColor\n      },\n      [`> *:not(:first-child)`]: {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nexport const prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexport default genStyleHooks('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = mergeToken(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}