{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/esm/objectSpread2\";import*as React from'react';function parseColWidth(totalWidth){var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';if(typeof width==='number'){return width;}if(width.endsWith('%')){return totalWidth*parseFloat(width)/100;}return null;}/**\n * Fill all column with width\n */export default function useWidthColumns(flattenColumns,scrollWidth,clientWidth){return React.useMemo(function(){// Fill width if needed\nif(scrollWidth&&scrollWidth>0){var totalWidth=0;var missWidthCount=0;// collect not given width column\nflattenColumns.forEach(function(col){var colWidth=parseColWidth(scrollWidth,col.width);if(colWidth){totalWidth+=colWidth;}else{missWidthCount+=1;}});// Fill width\nvar maxFitWidth=Math.max(scrollWidth,clientWidth);var restWidth=Math.max(maxFitWidth-totalWidth,missWidthCount);var restCount=missWidthCount;var avgWidth=restWidth/missWidthCount;var realTotal=0;var filledColumns=flattenColumns.map(function(col){var clone=_objectSpread({},col);var colWidth=parseColWidth(scrollWidth,clone.width);if(colWidth){clone.width=colWidth;}else{var colAvgWidth=Math.floor(avgWidth);clone.width=restCount===1?restWidth:colAvgWidth;restWidth-=colAvgWidth;restCount-=1;}realTotal+=clone.width;return clone;});// If realTotal is less than clientWidth,\n// We need extend column width\nif(realTotal<maxFitWidth){var scale=maxFitWidth/realTotal;restWidth=maxFitWidth;filledColumns.forEach(function(col,index){var colWidth=Math.floor(col.width*scale);col.width=index===filledColumns.length-1?restWidth:colWidth;restWidth-=colWidth;});}return[filledColumns,Math.max(realTotal,maxFitWidth)];}return[flattenColumns,scrollWidth];},[flattenColumns,scrollWidth,clientWidth]);}","map":{"version":3,"names":["_objectSpread","React","parseColWidth","totalWidth","width","arguments","length","undefined","endsWith","parseFloat","useWidthColumns","flattenColumns","scrollWidth","clientWidth","useMemo","missWidthCount","forEach","col","colWidth","maxFitWidth","Math","max","restWidth","restCount","avgWidth","realTotal","filledColumns","map","clone","colAvgWidth","floor","scale","index"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-table/es/hooks/useColumns/useWidthColumns.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nfunction parseColWidth(totalWidth) {\n  var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (typeof width === 'number') {\n    return width;\n  }\n  if (width.endsWith('%')) {\n    return totalWidth * parseFloat(width) / 100;\n  }\n  return null;\n}\n\n/**\n * Fill all column with width\n */\nexport default function useWidthColumns(flattenColumns, scrollWidth, clientWidth) {\n  return React.useMemo(function () {\n    // Fill width if needed\n    if (scrollWidth && scrollWidth > 0) {\n      var totalWidth = 0;\n      var missWidthCount = 0;\n\n      // collect not given width column\n      flattenColumns.forEach(function (col) {\n        var colWidth = parseColWidth(scrollWidth, col.width);\n        if (colWidth) {\n          totalWidth += colWidth;\n        } else {\n          missWidthCount += 1;\n        }\n      });\n\n      // Fill width\n      var maxFitWidth = Math.max(scrollWidth, clientWidth);\n      var restWidth = Math.max(maxFitWidth - totalWidth, missWidthCount);\n      var restCount = missWidthCount;\n      var avgWidth = restWidth / missWidthCount;\n      var realTotal = 0;\n      var filledColumns = flattenColumns.map(function (col) {\n        var clone = _objectSpread({}, col);\n        var colWidth = parseColWidth(scrollWidth, clone.width);\n        if (colWidth) {\n          clone.width = colWidth;\n        } else {\n          var colAvgWidth = Math.floor(avgWidth);\n          clone.width = restCount === 1 ? restWidth : colAvgWidth;\n          restWidth -= colAvgWidth;\n          restCount -= 1;\n        }\n        realTotal += clone.width;\n        return clone;\n      });\n\n      // If realTotal is less than clientWidth,\n      // We need extend column width\n      if (realTotal < maxFitWidth) {\n        var scale = maxFitWidth / realTotal;\n        restWidth = maxFitWidth;\n        filledColumns.forEach(function (col, index) {\n          var colWidth = Math.floor(col.width * scale);\n          col.width = index === filledColumns.length - 1 ? restWidth : colWidth;\n          restWidth -= colWidth;\n        });\n      }\n      return [filledColumns, Math.max(realTotal, maxFitWidth)];\n    }\n    return [flattenColumns, scrollWidth];\n  }, [flattenColumns, scrollWidth, clientWidth]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}