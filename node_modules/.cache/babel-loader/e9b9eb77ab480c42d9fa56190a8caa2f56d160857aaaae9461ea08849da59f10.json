{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/esm/toConsumableArray\";import{PresetColors}from'../theme/interface';const inverseColors=PresetColors.map(color=>\"\".concat(color,\"-inverse\"));export const PresetStatusColorTypes=['success','processing','error','default','warning'];/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */export function isPresetColor(color){let includeInverse=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(includeInverse){return[].concat(_toConsumableArray(inverseColors),_toConsumableArray(PresetColors)).includes(color);}return PresetColors.includes(color);}export function isPresetStatusColor(color){return PresetStatusColorTypes.includes(color);}","map":{"version":3,"names":["_toConsumableArray","PresetColors","inverseColors","map","color","concat","PresetStatusColorTypes","isPresetColor","includeInverse","arguments","length","undefined","includes","isPresetStatusColor"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/_util/colors.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nconst inverseColors = PresetColors.map(color => `${color}-inverse`);\nexport const PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}"],"mappings":"AAAA,MAAO,CAAAA,kBAAkB,KAAM,8CAA8C,CAC7E,OAASC,YAAY,KAAQ,oBAAoB,CACjD,KAAM,CAAAC,aAAa,CAAGD,YAAY,CAACE,GAAG,CAACC,KAAK,KAAAC,MAAA,CAAOD,KAAK,YAAU,CAAC,CACnE,MAAO,MAAM,CAAAE,sBAAsB,CAAG,CAAC,SAAS,CAAE,YAAY,CAAE,OAAO,CAAE,SAAS,CAAE,SAAS,CAAC,CAC9F;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAC,aAAaA,CAACH,KAAK,CAAE,CACnC,GAAI,CAAAI,cAAc,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,IAAI,CAC7F,GAAID,cAAc,CAAE,CAClB,MAAO,EAAE,CAACH,MAAM,CAACL,kBAAkB,CAACE,aAAa,CAAC,CAAEF,kBAAkB,CAACC,YAAY,CAAC,CAAC,CAACW,QAAQ,CAACR,KAAK,CAAC,CACvG,CACA,MAAO,CAAAH,YAAY,CAACW,QAAQ,CAACR,KAAK,CAAC,CACrC,CACA,MAAO,SAAS,CAAAS,mBAAmBA,CAACT,KAAK,CAAE,CACzC,MAAO,CAAAE,sBAAsB,CAACM,QAAQ,CAACR,KAAK,CAAC,CAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}