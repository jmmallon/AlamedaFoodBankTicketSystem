{"ast":null,"code":"// Countdown\nconst timeUnits=[['Y',1000*60*60*24*365],// years\n['M',1000*60*60*24*30],// months\n['D',1000*60*60*24],// days\n['H',1000*60*60],// hours\n['m',1000*60],// minutes\n['s',1000],// seconds\n['S',1]// million seconds\n];export function formatTimeStr(duration,format){let leftDuration=duration;const escapeRegex=/\\[[^\\]]*]/g;const keepList=(format.match(escapeRegex)||[]).map(str=>str.slice(1,-1));const templateText=format.replace(escapeRegex,'[]');const replacedText=timeUnits.reduce((current,_ref)=>{let[name,unit]=_ref;if(current.includes(name)){const value=Math.floor(leftDuration/unit);leftDuration-=value*unit;return current.replace(new RegExp(\"\".concat(name,\"+\"),'g'),match=>{const len=match.length;return value.toString().padStart(len,'0');});}return current;},templateText);let index=0;return replacedText.replace(escapeRegex,()=>{const match=keepList[index];index+=1;return match;});}export function formatCountdown(value,config){const{format=''}=config;const target=new Date(value).getTime();const current=Date.now();const diff=Math.max(target-current,0);return formatTimeStr(diff,format);}","map":{"version":3,"names":["timeUnits","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","replacedText","reduce","current","_ref","name","unit","includes","value","Math","floor","RegExp","concat","len","length","toString","padStart","index","formatCountdown","config","target","Date","getTime","now","diff","max"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/antd/es/statistic/utils.js"],"sourcesContent":["// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nexport function formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, _ref) => {\n    let [name, unit] = _ref;\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCountdown(value, config) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = Math.max(target - current, 0);\n  return formatTimeStr(diff, format);\n}"],"mappings":"AAAA;AACA,KAAM,CAAAA,SAAS,CAAG,CAAC,CAAC,GAAG,CAAE,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,GAAG,CAAC,CACnD;AACA,CAAC,GAAG,CAAE,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAC/B;AACA,CAAC,GAAG,CAAE,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAC1B;AACA,CAAC,GAAG,CAAE,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,CACrB;AACA,CAAC,GAAG,CAAE,IAAI,CAAG,EAAE,CAAC,CAChB;AACA,CAAC,GAAG,CAAE,IAAI,CAAC,CACX;AACA,CAAC,GAAG,CAAE,CAAC,CAAE;AAAA,CACR,CACD,MAAO,SAAS,CAAAC,aAAaA,CAACC,QAAQ,CAAEC,MAAM,CAAE,CAC9C,GAAI,CAAAC,YAAY,CAAGF,QAAQ,CAC3B,KAAM,CAAAG,WAAW,CAAG,YAAY,CAChC,KAAM,CAAAC,QAAQ,CAAG,CAACH,MAAM,CAACI,KAAK,CAACF,WAAW,CAAC,EAAI,EAAE,EAAEG,GAAG,CAACC,GAAG,EAAIA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAC/E,KAAM,CAAAC,YAAY,CAAGR,MAAM,CAACS,OAAO,CAACP,WAAW,CAAE,IAAI,CAAC,CACtD,KAAM,CAAAQ,YAAY,CAAGb,SAAS,CAACc,MAAM,CAAC,CAACC,OAAO,CAAEC,IAAI,GAAK,CACvD,GAAI,CAACC,IAAI,CAAEC,IAAI,CAAC,CAAGF,IAAI,CACvB,GAAID,OAAO,CAACI,QAAQ,CAACF,IAAI,CAAC,CAAE,CAC1B,KAAM,CAAAG,KAAK,CAAGC,IAAI,CAACC,KAAK,CAAClB,YAAY,CAAGc,IAAI,CAAC,CAC7Cd,YAAY,EAAIgB,KAAK,CAAGF,IAAI,CAC5B,MAAO,CAAAH,OAAO,CAACH,OAAO,CAAC,GAAI,CAAAW,MAAM,IAAAC,MAAA,CAAIP,IAAI,MAAK,GAAG,CAAC,CAAEV,KAAK,EAAI,CAC3D,KAAM,CAAAkB,GAAG,CAAGlB,KAAK,CAACmB,MAAM,CACxB,MAAO,CAAAN,KAAK,CAACO,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAACH,GAAG,CAAE,GAAG,CAAC,CAC5C,CAAC,CAAC,CACJ,CACA,MAAO,CAAAV,OAAO,CAChB,CAAC,CAAEJ,YAAY,CAAC,CAChB,GAAI,CAAAkB,KAAK,CAAG,CAAC,CACb,MAAO,CAAAhB,YAAY,CAACD,OAAO,CAACP,WAAW,CAAE,IAAM,CAC7C,KAAM,CAAAE,KAAK,CAAGD,QAAQ,CAACuB,KAAK,CAAC,CAC7BA,KAAK,EAAI,CAAC,CACV,MAAO,CAAAtB,KAAK,CACd,CAAC,CAAC,CACJ,CACA,MAAO,SAAS,CAAAuB,eAAeA,CAACV,KAAK,CAAEW,MAAM,CAAE,CAC7C,KAAM,CACJ5B,MAAM,CAAG,EACX,CAAC,CAAG4B,MAAM,CACV,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,IAAI,CAACb,KAAK,CAAC,CAACc,OAAO,CAAC,CAAC,CACxC,KAAM,CAAAnB,OAAO,CAAGkB,IAAI,CAACE,GAAG,CAAC,CAAC,CAC1B,KAAM,CAAAC,IAAI,CAAGf,IAAI,CAACgB,GAAG,CAACL,MAAM,CAAGjB,OAAO,CAAE,CAAC,CAAC,CAC1C,MAAO,CAAAd,aAAa,CAACmC,IAAI,CAAEjC,MAAM,CAAC,CACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}