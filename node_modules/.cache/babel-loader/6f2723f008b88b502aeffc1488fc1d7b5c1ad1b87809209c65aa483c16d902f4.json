{"ast":null,"code":"import{useRef}from'react';export default(function(isScrollAtTop,isScrollAtBottom){// Do lock for a wheel when scrolling\nvar lockRef=useRef(false);var lockTimeoutRef=useRef(null);function lockScroll(){clearTimeout(lockTimeoutRef.current);lockRef.current=true;lockTimeoutRef.current=setTimeout(function(){lockRef.current=false;},50);}// Pass to ref since global add is in closure\nvar scrollPingRef=useRef({top:isScrollAtTop,bottom:isScrollAtBottom});scrollPingRef.current.top=isScrollAtTop;scrollPingRef.current.bottom=isScrollAtBottom;return function(deltaY){var smoothOffset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var originScroll=// Pass origin wheel when on the top\ndeltaY<0&&scrollPingRef.current.top||// Pass origin wheel when on the bottom\ndeltaY>0&&scrollPingRef.current.bottom;if(smoothOffset&&originScroll){// No need lock anymore when it's smooth offset from touchMove interval\nclearTimeout(lockTimeoutRef.current);lockRef.current=false;}else if(!originScroll||lockRef.current){lockScroll();}return!lockRef.current&&originScroll;};});","map":{"version":3,"names":["useRef","isScrollAtTop","isScrollAtBottom","lockRef","lockTimeoutRef","lockScroll","clearTimeout","current","setTimeout","scrollPingRef","top","bottom","deltaY","smoothOffset","arguments","length","undefined","originScroll"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/rc-virtual-list/es/hooks/useOriginScroll.js"],"sourcesContent":["import { useRef } from 'react';\nexport default (function (isScrollAtTop, isScrollAtBottom) {\n  // Do lock for a wheel when scrolling\n  var lockRef = useRef(false);\n  var lockTimeoutRef = useRef(null);\n  function lockScroll() {\n    clearTimeout(lockTimeoutRef.current);\n    lockRef.current = true;\n    lockTimeoutRef.current = setTimeout(function () {\n      lockRef.current = false;\n    }, 50);\n  }\n\n  // Pass to ref since global add is in closure\n  var scrollPingRef = useRef({\n    top: isScrollAtTop,\n    bottom: isScrollAtBottom\n  });\n  scrollPingRef.current.top = isScrollAtTop;\n  scrollPingRef.current.bottom = isScrollAtBottom;\n  return function (deltaY) {\n    var smoothOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var originScroll =\n    // Pass origin wheel when on the top\n    deltaY < 0 && scrollPingRef.current.top ||\n    // Pass origin wheel when on the bottom\n    deltaY > 0 && scrollPingRef.current.bottom;\n    if (smoothOffset && originScroll) {\n      // No need lock anymore when it's smooth offset from touchMove interval\n      clearTimeout(lockTimeoutRef.current);\n      lockRef.current = false;\n    } else if (!originScroll || lockRef.current) {\n      lockScroll();\n    }\n    return !lockRef.current && originScroll;\n  };\n});"],"mappings":"AAAA,OAASA,MAAM,KAAQ,OAAO,CAC9B,eAAgB,SAAUC,aAAa,CAAEC,gBAAgB,CAAE,CACzD;AACA,GAAI,CAAAC,OAAO,CAAGH,MAAM,CAAC,KAAK,CAAC,CAC3B,GAAI,CAAAI,cAAc,CAAGJ,MAAM,CAAC,IAAI,CAAC,CACjC,QAAS,CAAAK,UAAUA,CAAA,CAAG,CACpBC,YAAY,CAACF,cAAc,CAACG,OAAO,CAAC,CACpCJ,OAAO,CAACI,OAAO,CAAG,IAAI,CACtBH,cAAc,CAACG,OAAO,CAAGC,UAAU,CAAC,UAAY,CAC9CL,OAAO,CAACI,OAAO,CAAG,KAAK,CACzB,CAAC,CAAE,EAAE,CAAC,CACR,CAEA;AACA,GAAI,CAAAE,aAAa,CAAGT,MAAM,CAAC,CACzBU,GAAG,CAAET,aAAa,CAClBU,MAAM,CAAET,gBACV,CAAC,CAAC,CACFO,aAAa,CAACF,OAAO,CAACG,GAAG,CAAGT,aAAa,CACzCQ,aAAa,CAACF,OAAO,CAACI,MAAM,CAAGT,gBAAgB,CAC/C,MAAO,UAAUU,MAAM,CAAE,CACvB,GAAI,CAAAC,YAAY,CAAGC,SAAS,CAACC,MAAM,CAAG,CAAC,EAAID,SAAS,CAAC,CAAC,CAAC,GAAKE,SAAS,CAAGF,SAAS,CAAC,CAAC,CAAC,CAAG,KAAK,CAC5F,GAAI,CAAAG,YAAY,CAChB;AACAL,MAAM,CAAG,CAAC,EAAIH,aAAa,CAACF,OAAO,CAACG,GAAG,EACvC;AACAE,MAAM,CAAG,CAAC,EAAIH,aAAa,CAACF,OAAO,CAACI,MAAM,CAC1C,GAAIE,YAAY,EAAII,YAAY,CAAE,CAChC;AACAX,YAAY,CAACF,cAAc,CAACG,OAAO,CAAC,CACpCJ,OAAO,CAACI,OAAO,CAAG,KAAK,CACzB,CAAC,IAAM,IAAI,CAACU,YAAY,EAAId,OAAO,CAACI,OAAO,CAAE,CAC3CF,UAAU,CAAC,CAAC,CACd,CACA,MAAO,CAACF,OAAO,CAACI,OAAO,EAAIU,YAAY,CACzC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}