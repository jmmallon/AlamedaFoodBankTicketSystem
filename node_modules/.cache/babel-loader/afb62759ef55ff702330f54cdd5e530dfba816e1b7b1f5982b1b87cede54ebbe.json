{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import{supportRef}from\"rc-util/es/ref\";import*as React from'react';/**\n * Create Immutable pair for `makeImmutable` and `responseImmutable`.\n */export default function createImmutable(){var ImmutableContext=/*#__PURE__*/React.createContext(null);/**\n   * Get render update mark by `makeImmutable` root.\n   * Do not deps on the return value as render times\n   * but only use for `useMemo` or `useCallback` deps.\n   */function useImmutableMark(){return React.useContext(ImmutableContext);}/**\n  * Wrapped Component will be marked as Immutable.\n  * When Component parent trigger render,\n  * it will notice children component (use with `responseImmutable`) node that parent has updated.\n  * @param Component Passed Component\n  * @param triggerRender Customize trigger `responseImmutable` children re-render logic. Default will always trigger re-render when this component re-render.\n  */function makeImmutable(Component,shouldTriggerRender){var refAble=supportRef(Component);var ImmutableComponent=function ImmutableComponent(props,ref){var refProps=refAble?{ref:ref}:{};var renderTimesRef=React.useRef(0);var prevProps=React.useRef(props);// If parent has the context, we do not wrap it\nvar mark=useImmutableMark();if(mark!==null){return/*#__PURE__*/React.createElement(Component,_extends({},props,refProps));}if(// Always trigger re-render if not provide `notTriggerRender`\n!shouldTriggerRender||shouldTriggerRender(prevProps.current,props)){renderTimesRef.current+=1;}prevProps.current=props;return/*#__PURE__*/React.createElement(ImmutableContext.Provider,{value:renderTimesRef.current},/*#__PURE__*/React.createElement(Component,_extends({},props,refProps)));};if(process.env.NODE_ENV!=='production'){ImmutableComponent.displayName=\"ImmutableRoot(\".concat(Component.displayName||Component.name,\")\");}return refAble?/*#__PURE__*/React.forwardRef(ImmutableComponent):ImmutableComponent;}/**\n   * Wrapped Component with `React.memo`.\n   * But will rerender when parent with `makeImmutable` rerender.\n   */function responseImmutable(Component,propsAreEqual){var refAble=supportRef(Component);var ImmutableComponent=function ImmutableComponent(props,ref){var refProps=refAble?{ref:ref}:{};useImmutableMark();return/*#__PURE__*/React.createElement(Component,_extends({},props,refProps));};if(process.env.NODE_ENV!=='production'){ImmutableComponent.displayName=\"ImmutableResponse(\".concat(Component.displayName||Component.name,\")\");}return refAble?/*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(ImmutableComponent),propsAreEqual):/*#__PURE__*/React.memo(ImmutableComponent,propsAreEqual);}return{makeImmutable:makeImmutable,responseImmutable:responseImmutable,useImmutableMark:useImmutableMark};}","map":{"version":3,"names":["_extends","supportRef","React","createImmutable","ImmutableContext","createContext","useImmutableMark","useContext","makeImmutable","Component","shouldTriggerRender","refAble","ImmutableComponent","props","ref","refProps","renderTimesRef","useRef","prevProps","mark","createElement","current","Provider","value","process","env","NODE_ENV","displayName","concat","name","forwardRef","responseImmutable","propsAreEqual","memo"],"sources":["/Users/jmmallon/Downloads/js/ticketproject/src/node_modules/@rc-component/context/es/Immutable.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\n/**\n * Create Immutable pair for `makeImmutable` and `responseImmutable`.\n */\nexport default function createImmutable() {\n  var ImmutableContext = /*#__PURE__*/React.createContext(null);\n\n  /**\n   * Get render update mark by `makeImmutable` root.\n   * Do not deps on the return value as render times\n   * but only use for `useMemo` or `useCallback` deps.\n   */\n  function useImmutableMark() {\n    return React.useContext(ImmutableContext);\n  }\n\n  /**\n  * Wrapped Component will be marked as Immutable.\n  * When Component parent trigger render,\n  * it will notice children component (use with `responseImmutable`) node that parent has updated.\n  * @param Component Passed Component\n  * @param triggerRender Customize trigger `responseImmutable` children re-render logic. Default will always trigger re-render when this component re-render.\n  */\n  function makeImmutable(Component, shouldTriggerRender) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      var renderTimesRef = React.useRef(0);\n      var prevProps = React.useRef(props);\n\n      // If parent has the context, we do not wrap it\n      var mark = useImmutableMark();\n      if (mark !== null) {\n        return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n      }\n      if (\n      // Always trigger re-render if not provide `notTriggerRender`\n      !shouldTriggerRender || shouldTriggerRender(prevProps.current, props)) {\n        renderTimesRef.current += 1;\n      }\n      prevProps.current = props;\n      return /*#__PURE__*/React.createElement(ImmutableContext.Provider, {\n        value: renderTimesRef.current\n      }, /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps)));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableRoot(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.forwardRef(ImmutableComponent) : ImmutableComponent;\n  }\n\n  /**\n   * Wrapped Component with `React.memo`.\n   * But will rerender when parent with `makeImmutable` rerender.\n   */\n  function responseImmutable(Component, propsAreEqual) {\n    var refAble = supportRef(Component);\n    var ImmutableComponent = function ImmutableComponent(props, ref) {\n      var refProps = refAble ? {\n        ref: ref\n      } : {};\n      useImmutableMark();\n      return /*#__PURE__*/React.createElement(Component, _extends({}, props, refProps));\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      ImmutableComponent.displayName = \"ImmutableResponse(\".concat(Component.displayName || Component.name, \")\");\n    }\n    return refAble ? /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(ImmutableComponent), propsAreEqual) : /*#__PURE__*/React.memo(ImmutableComponent, propsAreEqual);\n  }\n  return {\n    makeImmutable: makeImmutable,\n    responseImmutable: responseImmutable,\n    useImmutableMark: useImmutableMark\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}