{"ast":null,"code":"var _jsxFileName = \"/Users/jmmallon/git/AlamedaFoodBankTicketSystem/src/CreateTicketForm2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button, Modal, Select, message } from 'antd';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst CreateTicketForm2 = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [latestTicket, setLatestTicket] = useState(null);\n  const [isDialogVisible, setDialogVisible] = useState(false); // State to manage dialog visibility\n  const [showTimePicker, setShowTimePicker] = useState(false); // State for showing TimePicker\n  const [selectedTime, setSelectedTime] = useState(getCurrentTimeSlot());\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Generate the time slots\n  const generateTimeSlots = () => {\n    const times = [];\n    for (let i = 11; i <= 19; i++) {\n      // Loop from 11 to 19 (11AM to 7PM)\n      if (i !== 11) times.push(`${i <= 12 ? i : i - 12}:00 ${i < 12 ? 'AM' : 'PM'}`);\n      times.push(`${i <= 12 ? i : i - 12}:30 ${i < 12 ? 'AM' : 'PM'}`);\n    }\n    return times;\n  };\n  const timeSlots = generateTimeSlots();\n  function getCurrentTimeSlot() {\n    const now = moment();\n    const minutes = now.minutes();\n    const isHalfHour = minutes >= 30;\n    const rounded = isHalfHour ? 30 : 0;\n    return now.set({\n      'minute': rounded,\n      'second': 0\n    }).format('hh:mm A');\n  }\n  ;\n  const attachPrinter = async () => {\n    try {\n      const device = await navigator.usb.requestDevice({\n        filters: []\n      });\n      console.log(device);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const printTicket = async () => {\n    fetchLatestTicket();\n    const content = latestTicket.positionInLine ? latestTicket.positionInLine : \"#2#\";\n    const devices = await navigator.usb.getDevices();\n    // devices.forEach((device) => {\n    // console.log(`Name: ${device.productName}, Serial: ${device.serialNumber}`);\n    // });\n    const device = devices.pop();\n    await device.open();\n    await device.selectConfiguration(1);\n    await device.claimInterface(0);\n    await device.transferOut(device.configuration.interfaces[0].alternate.endpoints.find(obj => obj.direction === 'out').endpointNumber, new Uint8Array(new TextEncoder().encode(\"^XA^LL400^CF0,200,200^FO52,120,2^FD\" + content + \"^XZ\")));\n    await device.close();\n  };\n  const testPrinter = async () => {\n    const devices = await navigator.usb.getDevices();\n    const device = devices.pop();\n    await device.open();\n    await device.selectConfiguration(1);\n    await device.claimInterface(0);\n    await device.transferOut(device.configuration.interfaces[0].alternate.endpoints.find(obj => obj.direction === 'out').endpointNumber, new Uint8Array(new TextEncoder().encode(\"^XA^LL400^CF0,200,200^FO52,120,2^FDTest^XZ\")));\n    await device.close();\n  };\n  const fetchLatestTicket = async () => {\n    try {\n      const response = await fetch(\"http://\" + window.location.hostname + \":8888/tickets/latest\");\n      if (response.ok) {\n        const data = await response.json();\n        setLatestTicket(data);\n        console.log(\"latest ticket\", data);\n      } else {\n        console.error(\"Error fetching latest ticket:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching latest ticket:\", error);\n    }\n  };\n  const fetchLatestTicketNum = async () => {\n    try {\n      const response = await fetch(\"http://\" + window.location.hostname + \":8888/tickets/latestnum\");\n      if (response.ok) {\n        const data = await response.json();\n        setLatestTicket(data);\n        console.log(\"latest ticket num\", data);\n        form.setFieldsValue({\n          positionInLine: data.positionInLine + 1\n        });\n      } else {\n        console.error(\"Error fetching latest ticket:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching latest ticket:\", error);\n    }\n  };\n  useEffect(() => {\n    // Fetch tickets data from the backend\n    fetch(\"http://\" + window.location.hostname + \":8888/tickets\").then(response => response.json()).then(data => {\n      console.log(data); // Log the fetched data\n    }).catch(error => console.error(\"Error fetching tickets:\", error));\n    fetchLatestTicket();\n  }, [form]);\n  const handleDialogOk = () => {\n    setDialogVisible(false);\n  };\n  function convertToTimeDate(inputString) {\n    const parts = inputString.match(/(\\d+):(\\d+) (\\w+)/);\n    if (!parts) {\n      throw new Error(\"Invalid time format\");\n    }\n    const hour = parseInt(parts[1], 10);\n    const minute = parseInt(parts[2], 10);\n    const period = parts[3];\n\n    // Create a new Date object with the current date\n    const date = new Date();\n    if (period === \"PM\" && hour !== 12) {\n      date.setHours(hour + 12);\n    } else if (period === \"AM\" && hour === 12) {\n      date.setHours(0); // Set to midnight if it's 12 AM\n    } else {\n      date.setHours(hour);\n    }\n    date.setMinutes(minute);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    return date;\n  }\n  const handleSubmit = values => {\n    // Create a new ticket with the current time\n    setIsLoading(true); // Set loading status to true at the start of submission\n\n    const currentTime = new Date().toLocaleTimeString();\n\n    // Get the selected time from TimePicker\n    console.log(\"values.scheduleAppointment: \", values.scheduleAppointment);\n    console.log(\"values.scheduleAppointment: \", selectedTime);\n    console.log(values);\n    var newData = {\n      ...values,\n      done: false,\n      // Set \"done\" to false before sending to the backend\n      time: currentTime\n    };\n    if (values.scheduleAppointment) {\n      const scheduleTime = convertToTimeDate(selectedTime);\n      console.log(\"selectedTime: \", selectedTime);\n      console.log(\"currentTimeInRightTimeZone: \", scheduleTime.toLocaleTimeString());\n      console.log(\"values.scheduleAppointmentTime: \", scheduleTime.scheduleAppointmentTime);\n      newData = {\n        ...values,\n        done: false,\n        // Set \"done\" to false before sending to the backend\n        time: currentTime,\n        scheduleAppointmentTime: scheduleTime\n      };\n    }\n    console.log(newData);\n    fetch(\"http://\" + window.location.hostname + \":8888/tickets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    }).then(response => response.json()).then(data => {\n      setIsLoading(false); // Set loading status to false if there's an error\n      // Fetch tickets data again to get the total number of tickets (including the newly created one)\n      fetch(\"http://\" + window.location.hostname + \":8888/tickets\").then(response => response.json()).then(data => {\n        console.log(data);\n        // Update the positionInLine to the next position in line\n        fetchLatestTicketNum();\n        // Show the dialog\n        setDialogVisible(true);\n        //Reset the form fields after successful submission\n        form.resetFields();\n        // Hide Appointment time picker\n        setShowTimePicker(false);\n        fetchLatestTicket();\n      }).catch(error => {\n        console.error(\"Error fetching tickets:\", error);\n        setIsLoading(false); // Set loading status to false if there's an error\n        message.error('Error creating ticket. Please try again later.'); // Display error message\n      });\n    }).catch(error => {\n      console.error(\"Error creating ticket:\", error);\n      setIsLoading(false); // Set loading status to false if there's an error\n      message.error('Error creating ticket. Please try again later.'); // Display error message\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please Sign In:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      onFinish: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"First Name\",\n        name: \"firstName\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Last Name\",\n        name: \"lastName\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Position in Line\",\n        initialValue: latestTicket && latestTicket.positionInLine ? latestTicket.positionInLine + 1 : \"1\",\n        name: \"positionInLine\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Additional Notes\",\n        initialValue: \"\",\n        name: \"additionalNotes\",\n        rules: [{\n          required: false\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"secondFamily\",\n        valuePropName: \"checked\",\n        initialValue: 0,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Additional Family\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"firstTimeVisitor\",\n        valuePropName: \"checked\",\n        initialValue: 0,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"First Time Visitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"scheduleAppointment\",\n        valuePropName: \"checked\",\n        initialValue: false,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: e => {\n            setShowTimePicker(e.target.checked);\n          },\n          children: \"Has Scheduled Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), showTimePicker && /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Scheduled Appointment Time:\",\n        name: \"scheduleAppointmentTime\",\n        initialValue: selectedTime,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: \"140\"\n          },\n          dropdownMatchSelectWidth: false,\n          value: selectedTime,\n          onChange: value => setSelectedTime(value),\n          children: timeSlots.map(time => /*#__PURE__*/_jsxDEV(Option, {\n            value: time,\n            children: time\n          }, time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isLoading,\n          disabled: isLoading,\n          children: \"Create Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        attachPrinter();\n      },\n      children: \"Attach printer\"\n    }, \"attachPrinter\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => {\n        testPrinter();\n      },\n      children: \"Test printer\"\n    }, \"device\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: isDialogVisible,\n      title: `Please take a seat`\n      //+ (latestTicket != null  && latestTicket.firstName != null) ? latestTicket.firstName : ''\n      ,\n      onCancel: handleDialogOk,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          printTicket();\n        },\n        children: \"Print Ticket\"\n      }, \"Print\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          handleDialogOk();\n        },\n        children: \"Ok\"\n      }, \"Ok\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [latestTicket ? latestTicket.firstName : \"\", \" \", latestTicket ? latestTicket.lastName : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }, this), latestTicket != null && console.log(\"Original Time for:\", latestTicket.scheduleAppointmentTime), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: latestTicket && latestTicket.scheduleAppointment ? getDateInPacTime(latestTicket.scheduleAppointmentTime.toString()) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"#\", latestTicket ? latestTicket.positionInLine ? latestTicket.positionInLine : \"2nd Family\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTicketForm2, \"qaFfI7Ugh4Ma7ogJZqvMoMDB7sU=\", false, function () {\n  return [Form.useForm];\n});\n_c = CreateTicketForm2;\nconst getDateInPacTime = newDate => {\n  //   let dateStr = newDate + \"Z\"; // Adding 'Z' to indicate it's UTC\n  const dateObj = new Date(newDate);\n  const pacificTime = dateObj.toLocaleTimeString(\"en-US\", {\n    timeZone: \"America/Los_Angeles\",\n    hour12: true,\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pacificTime\n  }, void 0, false);\n};\nconst styles = {\n  container: {\n    padding: \"30px\"\n  }\n};\nexport default CreateTicketForm2;\nvar _c;\n$RefreshReg$(_c, \"CreateTicketForm2\");","map":{"version":3,"names":["React","useState","useEffect","Form","Input","Checkbox","Button","Modal","Select","message","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","CreateTicketForm2","_s","form","useForm","latestTicket","setLatestTicket","isDialogVisible","setDialogVisible","showTimePicker","setShowTimePicker","selectedTime","setSelectedTime","getCurrentTimeSlot","isLoading","setIsLoading","generateTimeSlots","times","i","push","timeSlots","now","minutes","isHalfHour","rounded","set","format","attachPrinter","device","navigator","usb","requestDevice","filters","console","log","error","printTicket","fetchLatestTicket","content","positionInLine","devices","getDevices","pop","open","selectConfiguration","claimInterface","transferOut","configuration","interfaces","alternate","endpoints","find","obj","direction","endpointNumber","Uint8Array","TextEncoder","encode","close","testPrinter","response","fetch","window","location","hostname","ok","data","json","statusText","fetchLatestTicketNum","setFieldsValue","then","catch","handleDialogOk","convertToTimeDate","inputString","parts","match","Error","hour","parseInt","minute","period","date","Date","setHours","setMinutes","setSeconds","setMilliseconds","handleSubmit","values","currentTime","toLocaleTimeString","scheduleAppointment","newData","done","time","scheduleTime","scheduleAppointmentTime","method","headers","body","JSON","stringify","resetFields","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onFinish","Item","label","name","rules","required","initialValue","type","disabled","TextArea","rows","valuePropName","onChange","e","target","checked","width","dropdownMatchSelectWidth","value","map","htmlType","loading","onClick","visible","title","onCancel","footer","firstName","lastName","getDateInPacTime","toString","_c","newDate","dateObj","pacificTime","timeZone","hour12","padding","$RefreshReg$"],"sources":["/Users/jmmallon/git/AlamedaFoodBankTicketSystem/src/CreateTicketForm2.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button, Modal, Select, message } from 'antd';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst CreateTicketForm2 = () => {\n    const [form] = Form.useForm();\n    const [latestTicket, setLatestTicket] = useState(null);\n    const [isDialogVisible, setDialogVisible] = useState(false); // State to manage dialog visibility\n    const [showTimePicker, setShowTimePicker] = useState(false); // State for showing TimePicker\n    const [selectedTime, setSelectedTime] = useState(getCurrentTimeSlot());\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Generate the time slots\n    const generateTimeSlots = () => {\n        const times = [];\n        for (let i = 11; i <= 19; i++) { // Loop from 11 to 19 (11AM to 7PM)\n            if (i !== 11)\n            times.push(`${i <= 12 ? i : i - 12}:00 ${i < 12 ? 'AM' : 'PM'}`);\n            times.push(`${i <= 12 ? i : i - 12}:30 ${i < 12 ? 'AM' : 'PM'}`);\n        }\n        return times;\n    };\n    const timeSlots = generateTimeSlots();\n\n    function getCurrentTimeSlot() {\n        const now = moment();\n        const minutes = now.minutes();\n        const isHalfHour = minutes >= 30;\n        const rounded = isHalfHour ? 30 : 0;\n\n        return now.set({ 'minute': rounded, 'second': 0 }).format('hh:mm A');\n    }; \n\n    const attachPrinter = async () => {\n  \ttry {\n    \t    const device = await navigator.usb.requestDevice({ filters: [] });\n    \t    console.log(device);\n  \t} catch (error) {\n    \t    console.error(error);\n  \t}\n    }; \n\n    const printTicket = async () => {\n        fetchLatestTicket();\n        const content = latestTicket.positionInLine ? latestTicket.positionInLine : \"#2#\";\n\tconst devices = await navigator.usb.getDevices();\n  \t// devices.forEach((device) => {\n    \t    // console.log(`Name: ${device.productName}, Serial: ${device.serialNumber}`);\n  \t// });\n        const device = devices.pop();\n  \tawait device.open();\n  \tawait device.selectConfiguration(1);\n  \tawait device.claimInterface(0);\n  \tawait device.transferOut(\n    \tdevice.configuration.interfaces[0].alternate.endpoints.find(obj => obj.direction === 'out').endpointNumber,\n    \t    new Uint8Array(\n      \t        new TextEncoder().encode(\"^XA^LL400^CF0,200,200^FO52,120,2^FD\" + content + \"^XZ\")\n    \t    ),\n  \t);\n  \tawait device.close();\n    };\n\n    const testPrinter = async () => {\n\tconst devices = await navigator.usb.getDevices();\n        const device = devices.pop();\n  \tawait device.open();\n  \tawait device.selectConfiguration(1);\n  \tawait device.claimInterface(0);\n  \tawait device.transferOut(\n    \tdevice.configuration.interfaces[0].alternate.endpoints.find(obj => obj.direction === 'out').endpointNumber,\n    \t    new Uint8Array(\n      \t        new TextEncoder().encode(\"^XA^LL400^CF0,200,200^FO52,120,2^FDTest^XZ\")\n    \t    ),\n  \t);\n  \tawait device.close();\n    };\n\n    const fetchLatestTicket = async () => {\n        try {\n            const response = await fetch(\n                \"http://\" + window.location.hostname + \":8888/tickets/latest\"\n            );\n            if (response.ok) {\n                const data = await response.json();\n                setLatestTicket(data);\n                console.log(\"latest ticket\", data);\n\n            } else {\n                console.error(\"Error fetching latest ticket:\", response.statusText);\n            }\n        } catch (error) {\n            console.error(\"Error fetching latest ticket:\", error);\n        }\n    };\n\n    const fetchLatestTicketNum = async () => {\n        try {\n            const response = await fetch(\n                \"http://\" + window.location.hostname + \":8888/tickets/latestnum\"\n            );\n            if (response.ok) {\n                const data = await response.json();\n                setLatestTicket(data);\n                console.log(\"latest ticket num\", data);\n\n                form.setFieldsValue({\n                    positionInLine: data.positionInLine + 1,\n                });\n            } else {\n                console.error(\"Error fetching latest ticket:\", response.statusText);\n            }\n        } catch (error) {\n            console.error(\"Error fetching latest ticket:\", error);\n        }\n    };\n\n    useEffect(() => {\n        // Fetch tickets data from the backend\n        fetch(\"http://\" + window.location.hostname + \":8888/tickets\")\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data); // Log the fetched data\n            })\n            .catch((error) => console.error(\"Error fetching tickets:\", error));\n        fetchLatestTicket();\n    }, [form]);\n\n    const handleDialogOk = () => {\n        setDialogVisible(false);\n    };\n\n    function convertToTimeDate(inputString) {\n        const parts = inputString.match(/(\\d+):(\\d+) (\\w+)/);\n        if (!parts) {\n            throw new Error(\"Invalid time format\");\n        }\n    \n        const hour = parseInt(parts[1], 10);\n        const minute = parseInt(parts[2], 10);\n        const period = parts[3];\n    \n        // Create a new Date object with the current date\n        const date = new Date();\n    \n        if (period === \"PM\" && hour !== 12) {\n            date.setHours(hour + 12);\n        } else if (period === \"AM\" && hour === 12) {\n            date.setHours(0);  // Set to midnight if it's 12 AM\n        } else {\n            date.setHours(hour);\n        }\n        date.setMinutes(minute);\n        date.setSeconds(0);\n        date.setMilliseconds(0);\n    \n        return date;\n    }\n\n    const handleSubmit = (values) => {\n        // Create a new ticket with the current time\n        setIsLoading(true); // Set loading status to true at the start of submission\n\n        const currentTime = new Date().toLocaleTimeString();\n        \n        // Get the selected time from TimePicker\n        console.log(\"values.scheduleAppointment: \", values.scheduleAppointment);\n        console.log(\"values.scheduleAppointment: \", selectedTime);\n        console.log(values);\n\n        var newData = {\n            ...values,\n            done: false, // Set \"done\" to false before sending to the backend\n            time: currentTime,\n        };\n        \n\n        if (values.scheduleAppointment) {\n            const scheduleTime =convertToTimeDate(selectedTime)\n\n\n            console.log(\"selectedTime: \", selectedTime);\n            console.log(\n                \"currentTimeInRightTimeZone: \",\n                scheduleTime.toLocaleTimeString()\n            );\n            console.log(\n                \"values.scheduleAppointmentTime: \",\n                scheduleTime.scheduleAppointmentTime\n            );\n            newData = {\n                ...values,\n                done: false, // Set \"done\" to false before sending to the backend\n                time: currentTime,\n                scheduleAppointmentTime: scheduleTime,\n            };\n        }\nconsole.log(newData);\n        fetch(\"http://\" + window.location.hostname + \":8888/tickets\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newData),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                setIsLoading(false);  // Set loading status to false if there's an error\n                // Fetch tickets data again to get the total number of tickets (including the newly created one)\n                fetch(\"http://\" + window.location.hostname + \":8888/tickets\")\n                    .then((response) => response.json())\n                    .then((data) => {\nconsole.log(data);\n                        // Update the positionInLine to the next position in line\n                        fetchLatestTicketNum();\n                        // Show the dialog\n                        setDialogVisible(true);\n                        //Reset the form fields after successful submission\n                        form.resetFields();\n                        // Hide Appointment time picker\n                        setShowTimePicker(false);\n                        fetchLatestTicket();\n                    })\n                    .catch((error) => {\n                        console.error(\"Error fetching tickets:\", error);\n                        setIsLoading(false);  // Set loading status to false if there's an error\n                        message.error('Error creating ticket. Please try again later.');  // Display error message\n\n                    });\n            })\n            .catch((error) => {\n                console.error(\"Error creating ticket:\", error);\n                setIsLoading(false);  // Set loading status to false if there's an error\n                message.error('Error creating ticket. Please try again later.');  // Display error message\n\n            });\n    };\n\n    return (\n        <div style={styles.container}>\n            <h2>Please Sign In:</h2>\n            <br />\n            <Form form={form} onFinish={handleSubmit}>\n                <Form.Item\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    rules={[{ required: true }]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    rules={[{ required: true }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Position in Line\"\n                    initialValue={\n                        latestTicket && latestTicket.positionInLine\n                            ? latestTicket.positionInLine + 1\n                            : \"1\"\n                    }\n                    name=\"positionInLine\"\n                >\n                    <Input type=\"number\" disabled />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Additional Notes\"\n                    initialValue={\"\"}\n                    name=\"additionalNotes\"\n                    rules={[{ required: false }]}\n                >\n                    <Input.TextArea rows={4} />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"secondFamily\"\n                    valuePropName=\"checked\"\n                    initialValue={0}\n                >\n                    <Checkbox>Additional Family</Checkbox>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"firstTimeVisitor\"\n                    valuePropName=\"checked\"\n                    initialValue={0}\n                >\n                    <Checkbox>First Time Visitor</Checkbox>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"scheduleAppointment\"\n                    valuePropName=\"checked\"\n                    initialValue={false}\n                >\n                    <Checkbox\n                        onChange={(e) => {\n                            setShowTimePicker(e.target.checked);\n                        }}\n                    >\n                        Has Scheduled Appointment\n                    </Checkbox>\n                </Form.Item>\n\n\n                {showTimePicker && (\n                    <Form.Item\n                        label=\"Scheduled Appointment Time:\"\n                        name=\"scheduleAppointmentTime\"\n                        initialValue={selectedTime}\n                    >\n                        <Select\n                            style={{ width: \"140\" }}\n                            dropdownMatchSelectWidth={false}\n                            value={selectedTime}\n                            onChange={(value) => setSelectedTime(value)}\n                        >\n                            {timeSlots.map((time) => (\n                                <Option key={time} value={time}>\n                                    {time}\n                                </Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n                )}\n\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isLoading} disabled={isLoading}>\n                        Create Ticket\n                    </Button>\n                </Form.Item>\n            </Form>\n            <Button\n            key=\"attachPrinter\"\n            type=\"primary\"\n            onClick={() => {\n            attachPrinter();\n            }}\n            >\n            Attach printer\n            </Button>\n            <Button\n            key=\"device\"\n            type=\"primary\"\n            onClick={() => {\n            testPrinter();\n            }}\n            >\n            Test printer\n            </Button>\n\n            {\n                <Modal\n                    visible={isDialogVisible}\n                    title={`Please take a seat`}\n                    //+ (latestTicket != null  && latestTicket.firstName != null) ? latestTicket.firstName : ''\n                    onCancel={handleDialogOk}\n                    footer={[\n                        <Button\n                            key=\"Print\"\n                            type=\"primary\"\n                            onClick={() => {\n                                printTicket();\n                            }}\n                        >\n                            Print Ticket\n                        </Button>,\n                    \n                        <Button\n                            key=\"Ok\"\n                            type=\"primary\"\n                            onClick={() => {\n                                handleDialogOk();\n                            }}\n                        >\n                            Ok\n                        </Button>,\n                    ]}\n                >\n                    <p>\n                        {latestTicket ? latestTicket.firstName : \"\"}{\" \"}\n                        {latestTicket ? latestTicket.lastName : \"\"}{\" \"}\n                    </p>\n\n                    {latestTicket != null &&\n                        console.log(\n                            \"Original Time for:\",\n                            latestTicket.scheduleAppointmentTime\n                        )}\n                    <p>\n                        {latestTicket && latestTicket.scheduleAppointment\n                            ? getDateInPacTime(latestTicket.scheduleAppointmentTime.toString())\n                            : \"\"}\n                    </p>\n                    <p>#{latestTicket ? latestTicket.positionInLine ? latestTicket.positionInLine : \"2nd Family\" : \"\"}</p>\n                </Modal>\n            }\n        </div>\n    );\n};\n\nconst getDateInPacTime = (newDate) => {\n    //   let dateStr = newDate + \"Z\"; // Adding 'Z' to indicate it's UTC\n    const dateObj = new Date(newDate);\n    const pacificTime = dateObj.toLocaleTimeString(\"en-US\", {\n        timeZone: \"America/Los_Angeles\",\n        hour12: true,\n        hour: '2-digit',\n        minute: '2-digit'\n    });\n    return <>{pacificTime}</>;\n};\n\nconst styles = {\n    container: {\n        padding: \"30px\",\n    },\n};\n\nexport default CreateTicketForm2;\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}